import sys
import os
sys.path.append("/home/" + os.environ["USERNAME"] + "/College/Guided_HML/HeapStatee")
from mstate import Chunk, HeapState as h

f = open(sys.argv[1])
line = f.readline()

def skip_lines():
    global f
    global line
    while line:
        if line.find("Breakpoint 2 at") != -1:
            break
        line = f.readline()

        
def contains(line, subst):
    if line.find(subst) == -1:
        return False
    else:
        return True

def parse_chunk(s):
    #Chunk(addr=0x6052e0, size=0x30, flags=PREV_INUSE)
    if s[:6] != "Chunk(":
        return None
    asidx = s.find('addr=')+5
    aeidx = s.find(',', asidx)
    addr = s[asidx:aeidx+1]
    ssidx = s.find('size=')+5
    seidx = s.find(',', ssidx)
    size = s[ssidx:seidx+1]
    fsidx = s.find("flags=")+6
    feidx = s.find(")", fsidx)
    if contains(s[fsidx:feidx+1], 'PREV_INUSE'):
        pi=True
    else:
        pi=False
    c = Chunk()
    c.address
        
    
def parse_fastbins():
    global line
    global f
    
    
def parse_line():
    global line
    global f
    while line:
        if contains(line, "Tcache"):
            continue
        elif contains(line, "Fastbins for arena"):
            parse_fastbins()
        
        
        line = f.readline()
    

if __name__ == '__main__':

    #skip first lines
    
    while line:
        print( line)
        line = f.readline()
