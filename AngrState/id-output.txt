1000
External Libraries  ['../../tools/glibc-dir/install/lib64/libc-2.27.so', '/home/ajinkya/Guided_HLM/tools/glibc-dir/install/lib64/ld-2.27.so']
id : <ELF Object id, maps [0x400000:0x60a297]> : /home/ajinkya/Guided_HLM/eval/Repos/coreutils-8.32/bin/id
libc.so.6 : <ELF Object libc-2.27.so, maps [0x700000:0xab3adf]> : /home/ajinkya/Guided_HLM/tools/glibc-dir/install/lib64/libc-2.27.so
ld-linux-x86-64.so.2 : <ELF Object ld-2.27.so, maps [0xb00000:0xd2616f]> : /home/ajinkya/Guided_HLM/tools/glibc-dir/install/lib64/ld-2.27.so
libselinux.so.1 : <ELF Object libselinux.so.1, maps [0xe00000:0x10278cf]> : /lib/x86_64-linux-gnu/libselinux.so.1
libpcre.so.3 : <ELF Object libpcre.so.3.13.3, maps [0x1100000:0x1371107]> : /lib/x86_64-linux-gnu/libpcre.so.3.13.3
libdl.so.2 : <ELF Object libdl-2.27.so, maps [0x1400000:0x160310f]> : /lib/x86_64-linux-gnu/libdl-2.27.so
libpthread.so.0 : <ELF Object libpthread-2.27.so, maps [0x1700000:0x191e47f]> : /lib/x86_64-linux-gnu/libpthread-2.27.so
extern-address space : <ExternObject Object cle##externs, maps [0x1b00000:0x1b08000]> : cle##externs
cle##tls : <ELFTLSObjectV2 Object cle##tls, maps [0x1c00000:0x1c15010]> : cle##tls
[+] hooking malloc
[+] hooking calloc
[+] hooking free
[+] hooking reallloc
[+] hooking perror
[+] hooking fopen64
[+] hooking seek
[+] hooking tell
Heap starting at  0x2000000
10:06:40 active states =  1 rip =  0x402450
stashes  [<SimState @ 0x402450>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000000 size =  0x1edb0 free =  True prev_size =  0x0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1c
rbp : 0x0
rbx : 0x0
rcx : 0x0
rdi : 0x0
rdx : 0x0
rflags : 0x0
rip : 0x402450
rsi : 0x0
rsp : 0x7fffffffffeff48
0x402450:	xor	ebp, ebp
0x402452:	mov	r9, rdx
0x402455:	pop	rsi
0x402456:	mov	rdx, rsp
0x402459:	and	rsp, 0xfffffffffffffff0
0x40245d:	push	rax
0x40245e:	push	rsp
0x40245f:	lea	r8, [rip + 0x443a]
0x402466:	lea	rcx, [rip + 0x43c3]
0x40246d:	lea	rdi, [rip - 0x6a4]
0x402474:	call	qword ptr [rip + 0x207b66]

0x0 => 0x0()
> /home/ajinkya/Guided_HLM/HeapStatee/AngrState/angr-playground.py(261)<module>()
-> if(not stopping_condition()):
(Pdb) (Pdb) posix out b''
posix err b''
10:06:57 active states =  1 rip =  0x7219a0
stashes  [<SimState @ 0x7219a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000000 size =  0x1edb0 free =  True prev_size =  0x0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1c
rbp : 0x0
rbx : 0x0
rcx : 0x406830
rdi : 0x401dd0
rdx : 0x7fffffffffeff50
rflags : 0x4
rip : 0x7219a0
rsi : 0x2
rsp : 0x7fffffffffeff38
0x7219a0:	push	r13
0x7219a2:	push	r12
0x7219a4:	xor	eax, eax
0x7219a6:	push	rbp
0x7219a7:	push	rbx
0x7219a8:	mov	rbp, rcx
0x7219ab:	sub	rsp, 0x98
0x7219b2:	mov	qword ptr [rsp + 8], rdx
0x7219b7:	mov	rdx, qword ptr [rip + 0x38c57a]
0x7219be:	mov	qword ptr [rsp + 0x18], rdi
0x7219c3:	mov	dword ptr [rsp + 0x14], esi
0x7219c7:	test	rdx, rdx
0x7219ca:	je	0x7219d5

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
== Before Malloc ==

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000000 size =  0x1edb0 free =  True prev_size =  0x0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
rip 7219a0 malloc requested 0 with requst_size 768, allocated size 784, heap state before
== After Malloc ==

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000310 size =  0x1eaa0 free =  True prev_size =  0x310 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
rip 7219a0 malloc called 0 with requst_size 768, allocated size 784, allocated at 0x2000000
Backtrace:
Frame 0: 0x402450 => 0x7219a0, sp = 0x7fffffffffeff38
Frame 1: 0x0 => 0x0, sp = 0xffffffffffffffff
== Before Malloc ==

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000310 size =  0x1eaa0 free =  True prev_size =  0x310 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
rip 7219a0 malloc requested 1 with requst_size 8, allocated size 32, heap state before
== After Malloc ==

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000330 size =  0x1ea80 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
rip 7219a0 malloc called 1 with requst_size 8, allocated size 32, allocated at 0x2000310
Backtrace:
Frame 0: 0x402450 => 0x7219a0, sp = 0x7fffffffffeff38
Frame 1: 0x0 => 0x0, sp = 0xffffffffffffffff
== Before Malloc ==

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000330 size =  0x1ea80 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
rip 7219a0 malloc requested 2 with requst_size 1536, allocated size 1552, heap state before
== After Malloc ==

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000940 size =  0x1e470 free =  True prev_size =  0x610 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
rip 7219a0 malloc called 2 with requst_size 1536, allocated size 1552, allocated at 0x2000330
Backtrace:
Frame 0: 0x402450 => 0x7219a0, sp = 0x7fffffffffeff38
Frame 1: 0x0 => 0x0, sp = 0xffffffffffffffff
== Before Malloc ==

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000940 size =  0x1e470 free =  True prev_size =  0x610 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
rip 7219a0 malloc requested 3 with requst_size 8, allocated size 32, heap state before
== After Malloc ==

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000960 size =  0x1e450 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
rip 7219a0 malloc called 3 with requst_size 8, allocated size 32, allocated at 0x2000940
Backtrace:
Frame 0: 0x402450 => 0x7219a0, sp = 0x7fffffffffeff38
Frame 1: 0x0 => 0x0, sp = 0xffffffffffffffff
== Before Malloc ==

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000960 size =  0x1e450 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
rip 7219a0 malloc requested 4 with requst_size 1536, allocated size 1552, heap state before
== After Malloc ==

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000f70 size =  0x1de40 free =  True prev_size =  0x610 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
rip 7219a0 malloc called 4 with requst_size 1536, allocated size 1552, allocated at 0x2000960
Backtrace:
Frame 0: 0x402450 => 0x7219a0, sp = 0x7fffffffffeff38
Frame 1: 0x0 => 0x0, sp = 0xffffffffffffffff
== Before Malloc ==

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000f70 size =  0x1de40 free =  True prev_size =  0x610 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
rip 7219a0 malloc requested 5 with requst_size 8, allocated size 32, heap state before
== After Malloc ==

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000f90 size =  0x1de20 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
rip 7219a0 malloc called 5 with requst_size 8, allocated size 32, allocated at 0x2000f70
Backtrace:
Frame 0: 0x402450 => 0x7219a0, sp = 0x7fffffffffeff38
Frame 1: 0x0 => 0x0, sp = 0xffffffffffffffff
== Before Malloc ==

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000f90 size =  0x1de20 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
rip 7219a0 malloc requested 6 with requst_size 8, allocated size 32, heap state before
== After Malloc ==

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
rip 7219a0 malloc called 6 with requst_size 8, allocated size 32, allocated at 0x2000f90
Backtrace:
Frame 0: 0x402450 => 0x7219a0, sp = 0x7fffffffffeff38
Frame 1: 0x0 => 0x0, sp = 0xffffffffffffffff
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x406830
stashes  [<SimState @ 0x406830>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1c
rbp : 0x0
rbx : 0x0
rcx : 0x406830
rdi : 0x2
rdx : 0x7fffffffffeff68
rflags : 0x4
rip : 0x406830
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffeff28
0x406830:	push	r15
0x406832:	push	r14
0x406834:	mov	r15, rdx
0x406837:	push	r13
0x406839:	push	r12
0x40683b:	lea	r12, [rip + 0x2031ee]
0x406842:	push	rbp
0x406843:	lea	rbp, [rip + 0x2031ee]
0x40684a:	push	rbx
0x40684b:	mov	r13d, edi
0x40684e:	mov	r14, rsi
0x406851:	sub	rbp, r12
0x406854:	sub	rsp, 8
0x406858:	sar	rbp, 3
0x40685c:	call	0x4019e0

0x7219a0 => 0x406830(__libc_csu_init)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x4019e0
stashes  [<SimState @ 0x4019e0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x609a30
r12b : 0x30
r12d : 0x609a30
r12w : 0x9a30
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x7fffffffffeff50
r14b : 0x50
r14d : 0xfffeff50
r14w : 0xff50
r15 : 0x7fffffffffeff68
r15b : 0x68
r15d : 0xfffeff68
r15w : 0xff68
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1c
rbp : 0x1
rbx : 0x0
rcx : 0x406830
rdi : 0x2
rdx : 0x7fffffffffeff68
rflags : 0x800
rip : 0x4019e0
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefee8
0x4019e0:	sub	rsp, 8
0x4019e4:	mov	rax, qword ptr [rip + 0x2085fd]
0x4019eb:	test	rax, rax
0x4019ee:	je	0x4019f2

0x406830 => 0x4019e0(_init)
0x7219a0 => 0x406830(__libc_csu_init)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x4019f2
stashes  [<SimState @ 0x4019f2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x609a30
r12b : 0x30
r12d : 0x609a30
r12w : 0x9a30
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x7fffffffffeff50
r14b : 0x50
r14d : 0xfffeff50
r14w : 0xff50
r15 : 0x7fffffffffeff68
r15b : 0x68
r15d : 0xfffeff68
r15w : 0xff68
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x1
rbx : 0x0
rcx : 0x406830
rdi : 0x2
rdx : 0x7fffffffffeff68
rflags : 0x44
rip : 0x4019f2
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefee0
0x4019f2:	add	rsp, 8
0x4019f6:	ret	

0x406830 => 0x4019e0(_init)
0x7219a0 => 0x406830(__libc_csu_init)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x406861
stashes  [<SimState @ 0x406861>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x609a30
r12b : 0x30
r12d : 0x609a30
r12w : 0x9a30
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x7fffffffffeff50
r14b : 0x50
r14d : 0xfffeff50
r14w : 0xff50
r15 : 0x7fffffffffeff68
r15b : 0x68
r15d : 0xfffeff68
r15w : 0xff68
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x1
rbx : 0x0
rcx : 0x406830
rdi : 0x2
rdx : 0x7fffffffffeff68
rflags : 0x4
rip : 0x406861
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefef0
0x406861:	test	rbp, rbp
0x406864:	je	0x406886

0x7219a0 => 0x406830(__libc_csu_init)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x406866
stashes  [<SimState @ 0x406866>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x609a30
r12b : 0x30
r12d : 0x609a30
r12w : 0x9a30
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x7fffffffffeff50
r14b : 0x50
r14d : 0xfffeff50
r14w : 0xff50
r15 : 0x7fffffffffeff68
r15b : 0x68
r15d : 0xfffeff68
r15w : 0xff68
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x1
rbx : 0x0
rcx : 0x406830
rdi : 0x2
rdx : 0x7fffffffffeff68
rflags : 0x0
rip : 0x406866
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefef0
0x406866:	xor	ebx, ebx
0x406868:	nop	dword ptr [rax + rax]
0x406870:	mov	rdx, r15
0x406873:	mov	rsi, r14
0x406876:	mov	edi, r13d
0x406879:	call	qword ptr [r12 + rbx*8]

0x7219a0 => 0x406830(__libc_csu_init)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x402550
stashes  [<SimState @ 0x402550>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x609a30
r12b : 0x30
r12d : 0x609a30
r12w : 0x9a30
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x7fffffffffeff50
r14b : 0x50
r14d : 0xfffeff50
r14w : 0xff50
r15 : 0x7fffffffffeff68
r15b : 0x68
r15d : 0xfffeff68
r15w : 0xff68
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x1
rbx : 0x0
rcx : 0x406830
rdi : 0x2
rdx : 0x7fffffffffeff68
rflags : 0x44
rip : 0x402550
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefee8
0x402550:	push	rbp
0x402551:	mov	rbp, rsp
0x402554:	pop	rbp
0x402555:	jmp	0x4024c0

0x406866 => 0x402550(frame_dummy)
0x7219a0 => 0x406830(__libc_csu_init)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x4024c0
stashes  [<SimState @ 0x4024c0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x609a30
r12b : 0x30
r12d : 0x609a30
r12w : 0x9a30
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x7fffffffffeff50
r14b : 0x50
r14d : 0xfffeff50
r14w : 0xff50
r15 : 0x7fffffffffeff68
r15b : 0x68
r15d : 0xfffeff68
r15w : 0xff68
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x1
rbx : 0x0
rcx : 0x406830
rdi : 0x2
rdx : 0x7fffffffffeff68
rflags : 0x44
rip : 0x4024c0
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefee8
0x4024c0:	lea	rdi, [rip + 0x207bd9]
0x4024c7:	lea	rsi, [rip + 0x207bd2]
0x4024ce:	push	rbp
0x4024cf:	sub	rsi, rdi
0x4024d2:	mov	rbp, rsp
0x4024d5:	sar	rsi, 3
0x4024d9:	mov	rax, rsi
0x4024dc:	shr	rax, 0x3f
0x4024e0:	add	rsi, rax
0x4024e3:	sar	rsi, 1
0x4024e6:	je	0x402500

0x406866 => 0x402550(frame_dummy)
0x7219a0 => 0x406830(__libc_csu_init)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x402500
stashes  [<SimState @ 0x402500>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x609a30
r12b : 0x30
r12d : 0x609a30
r12w : 0x9a30
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x7fffffffffeff50
r14b : 0x50
r14d : 0xfffeff50
r14w : 0xff50
r15 : 0x7fffffffffeff68
r15b : 0x68
r15d : 0xfffeff68
r15w : 0xff68
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefee0
rbx : 0x0
rcx : 0x406830
rdi : 0x60a0a0
rdx : 0x7fffffffffeff68
rflags : 0x44
rip : 0x402500
rsi : 0x0
rsp : 0x7fffffffffefee0
0x402500:	pop	rbp
0x402501:	ret	

0x406866 => 0x402550(frame_dummy)
0x7219a0 => 0x406830(__libc_csu_init)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x40687d
stashes  [<SimState @ 0x40687d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x609a30
r12b : 0x30
r12d : 0x609a30
r12w : 0x9a30
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x7fffffffffeff50
r14b : 0x50
r14d : 0xfffeff50
r14w : 0xff50
r15 : 0x7fffffffffeff68
r15b : 0x68
r15d : 0xfffeff68
r15w : 0xff68
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x1
rbx : 0x0
rcx : 0x406830
rdi : 0x60a0a0
rdx : 0x7fffffffffeff68
rflags : 0x44
rip : 0x40687d
rsi : 0x0
rsp : 0x7fffffffffefef0
0x40687d:	add	rbx, 1
0x406881:	cmp	rbp, rbx
0x406884:	jne	0x406870

0x7219a0 => 0x406830(__libc_csu_init)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x406886
stashes  [<SimState @ 0x406886>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x609a30
r12b : 0x30
r12d : 0x609a30
r12w : 0x9a30
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x7fffffffffeff50
r14b : 0x50
r14d : 0xfffeff50
r14w : 0xff50
r15 : 0x7fffffffffeff68
r15b : 0x68
r15d : 0xfffeff68
r15w : 0xff68
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x1
rbx : 0x1
rcx : 0x406830
rdi : 0x60a0a0
rdx : 0x7fffffffffeff68
rflags : 0x44
rip : 0x406886
rsi : 0x0
rsp : 0x7fffffffffefef0
0x406886:	add	rsp, 8
0x40688a:	pop	rbx
0x40688b:	pop	rbp
0x40688c:	pop	r12
0x40688e:	pop	r13
0x406890:	pop	r14
0x406892:	pop	r15
0x406894:	ret	

0x7219a0 => 0x406830(__libc_csu_init)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x1b01080
stashes  [<SimState @ 0x1b01080>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x0
rbx : 0x0
rcx : 0x406830
rdi : 0x60a0a0
rdx : 0x7fffffffffeff68
rflags : 0x0
rip : 0x1b01080
rsi : 0x0
rsp : 0x7fffffffffeff30
0x1b01080:	add	byte ptr [rax], al
0x1b01082:	add	byte ptr [rax], al
0x1b01084:	add	byte ptr [rax], al
0x1b01086:	add	byte ptr [rax], al
0x1b01088:	add	byte ptr [rax], al
0x1b0108a:	add	byte ptr [rax], al
0x1b0108c:	add	byte ptr [rax], al
0x1b0108e:	add	byte ptr [rax], al
0x1b01090:	add	byte ptr [rax], al
0x1b01092:	add	byte ptr [rax], al
0x1b01094:	add	byte ptr [rax], al
0x1b01096:	add	byte ptr [rax], al
0x1b01098:	add	byte ptr [rax], al
0x1b0109a:	add	byte ptr [rax], al
0x1b0109c:	add	byte ptr [rax], al
0x1b0109e:	add	byte ptr [rax], al
0x1b010a0:	add	byte ptr [rax], al
0x1b010a2:	add	byte ptr [rax], al
0x1b010a4:	add	byte ptr [rax], al
0x1b010a6:	add	byte ptr [rax], al
0x1b010a8:	add	byte ptr [rax], al
0x1b010aa:	add	byte ptr [rax], al
0x1b010ac:	add	byte ptr [rax], al
0x1b010ae:	add	byte ptr [rax], al
0x1b010b0:	add	byte ptr [rax], al
0x1b010b2:	add	byte ptr [rax], al
0x1b010b4:	add	byte ptr [rax], al
0x1b010b6:	add	byte ptr [rax], al
0x1b010b8:	add	byte ptr [rax], al
0x1b010ba:	add	byte ptr [rax], al
0x1b010bc:	add	byte ptr [rax], al
0x1b010be:	add	byte ptr [rax], al
0x1b010c0:	add	byte ptr [rax], al
0x1b010c2:	add	byte ptr [rax], al
0x1b010c4:	add	byte ptr [rax], al
0x1b010c6:	add	byte ptr [rax], al
0x1b010c8:	add	byte ptr [rax], al
0x1b010ca:	add	byte ptr [rax], al
0x1b010cc:	add	byte ptr [rax], al
0x1b010ce:	add	byte ptr [rax], al
0x1b010d0:	add	byte ptr [rax], al
0x1b010d2:	add	byte ptr [rax], al
0x1b010d4:	add	byte ptr [rax], al
0x1b010d6:	add	byte ptr [rax], al
0x1b010d8:	add	byte ptr [rax], al
0x1b010da:	add	byte ptr [rax], al
0x1b010dc:	add	byte ptr [rax], al
0x1b010de:	add	byte ptr [rax], al
0x1b010e0:	add	byte ptr [rax], al
0x1b010e2:	add	byte ptr [rax], al
0x1b010e4:	add	byte ptr [rax], al
0x1b010e6:	add	byte ptr [rax], al
0x1b010e8:	add	byte ptr [rax], al
0x1b010ea:	add	byte ptr [rax], al
0x1b010ec:	add	byte ptr [rax], al
0x1b010ee:	add	byte ptr [rax], al
0x1b010f0:	add	byte ptr [rax], al
0x1b010f2:	add	byte ptr [rax], al
0x1b010f4:	add	byte ptr [rax], al
0x1b010f6:	add	byte ptr [rax], al
0x1b010f8:	add	byte ptr [rax], al
0x1b010fa:	add	byte ptr [rax], al
0x1b010fc:	add	byte ptr [rax], al
0x1b010fe:	add	byte ptr [rax], al
0x1b01100:	add	byte ptr [rax], al
0x1b01102:	add	byte ptr [rax], al
0x1b01104:	add	byte ptr [rax], al
0x1b01106:	add	byte ptr [rax], al
0x1b01108:	add	byte ptr [rax], al
0x1b0110a:	add	byte ptr [rax], al
0x1b0110c:	add	byte ptr [rax], al
0x1b0110e:	add	byte ptr [rax], al
0x1b01110:	add	byte ptr [rax], al
0x1b01112:	add	byte ptr [rax], al
0x1b01114:	add	byte ptr [rax], al
0x1b01116:	add	byte ptr [rax], al
0x1b01118:	add	byte ptr [rax], al
0x1b0111a:	add	byte ptr [rax], al
0x1b0111c:	add	byte ptr [rax], al
0x1b0111e:	add	byte ptr [rax], al
0x1b01120:	add	byte ptr [rax], al
0x1b01122:	add	byte ptr [rax], al
0x1b01124:	add	byte ptr [rax], al
0x1b01126:	add	byte ptr [rax], al
0x1b01128:	add	byte ptr [rax], al
0x1b0112a:	add	byte ptr [rax], al
0x1b0112c:	add	byte ptr [rax], al
0x1b0112e:	add	byte ptr [rax], al
0x1b01130:	add	byte ptr [rax], al
0x1b01132:	add	byte ptr [rax], al
0x1b01134:	add	byte ptr [rax], al
0x1b01136:	add	byte ptr [rax], al
0x1b01138:	add	byte ptr [rax], al
0x1b0113a:	add	byte ptr [rax], al
0x1b0113c:	add	byte ptr [rax], al
0x1b0113e:	add	byte ptr [rax], al
0x1b01140:	add	byte ptr [rax], al
0x1b01142:	add	byte ptr [rax], al
0x1b01144:	add	byte ptr [rax], al

0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x401dd0
stashes  [<SimState @ 0x401dd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x0
rbx : 0x0
rcx : 0x406830
rdi : 0x2
rdx : 0x7fffffffffeff68
rflags : 0x0
rip : 0x401dd0
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffeff28
0x401dd0:	push	r14
0x401dd2:	push	r13
0x401dd4:	lea	r13, [rip + 0x207c65]
0x401ddb:	push	r12
0x401ddd:	push	rbp
0x401dde:	mov	ebp, edi
0x401de0:	push	rbx
0x401de1:	mov	rbx, rsi
0x401de4:	call	0x401a40

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x401a40
stashes  [<SimState @ 0x401a40>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x406830
rdi : 0x2
rdx : 0x7fffffffffeff68
rflags : 0x0
rip : 0x401a40
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefef8
0x401a40:	jmp	qword ptr [rip + 0x2083d2]

0x401dd0 => 0x401a40(is_selinux_enabled)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0xe0c850
stashes  [<SimState @ 0xe0c850>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x406830
rdi : 0x2
rdx : 0x7fffffffffeff68
rflags : 0x0
rip : 0xe0c850
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefef8
0xe0c850:	mov	rdx, qword ptr [rip + 0x218721]
0xe0c857:	xor	eax, eax
0xe0c859:	cmp	qword ptr [rdx], 0
0xe0c85d:	je	0xe0c86c

0x401dd0 => 0x401a40(is_selinux_enabled)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0xe0c86c
stashes  [<SimState @ 0xe0c86c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x406830
rdi : 0x2
rdx : 0x1026588
rflags : 0x44
rip : 0xe0c86c
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefef8
0xe0c86c:	ret	

0x401dd0 => 0x401a40(is_selinux_enabled)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x401de9
stashes  [<SimState @ 0x401de9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x406830
rdi : 0x2
rdx : 0x1026588
rflags : 0x44
rip : 0x401de9
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffeff00
0x401de9:	mov	rdi, qword ptr [rbx]
0x401dec:	mov	r12d, eax
0x401def:	call	0x4032c0

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x4032c0
stashes  [<SimState @ 0x4032c0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x406830
rdi : 0x7fffffffffeff90
rdx : 0x1026588
rflags : 0x44
rip : 0x4032c0
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefef8
0x4032c0:	test	rdi, rdi
0x4032c3:	push	rbx
0x4032c4:	je	0x40333d

0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x4032c6
stashes  [<SimState @ 0x4032c6>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x406830
rdi : 0x7fffffffffeff90
rdx : 0x1026588
rflags : 0x4
rip : 0x4032c6
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefef0
0x4032c6:	mov	esi, 0x2f
0x4032cb:	mov	rbx, rdi
0x4032ce:	call	0x401b80

0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x401b80
stashes  [<SimState @ 0x401b80>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff90
rcx : 0x406830
rdi : 0x7fffffffffeff90
rdx : 0x1026588
rflags : 0x4
rip : 0x401b80
rsi : 0x2f
rsp : 0x7fffffffffefee8
0x401b80:	jmp	qword ptr [rip + 0x208332]

0x4032c6 => 0x401b80(strrchr)
0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x3501030
stashes  [<SimState @ 0x3501030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff90
rcx : 0x406830
rdi : 0x7fffffffffeff90
rdx : 0x1026588
rflags : 0x4
rip : 0x3501030
rsi : 0x2f
rsp : 0x7fffffffffefee8
No bytes in memory for block starting at 0x3501030.
Disassembly not available
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x784130
stashes  [<SimState @ 0x784130>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff90
rcx : 0x406830
rdi : 0x7fffffffffeff90
rdx : 0x1026588
rflags : 0x4
rip : 0x784130
rsi : 0x2f
rsp : 0x7fffffffffefed8
0x784130:	mov	rax, qword ptr [rip + 0x329d21]
0x784137:	lea	rdx, [rip + 0xce172]
0x78413e:	mov	eax, dword ptr [rax + 0xb4]
0x784144:	and	eax, 0x20c00
0x784149:	cmp	eax, 0xc00
0x78414e:	lea	rax, [rip + 0xf99b]
0x784155:	cmove	rax, rdx
0x784159:	ret	

0x3501030 => 0x784130(rindex)
0x4032c6 => 0x401b80(strrchr)
0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x1b01090
stashes  [<SimState @ 0x1b01090>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x793af0
rbp : 0x2
rbx : 0x7fffffffffeff90
rcx : 0x406830
rdi : 0x7fffffffffeff90
rdx : 0x8522b0
rflags : 0x85
rip : 0x1b01090
rsi : 0x2f
rsp : 0x7fffffffffefee0
0x1b01090:	add	byte ptr [rax], al
0x1b01092:	add	byte ptr [rax], al
0x1b01094:	add	byte ptr [rax], al
0x1b01096:	add	byte ptr [rax], al
0x1b01098:	add	byte ptr [rax], al
0x1b0109a:	add	byte ptr [rax], al
0x1b0109c:	add	byte ptr [rax], al
0x1b0109e:	add	byte ptr [rax], al
0x1b010a0:	add	byte ptr [rax], al
0x1b010a2:	add	byte ptr [rax], al
0x1b010a4:	add	byte ptr [rax], al
0x1b010a6:	add	byte ptr [rax], al
0x1b010a8:	add	byte ptr [rax], al
0x1b010aa:	add	byte ptr [rax], al
0x1b010ac:	add	byte ptr [rax], al
0x1b010ae:	add	byte ptr [rax], al
0x1b010b0:	add	byte ptr [rax], al
0x1b010b2:	add	byte ptr [rax], al
0x1b010b4:	add	byte ptr [rax], al
0x1b010b6:	add	byte ptr [rax], al
0x1b010b8:	add	byte ptr [rax], al
0x1b010ba:	add	byte ptr [rax], al
0x1b010bc:	add	byte ptr [rax], al
0x1b010be:	add	byte ptr [rax], al
0x1b010c0:	add	byte ptr [rax], al
0x1b010c2:	add	byte ptr [rax], al
0x1b010c4:	add	byte ptr [rax], al
0x1b010c6:	add	byte ptr [rax], al
0x1b010c8:	add	byte ptr [rax], al
0x1b010ca:	add	byte ptr [rax], al
0x1b010cc:	add	byte ptr [rax], al
0x1b010ce:	add	byte ptr [rax], al
0x1b010d0:	add	byte ptr [rax], al
0x1b010d2:	add	byte ptr [rax], al
0x1b010d4:	add	byte ptr [rax], al
0x1b010d6:	add	byte ptr [rax], al
0x1b010d8:	add	byte ptr [rax], al
0x1b010da:	add	byte ptr [rax], al
0x1b010dc:	add	byte ptr [rax], al
0x1b010de:	add	byte ptr [rax], al
0x1b010e0:	add	byte ptr [rax], al
0x1b010e2:	add	byte ptr [rax], al
0x1b010e4:	add	byte ptr [rax], al
0x1b010e6:	add	byte ptr [rax], al
0x1b010e8:	add	byte ptr [rax], al
0x1b010ea:	add	byte ptr [rax], al
0x1b010ec:	add	byte ptr [rax], al
0x1b010ee:	add	byte ptr [rax], al
0x1b010f0:	add	byte ptr [rax], al
0x1b010f2:	add	byte ptr [rax], al
0x1b010f4:	add	byte ptr [rax], al
0x1b010f6:	add	byte ptr [rax], al
0x1b010f8:	add	byte ptr [rax], al
0x1b010fa:	add	byte ptr [rax], al
0x1b010fc:	add	byte ptr [rax], al
0x1b010fe:	add	byte ptr [rax], al
0x1b01100:	add	byte ptr [rax], al
0x1b01102:	add	byte ptr [rax], al
0x1b01104:	add	byte ptr [rax], al
0x1b01106:	add	byte ptr [rax], al
0x1b01108:	add	byte ptr [rax], al
0x1b0110a:	add	byte ptr [rax], al
0x1b0110c:	add	byte ptr [rax], al
0x1b0110e:	add	byte ptr [rax], al
0x1b01110:	add	byte ptr [rax], al
0x1b01112:	add	byte ptr [rax], al
0x1b01114:	add	byte ptr [rax], al
0x1b01116:	add	byte ptr [rax], al
0x1b01118:	add	byte ptr [rax], al
0x1b0111a:	add	byte ptr [rax], al
0x1b0111c:	add	byte ptr [rax], al
0x1b0111e:	add	byte ptr [rax], al
0x1b01120:	add	byte ptr [rax], al
0x1b01122:	add	byte ptr [rax], al
0x1b01124:	add	byte ptr [rax], al
0x1b01126:	add	byte ptr [rax], al
0x1b01128:	add	byte ptr [rax], al
0x1b0112a:	add	byte ptr [rax], al
0x1b0112c:	add	byte ptr [rax], al
0x1b0112e:	add	byte ptr [rax], al
0x1b01130:	add	byte ptr [rax], al
0x1b01132:	add	byte ptr [rax], al
0x1b01134:	add	byte ptr [rax], al
0x1b01136:	add	byte ptr [rax], al
0x1b01138:	add	byte ptr [rax], al
0x1b0113a:	add	byte ptr [rax], al
0x1b0113c:	add	byte ptr [rax], al
0x1b0113e:	add	byte ptr [rax], al
0x1b01140:	add	byte ptr [rax], al
0x1b01142:	add	byte ptr [rax], al
0x1b01144:	add	byte ptr [rax], al
0x1b01146:	add	byte ptr [rax], al
0x1b01148:	add	byte ptr [rax], al
0x1b0114a:	add	byte ptr [rax], al
0x1b0114c:	add	byte ptr [rax], al
0x1b0114e:	add	byte ptr [rax], al
0x1b01150:	add	byte ptr [rax], al
0x1b01152:	add	byte ptr [rax], al
0x1b01154:	add	byte ptr [rax], al

0x4032c6 => 0x401b80(strrchr)
0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x793af0
stashes  [<SimState @ 0x793af0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x793af0
rbp : 0x2
rbx : 0x7fffffffffeff90
rcx : 0x406830
rdi : 0x7fffffffffeff90
rdx : 0x1026588
rflags : 0x85
rip : 0x793af0
rsi : 0x2f
rsp : 0x7fffffffffefee8
0x793af0:	movd	xmm1, esi
0x793af4:	mov	rax, rdi
0x793af7:	and	eax, 0xfff
0x793afc:	punpcklbw	xmm1, xmm1
0x793b00:	cmp	rax, 0xfc0
0x793b06:	punpcklwd	xmm1, xmm1
0x793b0a:	pshufd	xmm1, xmm1, 0
0x793b0f:	ja	0x793d10

0x4032c6 => 0x401b80(strrchr)
0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x793b15
stashes  [<SimState @ 0x793b15>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xf90
rbp : 0x2
rbx : 0x7fffffffffeff90
rcx : 0x406830
rdi : 0x7fffffffffeff90
rdx : 0x1026588
rflags : 0x81
rip : 0x793b15
rsi : 0x2f
rsp : 0x7fffffffffefee8
0x793b15:	movdqu	xmm0, xmmword ptr [rdi]
0x793b19:	pxor	xmm2, xmm2
0x793b1d:	movdqa	xmm3, xmm0
0x793b21:	pcmpeqb	xmm0, xmm1
0x793b25:	pcmpeqb	xmm3, xmm2
0x793b29:	pmovmskb	ecx, xmm0
0x793b2d:	pmovmskb	edx, xmm3
0x793b31:	test	rdx, rdx
0x793b34:	je	0x793b50

0x4032c6 => 0x401b80(strrchr)
0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:58 active states =  1 rip =  0x793b50
stashes  [<SimState @ 0x793b50>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x4068a0
r8b : 0xa0
r8d : 0x4068a0
r8w : 0x68a0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xf90
rbp : 0x2
rbx : 0x7fffffffffeff90
rcx : 0x424
rdi : 0x7fffffffffeff90
rdx : 0x0
rflags : 0x44
rip : 0x793b50
rsi : 0x2f
rsp : 0x7fffffffffefee8
0x793b50:	movdqu	xmm4, xmmword ptr [rdi + 0x10]
0x793b55:	movdqa	xmm5, xmm4
0x793b59:	movdqu	xmm3, xmmword ptr [rdi + 0x20]
0x793b5e:	pcmpeqb	xmm4, xmm1
0x793b62:	pcmpeqb	xmm5, xmm2
0x793b66:	movdqu	xmm0, xmmword ptr [rdi + 0x30]
0x793b6b:	pmovmskb	edx, xmm5
0x793b6f:	movdqa	xmm5, xmm3
0x793b73:	pcmpeqb	xmm3, xmm1
0x793b77:	pcmpeqb	xmm5, xmm2
0x793b7b:	pcmpeqb	xmm2, xmm0
0x793b7f:	shl	rdx, 0x10
0x793b83:	pmovmskb	r8d, xmm3
0x793b88:	pmovmskb	eax, xmm5
0x793b8c:	pmovmskb	esi, xmm2
0x793b90:	shl	r8, 0x20
0x793b94:	shl	rax, 0x20
0x793b98:	pcmpeqb	xmm0, xmm1
0x793b9c:	or	rax, rdx
0x793b9f:	mov	rdx, rsi
0x793ba2:	pmovmskb	esi, xmm4
0x793ba6:	shl	rdx, 0x30
0x793baa:	shl	rsi, 0x10
0x793bae:	or	rsi, r8
0x793bb1:	or	rsi, rcx
0x793bb4:	pmovmskb	ecx, xmm0
0x793bb8:	shl	rcx, 0x30
0x793bbc:	or	rsi, rcx
0x793bbf:	or	rax, rdx
0x793bc2:	je	0x793be0

0x4032c6 => 0x401b80(strrchr)
0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x793bc4
stashes  [<SimState @ 0x793bc4>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x8800000000
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x400004000000000
rbp : 0x2
rbx : 0x7fffffffffeff90
rcx : 0x1000000000000
rdi : 0x7fffffffffeff90
rdx : 0x400000000000000
rflags : 0x4
rip : 0x793bc4
rsi : 0x1008880010424
rsp : 0x7fffffffffefee8
0x793bc4:	lea	rcx, [rax - 1]
0x793bc8:	xor	rcx, rax
0x793bcb:	and	rsi, rcx
0x793bce:	je	0x793d00

0x4032c6 => 0x401b80(strrchr)
0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x793bd4
stashes  [<SimState @ 0x793bd4>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x8800000000
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x400004000000000
rbp : 0x2
rbx : 0x7fffffffffeff90
rcx : 0x7fffffffff
rdi : 0x7fffffffffeff90
rdx : 0x400000000000000
rflags : 0x4
rip : 0x793bd4
rsi : 0x880010424
rsp : 0x7fffffffffefee8
0x793bd4:	bsr	rsi, rsi
0x793bd8:	lea	rax, [rdi + rsi]
0x793bdc:	ret	

0x4032c6 => 0x401b80(strrchr)
0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x4032d3
stashes  [<SimState @ 0x4032d3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x8800000000
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffeffb3
rbp : 0x2
rbx : 0x7fffffffffeff90
rcx : 0x7fffffffff
rdi : 0x7fffffffffeff90
rdx : 0x400000000000000
rflags : 0x0
rip : 0x4032d3
rsi : 0x23
rsp : 0x7fffffffffefef0
0x4032d3:	test	rax, rax
0x4032d6:	je	0x40332d

0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x4032d8
stashes  [<SimState @ 0x4032d8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x8800000000
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffeffb3
rbp : 0x2
rbx : 0x7fffffffffeff90
rcx : 0x7fffffffff
rdi : 0x7fffffffffeff90
rdx : 0x400000000000000
rflags : 0x0
rip : 0x4032d8
rsi : 0x23
rsp : 0x7fffffffffefef0
0x4032d8:	lea	r8, [rax + 1]
0x4032dc:	mov	rdx, r8
0x4032df:	sub	rdx, rbx
0x4032e2:	cmp	rdx, 6
0x4032e6:	jle	0x40332d

0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x4032e8
stashes  [<SimState @ 0x4032e8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x7fffffffffeffb4
r8b : 0xb4
r8d : 0xfffeffb4
r8w : 0xffb4
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffeffb3
rbp : 0x2
rbx : 0x7fffffffffeff90
rcx : 0x7fffffffff
rdi : 0x7fffffffffeff90
rdx : 0x24
rflags : 0x14
rip : 0x4032e8
rsi : 0x23
rsp : 0x7fffffffffefef0
0x4032e8:	lea	rsi, [rax - 6]
0x4032ec:	lea	rdi, [rip + 0x3de5]
0x4032f3:	mov	ecx, 7
0x4032f8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]

0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x4032fa
stashes  [<SimState @ 0x4032fa>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x7fffffffffeffb4
r8b : 0xb4
r8d : 0xfffeffb4
r8w : 0xffb4
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffeffb3
rbp : 0x2
rbx : 0x7fffffffffeff90
rcx : 0x6
rdi : 0x4070d9
rdx : 0x24
rflags : 0x10
rip : 0x4032fa
rsi : 0x7fffffffffeffae
rsp : 0x7fffffffffefef0
0x4032fa:	seta	dl
0x4032fd:	sbb	dl, 0
0x403300:	test	dl, dl
0x403302:	jne	0x40332d

0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x40332d
stashes  [<SimState @ 0x40332d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x7fffffffffeffb4
r8b : 0xb4
r8d : 0xfffeffb4
r8w : 0xffb4
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffeffb3
rbp : 0x2
rbx : 0x7fffffffffeff90
rcx : 0x6
rdi : 0x4070d9
rdx : 0x1
rflags : 0x0
rip : 0x40332d
rsi : 0x7fffffffffeffae
rsp : 0x7fffffffffefef0
0x40332d:	mov	qword ptr [rip + 0x206e24], rbx
0x403334:	mov	qword ptr [rip + 0x206d7d], rbx
0x40333b:	pop	rbx
0x40333c:	ret	

0x401de9 => 0x4032c0(set_program_name)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x401df4
stashes  [<SimState @ 0x401df4>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x7fffffffffeffb4
r8b : 0xb4
r8d : 0xfffeffb4
r8w : 0xffb4
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffeffb3
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x6
rdi : 0x4070d9
rdx : 0x1
rflags : 0x0
rip : 0x401df4
rsi : 0x7fffffffffeffae
rsp : 0x7fffffffffeff00
0x401df4:	lea	rsi, [rip + 0x584e]
0x401dfb:	mov	edi, 6
0x401e00:	call	0x401cf0

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x401cf0
stashes  [<SimState @ 0x401cf0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x7fffffffffeffb4
r8b : 0xb4
r8d : 0xfffeffb4
r8w : 0xffb4
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffeffb3
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x6
rdi : 0x6
rdx : 0x1
rflags : 0x0
rip : 0x401cf0
rsi : 0x407649
rsp : 0x7fffffffffefef8
0x401cf0:	jmp	qword ptr [rip + 0x20827a]

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x72ab40
stashes  [<SimState @ 0x72ab40>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x7fffffffffeffb4
r8b : 0xb4
r8d : 0xfffeffb4
r8w : 0xffb4
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffeffb3
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x6
rdi : 0x6
rdx : 0x1
rflags : 0x0
rip : 0x72ab40
rsi : 0x407649
rsp : 0x7fffffffffefef8
0x72ab40:	push	r15
0x72ab42:	push	r14
0x72ab44:	movsxd	r14, edi
0x72ab47:	push	r13
0x72ab49:	push	r12
0x72ab4b:	push	rbp
0x72ab4c:	push	rbx
0x72ab4d:	sub	rsp, 0x118
0x72ab54:	cmp	r14, 0xc
0x72ab58:	ja	0x72ae38

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x72ab5e
stashes  [<SimState @ 0x72ab5e>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x7fffffffffeffb4
r8b : 0xb4
r8d : 0xfffeffb4
r8w : 0xffb4
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffeffb3
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x6
rdi : 0x6
rdx : 0x1
rflags : 0x95
rip : 0x72ab5e
rsi : 0x407649
rsp : 0x7fffffffffefdb0
0x72ab5e:	test	rsi, rsi
0x72ab61:	je	0x72adc0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x72ab67
stashes  [<SimState @ 0x72ab67>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x7fffffffffeffb4
r8b : 0xb4
r8d : 0xfffeffb4
r8w : 0xffb4
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffeffb3
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x6
rdi : 0x6
rdx : 0x1
rflags : 0x0
rip : 0x72ab67
rsi : 0x407649
rsp : 0x7fffffffffefdb0
0x72ab67:	mov	r8d, dword ptr [rip + 0x388d7a]
0x72ab6e:	mov	rbx, rsi
0x72ab71:	mov	ebp, edi
0x72ab73:	test	r8d, r8d
0x72ab76:	je	0x72ac00

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x72ac00
stashes  [<SimState @ 0x72ac00>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffeffb3
rbp : 0x6
rbx : 0x407649
rcx : 0x6
rdi : 0x6
rdx : 0x1
rflags : 0x44
rip : 0x72ac00
rsi : 0x407649
rsp : 0x7fffffffffefdb0
0x72ac00:	lea	r12, [rip + 0x384959]
0x72ac07:	mov	rdi, rbx
0x72ac0a:	mov	r15, qword ptr [r12 + r14*8 + 0x80]
0x72ac12:	mov	rsi, r15
0x72ac15:	call	0x721200

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffeffb3
rbp : 0x6
rbx : 0x407649
rcx : 0x6
rdi : 0x407649
rdx : 0x1
rflags : 0x44
rip : 0x721200
rsi : 0x877dd2
rsp : 0x7fffffffffefda8
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72ac00 => 0x721200()
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffeffb3
rbp : 0x6
rbx : 0x407649
rcx : 0x6
rdi : 0x407649
rdx : 0x1
rflags : 0x44
rip : 0x783bd0
rsi : 0x877dd2
rsp : 0x7fffffffffefda8
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72ac00 => 0x721200()
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x72ac1a
stashes  [<SimState @ 0x72ac1a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x6
rbx : 0x407649
rcx : 0x6
rdi : 0x407649
rdx : 0x1
rflags : 0x44
rip : 0x72ac1a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac1a:	test	eax, eax
0x72ac1c:	je	0x72abe2

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x72ac1e
stashes  [<SimState @ 0x72ac1e>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x6
rbx : 0x407649
rcx : 0x6
rdi : 0x407649
rdx : 0x1
rflags : 0x84
rip : 0x72ac1e
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac1e:	nop	
0x72ac20:	lea	rdi, [rip + 0x14b30c]
0x72ac27:	mov	qword ptr [rsp + 0x20], 0
0x72ac30:	mov	qword ptr [rsp + 0x28], 0
0x72ac39:	call	0x736420

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x6
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x84
rip : 0x736420
rsi : 0x877dd2
rsp : 0x7fffffffffefda8
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72ac1e => 0x736420(getenv)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x875f33
r13b : 0x33
r13d : 0x875f33
r13w : 0x5f33
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x6
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x0
rip : 0x721100
rsi : 0x877dd2
rsp : 0x7fffffffffefd68
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72ac1e => 0x736420(getenv)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x875f33
r13b : 0x33
r13d : 0x875f33
r13w : 0x5f33
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x6
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x0
rip : 0x784030
rsi : 0x877dd2
rsp : 0x7fffffffffefd68
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72ac1e => 0x736420(getenv)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x875f33
r13b : 0x33
r13d : 0x875f33
r13w : 0x5f33
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7
rbp : 0x6
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x0
rip : 0x736436
rsi : 0x877dd2
rsp : 0x7fffffffffefd70
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72ac1e => 0x736420(getenv)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x875f33
r13b : 0x33
r13d : 0x875f33
r13w : 0x5f33
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x0
rip : 0x73644c
rsi : 0x877dd2
rsp : 0x7fffffffffefd70
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72ac1e => 0x736420(getenv)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x875f33
r13b : 0x33
r13d : 0x875f33
r13w : 0x5f33
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x0
rip : 0x736459
rsi : 0x877dd2
rsp : 0x7fffffffffefd70
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72ac1e => 0x736420(getenv)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x875f33
r13b : 0x33
r13d : 0x875f33
r13w : 0x5f33
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x0
rip : 0x7364a0
rsi : 0x877dd2
rsp : 0x7fffffffffefd70
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72ac1e => 0x736420(getenv)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x4f4c
r12b : 0x4c
r12d : 0x4f4c
r12w : 0x4f4c
r13 : 0x875f35
r13b : 0x35
r13d : 0x875f35
r13w : 0x5f35
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x5
r15b : 0x5
r15d : 0x5
r15w : 0x5
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x44
rip : 0x7364b2
rsi : 0x877dd2
rsp : 0x7fffffffffefd70
0x7364b2:	jmp	0x736486

0x72ac1e => 0x736420(getenv)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x4f4c
r12b : 0x4c
r12d : 0x4f4c
r12w : 0x4f4c
r13 : 0x875f35
r13b : 0x35
r13d : 0x875f35
r13w : 0x5f35
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x5
r15b : 0x5
r15d : 0x5
r15w : 0x5
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x44
rip : 0x736486
rsi : 0x877dd2
rsp : 0x7fffffffffefd70
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72ac1e => 0x736420(getenv)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x72ac3e
stashes  [<SimState @ 0x72ac3e>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x6
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x4
rip : 0x72ac3e
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac3e:	test	rax, rax
0x72ac41:	je	0x72ac4c

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x72ac4c
stashes  [<SimState @ 0x72ac4c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x6
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x44
rip : 0x72ac4c
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac4c:	cmp	ebp, 6
0x72ac4f:	jne	0x72ae50

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x72ac55
stashes  [<SimState @ 0x72ac55>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x6
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x44
rip : 0x72ac55
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac55:	xor	eax, eax
0x72ac57:	lea	rbp, [rsp + 0x30]
0x72ac5c:	jmp	0x72ac64

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x72ac64
stashes  [<SimState @ 0x72ac64>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x44
rip : 0x72ac64
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac64:	cmp	rax, 6
0x72ac68:	je	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x72ac6a
stashes  [<SimState @ 0x72ac6a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x95
rip : 0x72ac6a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac6a:	cmp	eax, 0xc
0x72ac6d:	mov	qword ptr [rbp + rax*8], rbx
0x72ac72:	jne	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x72ac60
stashes  [<SimState @ 0x72ac60>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x91
rip : 0x72ac60
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac60:	add	rax, 1
0x72ac64:	cmp	rax, 6
0x72ac68:	je	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:06:59 active states =  1 rip =  0x72ac6a
stashes  [<SimState @ 0x72ac6a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x91
rip : 0x72ac6a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac6a:	cmp	eax, 0xc
0x72ac6d:	mov	qword ptr [rbp + rax*8], rbx
0x72ac72:	jne	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac60
stashes  [<SimState @ 0x72ac60>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x95
rip : 0x72ac60
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac60:	add	rax, 1
0x72ac64:	cmp	rax, 6
0x72ac68:	je	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac6a
stashes  [<SimState @ 0x72ac6a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x95
rip : 0x72ac6a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac6a:	cmp	eax, 0xc
0x72ac6d:	mov	qword ptr [rbp + rax*8], rbx
0x72ac72:	jne	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac60
stashes  [<SimState @ 0x72ac60>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x95
rip : 0x72ac60
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac60:	add	rax, 1
0x72ac64:	cmp	rax, 6
0x72ac68:	je	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac6a
stashes  [<SimState @ 0x72ac6a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x3
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x91
rip : 0x72ac6a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac6a:	cmp	eax, 0xc
0x72ac6d:	mov	qword ptr [rbp + rax*8], rbx
0x72ac72:	jne	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac60
stashes  [<SimState @ 0x72ac60>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x3
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x91
rip : 0x72ac60
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac60:	add	rax, 1
0x72ac64:	cmp	rax, 6
0x72ac68:	je	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac6a
stashes  [<SimState @ 0x72ac6a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x91
rip : 0x72ac6a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac6a:	cmp	eax, 0xc
0x72ac6d:	mov	qword ptr [rbp + rax*8], rbx
0x72ac72:	jne	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac60
stashes  [<SimState @ 0x72ac60>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x91
rip : 0x72ac60
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac60:	add	rax, 1
0x72ac64:	cmp	rax, 6
0x72ac68:	je	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac6a
stashes  [<SimState @ 0x72ac6a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x5
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x95
rip : 0x72ac6a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac6a:	cmp	eax, 0xc
0x72ac6d:	mov	qword ptr [rbp + rax*8], rbx
0x72ac72:	jne	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac60
stashes  [<SimState @ 0x72ac60>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x5
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x95
rip : 0x72ac60
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac60:	add	rax, 1
0x72ac64:	cmp	rax, 6
0x72ac68:	je	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac60
stashes  [<SimState @ 0x72ac60>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x44
rip : 0x72ac60
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac60:	add	rax, 1
0x72ac64:	cmp	rax, 6
0x72ac68:	je	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac6a
stashes  [<SimState @ 0x72ac6a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x0
rip : 0x72ac6a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac6a:	cmp	eax, 0xc
0x72ac6d:	mov	qword ptr [rbp + rax*8], rbx
0x72ac72:	jne	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac60
stashes  [<SimState @ 0x72ac60>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x91
rip : 0x72ac60
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac60:	add	rax, 1
0x72ac64:	cmp	rax, 6
0x72ac68:	je	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac6a
stashes  [<SimState @ 0x72ac6a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x8
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x0
rip : 0x72ac6a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac6a:	cmp	eax, 0xc
0x72ac6d:	mov	qword ptr [rbp + rax*8], rbx
0x72ac72:	jne	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac60
stashes  [<SimState @ 0x72ac60>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x8
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x95
rip : 0x72ac60
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac60:	add	rax, 1
0x72ac64:	cmp	rax, 6
0x72ac68:	je	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac6a
stashes  [<SimState @ 0x72ac6a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x9
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x4
rip : 0x72ac6a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac6a:	cmp	eax, 0xc
0x72ac6d:	mov	qword ptr [rbp + rax*8], rbx
0x72ac72:	jne	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac60
stashes  [<SimState @ 0x72ac60>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x9
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x91
rip : 0x72ac60
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac60:	add	rax, 1
0x72ac64:	cmp	rax, 6
0x72ac68:	je	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac6a
stashes  [<SimState @ 0x72ac6a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xa
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x0
rip : 0x72ac6a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac6a:	cmp	eax, 0xc
0x72ac6d:	mov	qword ptr [rbp + rax*8], rbx
0x72ac72:	jne	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac60
stashes  [<SimState @ 0x72ac60>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xa
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x91
rip : 0x72ac60
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac60:	add	rax, 1
0x72ac64:	cmp	rax, 6
0x72ac68:	je	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac6a
stashes  [<SimState @ 0x72ac6a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xb
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x4
rip : 0x72ac6a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac6a:	cmp	eax, 0xc
0x72ac6d:	mov	qword ptr [rbp + rax*8], rbx
0x72ac72:	jne	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac60
stashes  [<SimState @ 0x72ac60>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xb
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x95
rip : 0x72ac60
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac60:	add	rax, 1
0x72ac64:	cmp	rax, 6
0x72ac68:	je	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac6a
stashes  [<SimState @ 0x72ac6a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x4
rip : 0x72ac6a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac6a:	cmp	eax, 0xc
0x72ac6d:	mov	qword ptr [rbp + rax*8], rbx
0x72ac72:	jne	0x72ac60

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac74
stashes  [<SimState @ 0x72ac74>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x875f33
rdx : 0x1
rflags : 0x44
rip : 0x72ac74
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ac74:	mov	esi, 0x3b
0x72ac79:	mov	rdi, rbx
0x72ac7c:	call	0x721110

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x721110
stashes  [<SimState @ 0x721110>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x407649
rdx : 0x1
rflags : 0x44
rip : 0x721110
rsi : 0x3b
rsp : 0x7fffffffffefda8
0x721110:	jmp	qword ptr [rip + 0x38cf9a]

0x72ac74 => 0x721110()
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x783b90
stashes  [<SimState @ 0x783b90>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x407649
rdx : 0x1
rflags : 0x44
rip : 0x783b90
rsi : 0x3b
rsp : 0x7fffffffffefda8
0x783b90:	mov	rax, qword ptr [rip + 0x32a2c1]
0x783b97:	mov	edx, dword ptr [rax + 0xb4]
0x783b9d:	lea	rax, [rip + 0xce2ec]
0x783ba4:	mov	ecx, edx
0x783ba6:	and	ecx, 0x20c00
0x783bac:	cmp	ecx, 0xc00
0x783bb2:	je	0x783bc9

0x72ac74 => 0x721110()
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac81
stashes  [<SimState @ 0x72ac81>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x407649
rdx : 0x1
rflags : 0x44
rip : 0x72ac81
rsi : 0x3b
rsp : 0x7fffffffffefdb0
0x72ac81:	test	rax, rax
0x72ac84:	mov	qword ptr [rsp + 0x10], rax
0x72ac89:	jne	0x72b0f0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72ac8f
stashes  [<SimState @ 0x72ac8f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefde0
rbx : 0x407649
rcx : 0x6
rdi : 0x407649
rdx : 0x1
rflags : 0x44
rip : 0x72ac8f
rsi : 0x3b
rsp : 0x7fffffffffefdb0
0x72ac8f:	mov	ebx, 0xd
0x72ac94:	jmp	0x72acac

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72acac
stashes  [<SimState @ 0x72acac>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefde0
rbx : 0xd
rcx : 0x6
rdi : 0x407649
rdx : 0x1
rflags : 0x44
rip : 0x72acac
rsi : 0x3b
rsp : 0x7fffffffffefdb0
0x72acac:	test	ebx, ebx
0x72acae:	lea	r15d, [rbx - 1]
0x72acb2:	je	0x72b010

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72acb8
stashes  [<SimState @ 0x72acb8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0xc
r15b : 0xc
r15d : 0xc
r15w : 0xc
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefde0
rbx : 0xd
rcx : 0x6
rdi : 0x407649
rdx : 0x1
rflags : 0x0
rip : 0x72acb8
rsi : 0x3b
rsp : 0x7fffffffffefdb0
0x72acb8:	cmp	r15d, 6
0x72acbc:	je	0x72b0e0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72acc2
stashes  [<SimState @ 0x72acc2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0xc
r15b : 0xc
r15d : 0xc
r15w : 0xc
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefde0
rbx : 0xd
rcx : 0x6
rdi : 0x407649
rdx : 0x1
rflags : 0x4
rip : 0x72acc2
rsi : 0x3b
rsp : 0x7fffffffffefdb0
0x72acc2:	movsxd	r13, r15d
0x72acc5:	mov	rsi, qword ptr [rsp + 0x28]
0x72acca:	mov	rdi, qword ptr [rsp + 0x20]
0x72accf:	lea	rcx, [rbp + r13*8]
0x72acd4:	mov	edx, r15d
0x72acd7:	call	0x72b2b0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72b2b0
stashes  [<SimState @ 0x72b2b0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0xc
r15b : 0xc
r15d : 0xc
r15w : 0xc
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefde0
rbx : 0xd
rcx : 0x7fffffffffefe40
rdi : 0x0
rdx : 0xc
rflags : 0x4
rip : 0x72b2b0
rsi : 0x0
rsp : 0x7fffffffffefda8
0x72b2b0:	push	rbp
0x72b2b1:	mov	rbp, rsp
0x72b2b4:	push	r15
0x72b2b6:	push	r14
0x72b2b8:	push	r13
0x72b2ba:	push	r12
0x72b2bc:	mov	r15, rcx
0x72b2bf:	push	rbx
0x72b2c0:	mov	r12, rdi
0x72b2c3:	movsxd	rbx, edx
0x72b2c6:	sub	rsp, 0x58
0x72b2ca:	mov	r14, qword ptr [rcx]
0x72b2cd:	mov	qword ptr [rbp - 0x68], rsi
0x72b2d1:	mov	qword ptr [rbp - 0x60], r14
0x72b2d5:	cmp	byte ptr [r14], 0
0x72b2d9:	je	0x72b3f8

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72b3f8
stashes  [<SimState @ 0x72b3f8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x0
rdx : 0xc
rflags : 0x44
rip : 0x72b3f8
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b3f8:	lea	rdi, [rip + 0x14ab3c]
0x72b3ff:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f3b
rdx : 0xc
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f3b
rdx : 0xc
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f3b
rdx : 0xc
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f3b
rdx : 0xc
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f3b
rdx : 0xc
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f3b
rdx : 0xc
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe40
rdi : 0x875f3b
rdx : 0xc
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe40
rdi : 0x875f3b
rdx : 0xc
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe40
rdi : 0x875f3b
rdx : 0xc
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72b404
stashes  [<SimState @ 0x72b404>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f3b
rdx : 0xc
rflags : 0x4
rip : 0x72b404
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b404:	test	rax, rax
0x72b407:	mov	qword ptr [rbp - 0x60], rax
0x72b40b:	je	0x72b412

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72b412
stashes  [<SimState @ 0x72b412>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f3b
rdx : 0xc
rflags : 0x44
rip : 0x72b412
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b412:	lea	rdx, [rip + 0x133d97]
0x72b419:	movsxd	rax, ebx
0x72b41c:	movzx	edi, byte ptr [rdx + rax]
0x72b420:	lea	rax, [rip + 0x133d99]
0x72b427:	add	rdi, rax
0x72b42a:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x85f237
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f237
r13b : 0x37
r13d : 0x85f237
r13w : 0xf237
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x85f237
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f237
r13b : 0x37
r13d : 0x85f237
r13w : 0xf237
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x85f237
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f237
r13b : 0x37
r13d : 0x85f237
r13w : 0xf237
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x11
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x85f237
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f237
r13b : 0x37
r13d : 0x85f237
r13w : 0xf237
r14 : 0x11
r14b : 0x11
r14d : 0x11
r14w : 0x11
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x85f237
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f237
r13b : 0x37
r13d : 0x85f237
r13w : 0xf237
r14 : 0x11
r14b : 0x11
r14d : 0x11
r14w : 0x11
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x85f237
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f237
r13b : 0x37
r13d : 0x85f237
r13w : 0xf237
r14 : 0x11
r14b : 0x11
r14d : 0x11
r14w : 0x11
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe40
rdi : 0x85f237
rdx : 0x85f1b0
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f239
r13b : 0x39
r13d : 0x85f239
r13w : 0xf239
r14 : 0x11
r14b : 0x11
r14d : 0x11
r14w : 0x11
r15 : 0xf
r15b : 0xf
r15d : 0xf
r15w : 0xf
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe40
rdi : 0x85f237
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f239
r13b : 0x39
r13d : 0x85f239
r13w : 0xf239
r14 : 0x11
r14b : 0x11
r14d : 0x11
r14w : 0x11
r15 : 0xf
r15b : 0xf
r15d : 0xf
r15w : 0xf
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe40
rdi : 0x85f237
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72b42f
stashes  [<SimState @ 0x72b42f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x85f237
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b42f
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b42f:	test	rax, rax
0x72b432:	mov	qword ptr [rbp - 0x60], rax
0x72b436:	je	0x72b43d

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x72b43d
stashes  [<SimState @ 0x72b43d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x85f237
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b43d
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b43d:	lea	rdi, [rip + 0x14aafe]
0x72b444:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:00 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe40
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe40
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe40
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72b449
stashes  [<SimState @ 0x72b449>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b449
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b449:	test	rax, rax
0x72b44c:	mov	qword ptr [rbp - 0x60], rax
0x72b450:	je	0x72b469

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72b469
stashes  [<SimState @ 0x72b469>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b469
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b469:	lea	r14, [rip + 0x14c962]
0x72b470:	mov	qword ptr [rbp - 0x60], r14
0x72b474:	jmp	0x72b2df

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72b2df
stashes  [<SimState @ 0x72b2df>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2df
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b2df:	lea	rsi, [rip + 0x14caec]
0x72b2e6:	mov	rdi, r14
0x72b2e9:	call	0x721200

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721200
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x783bd0
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72b2ee
stashes  [<SimState @ 0x72b2ee>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2ee
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b2ee:	test	eax, eax
0x72b2f0:	je	0x72b480

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72b480
stashes  [<SimState @ 0x72b480>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe40
r15b : 0x40
r15d : 0xfffefe40
r15w : 0xfe40
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b480
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b480:	lea	rax, [rip + 0x14c94b]
0x72b487:	mov	qword ptr [r15], rax
0x72b48a:	lea	rax, [rip + 0x3824cf]
0x72b491:	mov	rax, qword ptr [rax + rbx*8]
0x72b495:	lea	rsp, [rbp - 0x28]
0x72b499:	pop	rbx
0x72b49a:	pop	r12
0x72b49c:	pop	r13
0x72b49e:	pop	r14
0x72b4a0:	pop	r15
0x72b4a2:	pop	rbp
0x72b4a3:	ret	

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72acdc
stashes  [<SimState @ 0x72acdc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0xc
r15b : 0xc
r15d : 0xc
r15w : 0xc
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac300
rbp : 0x7fffffffffefde0
rbx : 0xd
rcx : 0x7fffffffffefe40
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acdc
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acdc:	test	rax, rax
0x72acdf:	mov	qword ptr [rsp + r13*8 + 0xa0], rax
0x72ace7:	je	0x72ad40

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72ace9
stashes  [<SimState @ 0x72ace9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0xc
r15b : 0xc
r15d : 0xc
r15w : 0xc
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac300
rbp : 0x7fffffffffefde0
rbx : 0xd
rcx : 0x7fffffffffefe40
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72ace9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ace9:	cmp	dword ptr [rax + 0x30], -1
0x72aced:	je	0x72acf6

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72acf6
stashes  [<SimState @ 0x72acf6>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0xc
r15b : 0xc
r15d : 0xc
r15w : 0xc
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac300
rbp : 0x7fffffffffefde0
rbx : 0xd
rcx : 0x7fffffffffefe40
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acf6
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acf6:	mov	r14, qword ptr [rsp + r13*8 + 0x30]
0x72acfb:	lea	rax, [rip + 0x14d0d0]
0x72ad02:	cmp	r14, rax
0x72ad05:	je	0x72aca9

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72aca9
stashes  [<SimState @ 0x72aca9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xc
r15b : 0xc
r15d : 0xc
r15w : 0xc
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0xd
rcx : 0x7fffffffffefe40
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72aca9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72aca9:	movsxd	rbx, r15d
0x72acac:	test	ebx, ebx
0x72acae:	lea	r15d, [rbx - 1]
0x72acb2:	je	0x72b010

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72acb8
stashes  [<SimState @ 0x72acb8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72acb8
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acb8:	cmp	r15d, 6
0x72acbc:	je	0x72b0e0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72acc2
stashes  [<SimState @ 0x72acc2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xc
r13b : 0xc
r13d : 0xc
r13w : 0xc
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0xc
rcx : 0x7fffffffffefe40
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72acc2
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acc2:	movsxd	r13, r15d
0x72acc5:	mov	rsi, qword ptr [rsp + 0x28]
0x72acca:	mov	rdi, qword ptr [rsp + 0x20]
0x72accf:	lea	rcx, [rbp + r13*8]
0x72acd4:	mov	edx, r15d
0x72acd7:	call	0x72b2b0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72b2b0
stashes  [<SimState @ 0x72b2b0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0xc
rcx : 0x7fffffffffefe38
rdi : 0x0
rdx : 0xb
rflags : 0x4
rip : 0x72b2b0
rsi : 0x0
rsp : 0x7fffffffffefda8
0x72b2b0:	push	rbp
0x72b2b1:	mov	rbp, rsp
0x72b2b4:	push	r15
0x72b2b6:	push	r14
0x72b2b8:	push	r13
0x72b2ba:	push	r12
0x72b2bc:	mov	r15, rcx
0x72b2bf:	push	rbx
0x72b2c0:	mov	r12, rdi
0x72b2c3:	movsxd	rbx, edx
0x72b2c6:	sub	rsp, 0x58
0x72b2ca:	mov	r14, qword ptr [rcx]
0x72b2cd:	mov	qword ptr [rbp - 0x68], rsi
0x72b2d1:	mov	qword ptr [rbp - 0x60], r14
0x72b2d5:	cmp	byte ptr [r14], 0
0x72b2d9:	je	0x72b3f8

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72b3f8
stashes  [<SimState @ 0x72b3f8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x0
rdx : 0xb
rflags : 0x44
rip : 0x72b3f8
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b3f8:	lea	rdi, [rip + 0x14ab3c]
0x72b3ff:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f3b
rdx : 0xb
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f3b
rdx : 0xb
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f3b
rdx : 0xb
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f3b
rdx : 0xb
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f3b
rdx : 0xb
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f3b
rdx : 0xb
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe38
rdi : 0x875f3b
rdx : 0xb
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe38
rdi : 0x875f3b
rdx : 0xb
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe38
rdi : 0x875f3b
rdx : 0xb
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72b404
stashes  [<SimState @ 0x72b404>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f3b
rdx : 0xb
rflags : 0x4
rip : 0x72b404
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b404:	test	rax, rax
0x72b407:	mov	qword ptr [rbp - 0x60], rax
0x72b40b:	je	0x72b412

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72b412
stashes  [<SimState @ 0x72b412>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f3b
rdx : 0xb
rflags : 0x44
rip : 0x72b412
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b412:	lea	rdx, [rip + 0x133d97]
0x72b419:	movsxd	rax, ebx
0x72b41c:	movzx	edi, byte ptr [rdx + rax]
0x72b420:	lea	rax, [rip + 0x133d99]
0x72b427:	add	rdi, rax
0x72b42a:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x85f228
rdx : 0x85f1b0
rflags : 0x4
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f228
r13b : 0x28
r13d : 0x85f228
r13w : 0xf228
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x85f228
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f228
r13b : 0x28
r13d : 0x85f228
r13w : 0xf228
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x85f228
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f228
r13b : 0x28
r13d : 0x85f228
r13w : 0xf228
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xe
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x85f228
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f228
r13b : 0x28
r13d : 0x85f228
r13w : 0xf228
r14 : 0xe
r14b : 0xe
r14d : 0xe
r14w : 0xe
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x85f228
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f228
r13b : 0x28
r13d : 0x85f228
r13w : 0xf228
r14 : 0xe
r14b : 0xe
r14d : 0xe
r14w : 0xe
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x85f228
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f228
r13b : 0x28
r13d : 0x85f228
r13w : 0xf228
r14 : 0xe
r14b : 0xe
r14d : 0xe
r14w : 0xe
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe38
rdi : 0x85f228
rdx : 0x85f1b0
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f22a
r13b : 0x2a
r13d : 0x85f22a
r13w : 0xf22a
r14 : 0xe
r14b : 0xe
r14d : 0xe
r14w : 0xe
r15 : 0xc
r15b : 0xc
r15d : 0xc
r15w : 0xc
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe38
rdi : 0x85f228
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f22a
r13b : 0x2a
r13d : 0x85f22a
r13w : 0xf22a
r14 : 0xe
r14b : 0xe
r14d : 0xe
r14w : 0xe
r15 : 0xc
r15b : 0xc
r15d : 0xc
r15w : 0xc
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe38
rdi : 0x85f228
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72b42f
stashes  [<SimState @ 0x72b42f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x85f228
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b42f
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b42f:	test	rax, rax
0x72b432:	mov	qword ptr [rbp - 0x60], rax
0x72b436:	je	0x72b43d

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x72b43d
stashes  [<SimState @ 0x72b43d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x85f228
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b43d
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b43d:	lea	rdi, [rip + 0x14aafe]
0x72b444:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:01 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe38
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe38
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe38
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b449
stashes  [<SimState @ 0x72b449>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b449
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b449:	test	rax, rax
0x72b44c:	mov	qword ptr [rbp - 0x60], rax
0x72b450:	je	0x72b469

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b469
stashes  [<SimState @ 0x72b469>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b469
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b469:	lea	r14, [rip + 0x14c962]
0x72b470:	mov	qword ptr [rbp - 0x60], r14
0x72b474:	jmp	0x72b2df

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b2df
stashes  [<SimState @ 0x72b2df>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2df
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b2df:	lea	rsi, [rip + 0x14caec]
0x72b2e6:	mov	rdi, r14
0x72b2e9:	call	0x721200

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721200
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x783bd0
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b2ee
stashes  [<SimState @ 0x72b2ee>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2ee
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b2ee:	test	eax, eax
0x72b2f0:	je	0x72b480

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b480
stashes  [<SimState @ 0x72b480>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe38
r15b : 0x38
r15d : 0xfffefe38
r15w : 0xfe38
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b480
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b480:	lea	rax, [rip + 0x14c94b]
0x72b487:	mov	qword ptr [r15], rax
0x72b48a:	lea	rax, [rip + 0x3824cf]
0x72b491:	mov	rax, qword ptr [rax + rbx*8]
0x72b495:	lea	rsp, [rbp - 0x28]
0x72b499:	pop	rbx
0x72b49a:	pop	r12
0x72b49c:	pop	r13
0x72b49e:	pop	r14
0x72b4a0:	pop	r15
0x72b4a2:	pop	rbp
0x72b4a3:	ret	

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72acdc
stashes  [<SimState @ 0x72acdc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac2a0
rbp : 0x7fffffffffefde0
rbx : 0xc
rcx : 0x7fffffffffefe38
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acdc
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acdc:	test	rax, rax
0x72acdf:	mov	qword ptr [rsp + r13*8 + 0xa0], rax
0x72ace7:	je	0x72ad40

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72ace9
stashes  [<SimState @ 0x72ace9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac2a0
rbp : 0x7fffffffffefde0
rbx : 0xc
rcx : 0x7fffffffffefe38
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72ace9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ace9:	cmp	dword ptr [rax + 0x30], -1
0x72aced:	je	0x72acf6

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72acf6
stashes  [<SimState @ 0x72acf6>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac2a0
rbp : 0x7fffffffffefde0
rbx : 0xc
rcx : 0x7fffffffffefe38
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acf6
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acf6:	mov	r14, qword ptr [rsp + r13*8 + 0x30]
0x72acfb:	lea	rax, [rip + 0x14d0d0]
0x72ad02:	cmp	r14, rax
0x72ad05:	je	0x72aca9

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72aca9
stashes  [<SimState @ 0x72aca9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0xc
rcx : 0x7fffffffffefe38
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72aca9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72aca9:	movsxd	rbx, r15d
0x72acac:	test	ebx, ebx
0x72acae:	lea	r15d, [rbx - 1]
0x72acb2:	je	0x72b010

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72acb8
stashes  [<SimState @ 0x72acb8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xa
r15b : 0xa
r15d : 0xa
r15w : 0xa
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72acb8
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acb8:	cmp	r15d, 6
0x72acbc:	je	0x72b0e0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72acc2
stashes  [<SimState @ 0x72acc2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xa
r15b : 0xa
r15d : 0xa
r15w : 0xa
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0xb
rcx : 0x7fffffffffefe38
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72acc2
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acc2:	movsxd	r13, r15d
0x72acc5:	mov	rsi, qword ptr [rsp + 0x28]
0x72acca:	mov	rdi, qword ptr [rsp + 0x20]
0x72accf:	lea	rcx, [rbp + r13*8]
0x72acd4:	mov	edx, r15d
0x72acd7:	call	0x72b2b0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b2b0
stashes  [<SimState @ 0x72b2b0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xa
r15b : 0xa
r15d : 0xa
r15w : 0xa
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0xb
rcx : 0x7fffffffffefe30
rdi : 0x0
rdx : 0xa
rflags : 0x0
rip : 0x72b2b0
rsi : 0x0
rsp : 0x7fffffffffefda8
0x72b2b0:	push	rbp
0x72b2b1:	mov	rbp, rsp
0x72b2b4:	push	r15
0x72b2b6:	push	r14
0x72b2b8:	push	r13
0x72b2ba:	push	r12
0x72b2bc:	mov	r15, rcx
0x72b2bf:	push	rbx
0x72b2c0:	mov	r12, rdi
0x72b2c3:	movsxd	rbx, edx
0x72b2c6:	sub	rsp, 0x58
0x72b2ca:	mov	r14, qword ptr [rcx]
0x72b2cd:	mov	qword ptr [rbp - 0x68], rsi
0x72b2d1:	mov	qword ptr [rbp - 0x60], r14
0x72b2d5:	cmp	byte ptr [r14], 0
0x72b2d9:	je	0x72b3f8

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b3f8
stashes  [<SimState @ 0x72b3f8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x0
rdx : 0xa
rflags : 0x44
rip : 0x72b3f8
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b3f8:	lea	rdi, [rip + 0x14ab3c]
0x72b3ff:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f3b
rdx : 0xa
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f3b
rdx : 0xa
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f3b
rdx : 0xa
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f3b
rdx : 0xa
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f3b
rdx : 0xa
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f3b
rdx : 0xa
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe30
rdi : 0x875f3b
rdx : 0xa
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe30
rdi : 0x875f3b
rdx : 0xa
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe30
rdi : 0x875f3b
rdx : 0xa
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b404
stashes  [<SimState @ 0x72b404>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f3b
rdx : 0xa
rflags : 0x4
rip : 0x72b404
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b404:	test	rax, rax
0x72b407:	mov	qword ptr [rbp - 0x60], rax
0x72b40b:	je	0x72b412

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b412
stashes  [<SimState @ 0x72b412>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f3b
rdx : 0xa
rflags : 0x44
rip : 0x72b412
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b412:	lea	rdx, [rip + 0x133d97]
0x72b419:	movsxd	rax, ebx
0x72b41c:	movzx	edi, byte ptr [rdx + rax]
0x72b420:	lea	rax, [rip + 0x133d99]
0x72b427:	add	rdi, rax
0x72b42a:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x85f21b
rdx : 0x85f1b0
rflags : 0x4
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f21b
r13b : 0x1b
r13d : 0x85f21b
r13w : 0xf21b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x85f21b
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f21b
r13b : 0x1b
r13d : 0x85f21b
r13w : 0xf21b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x85f21b
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f21b
r13b : 0x1b
r13d : 0x85f21b
r13w : 0xf21b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x85f21b
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f21b
r13b : 0x1b
r13d : 0x85f21b
r13w : 0xf21b
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x85f21b
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f21b
r13b : 0x1b
r13d : 0x85f21b
r13w : 0xf21b
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x85f21b
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f21b
r13b : 0x1b
r13d : 0x85f21b
r13w : 0xf21b
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe30
rdi : 0x85f21b
rdx : 0x85f1b0
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f21d
r13b : 0x1d
r13d : 0x85f21d
r13w : 0xf21d
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0xa
r15b : 0xa
r15d : 0xa
r15w : 0xa
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe30
rdi : 0x85f21b
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f21d
r13b : 0x1d
r13d : 0x85f21d
r13w : 0xf21d
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0xa
r15b : 0xa
r15d : 0xa
r15w : 0xa
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe30
rdi : 0x85f21b
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b42f
stashes  [<SimState @ 0x72b42f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x85f21b
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b42f
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b42f:	test	rax, rax
0x72b432:	mov	qword ptr [rbp - 0x60], rax
0x72b436:	je	0x72b43d

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b43d
stashes  [<SimState @ 0x72b43d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x85f21b
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b43d
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b43d:	lea	rdi, [rip + 0x14aafe]
0x72b444:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe30
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe30
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe30
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b449
stashes  [<SimState @ 0x72b449>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b449
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b449:	test	rax, rax
0x72b44c:	mov	qword ptr [rbp - 0x60], rax
0x72b450:	je	0x72b469

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b469
stashes  [<SimState @ 0x72b469>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b469
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b469:	lea	r14, [rip + 0x14c962]
0x72b470:	mov	qword ptr [rbp - 0x60], r14
0x72b474:	jmp	0x72b2df

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b2df
stashes  [<SimState @ 0x72b2df>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2df
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b2df:	lea	rsi, [rip + 0x14caec]
0x72b2e6:	mov	rdi, r14
0x72b2e9:	call	0x721200

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721200
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x783bd0
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b2ee
stashes  [<SimState @ 0x72b2ee>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2ee
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b2ee:	test	eax, eax
0x72b2f0:	je	0x72b480

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b480
stashes  [<SimState @ 0x72b480>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe30
r15b : 0x30
r15d : 0xfffefe30
r15w : 0xfe30
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b480
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b480:	lea	rax, [rip + 0x14c94b]
0x72b487:	mov	qword ptr [r15], rax
0x72b48a:	lea	rax, [rip + 0x3824cf]
0x72b491:	mov	rax, qword ptr [rax + rbx*8]
0x72b495:	lea	rsp, [rbp - 0x28]
0x72b499:	pop	rbx
0x72b49a:	pop	r12
0x72b49c:	pop	r13
0x72b49e:	pop	r14
0x72b4a0:	pop	r15
0x72b4a2:	pop	rbp
0x72b4a3:	ret	

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72acdc
stashes  [<SimState @ 0x72acdc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xa
r15b : 0xa
r15d : 0xa
r15w : 0xa
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac220
rbp : 0x7fffffffffefde0
rbx : 0xb
rcx : 0x7fffffffffefe30
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acdc
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acdc:	test	rax, rax
0x72acdf:	mov	qword ptr [rsp + r13*8 + 0xa0], rax
0x72ace7:	je	0x72ad40

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72ace9
stashes  [<SimState @ 0x72ace9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xa
r15b : 0xa
r15d : 0xa
r15w : 0xa
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac220
rbp : 0x7fffffffffefde0
rbx : 0xb
rcx : 0x7fffffffffefe30
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72ace9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ace9:	cmp	dword ptr [rax + 0x30], -1
0x72aced:	je	0x72acf6

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72acf6
stashes  [<SimState @ 0x72acf6>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xa
r15b : 0xa
r15d : 0xa
r15w : 0xa
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac220
rbp : 0x7fffffffffefde0
rbx : 0xb
rcx : 0x7fffffffffefe30
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acf6
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acf6:	mov	r14, qword ptr [rsp + r13*8 + 0x30]
0x72acfb:	lea	rax, [rip + 0x14d0d0]
0x72ad02:	cmp	r14, rax
0x72ad05:	je	0x72aca9

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72aca9
stashes  [<SimState @ 0x72aca9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xa
r15b : 0xa
r15d : 0xa
r15w : 0xa
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0xb
rcx : 0x7fffffffffefe30
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72aca9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72aca9:	movsxd	rbx, r15d
0x72acac:	test	ebx, ebx
0x72acae:	lea	r15d, [rbx - 1]
0x72acb2:	je	0x72b010

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72acb8
stashes  [<SimState @ 0x72acb8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x9
r15b : 0x9
r15d : 0x9
r15w : 0x9
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72acb8
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acb8:	cmp	r15d, 6
0x72acbc:	je	0x72b0e0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72acc2
stashes  [<SimState @ 0x72acc2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0xa
r13b : 0xa
r13d : 0xa
r13w : 0xa
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x9
r15b : 0x9
r15d : 0x9
r15w : 0x9
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0xa
rcx : 0x7fffffffffefe30
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72acc2
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acc2:	movsxd	r13, r15d
0x72acc5:	mov	rsi, qword ptr [rsp + 0x28]
0x72acca:	mov	rdi, qword ptr [rsp + 0x20]
0x72accf:	lea	rcx, [rbp + r13*8]
0x72acd4:	mov	edx, r15d
0x72acd7:	call	0x72b2b0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b2b0
stashes  [<SimState @ 0x72b2b0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x9
r15b : 0x9
r15d : 0x9
r15w : 0x9
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0xa
rcx : 0x7fffffffffefe28
rdi : 0x0
rdx : 0x9
rflags : 0x4
rip : 0x72b2b0
rsi : 0x0
rsp : 0x7fffffffffefda8
0x72b2b0:	push	rbp
0x72b2b1:	mov	rbp, rsp
0x72b2b4:	push	r15
0x72b2b6:	push	r14
0x72b2b8:	push	r13
0x72b2ba:	push	r12
0x72b2bc:	mov	r15, rcx
0x72b2bf:	push	rbx
0x72b2c0:	mov	r12, rdi
0x72b2c3:	movsxd	rbx, edx
0x72b2c6:	sub	rsp, 0x58
0x72b2ca:	mov	r14, qword ptr [rcx]
0x72b2cd:	mov	qword ptr [rbp - 0x68], rsi
0x72b2d1:	mov	qword ptr [rbp - 0x60], r14
0x72b2d5:	cmp	byte ptr [r14], 0
0x72b2d9:	je	0x72b3f8

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x72b3f8
stashes  [<SimState @ 0x72b3f8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x0
rdx : 0x9
rflags : 0x44
rip : 0x72b3f8
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b3f8:	lea	rdi, [rip + 0x14ab3c]
0x72b3ff:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f3b
rdx : 0x9
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f3b
rdx : 0x9
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f3b
rdx : 0x9
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f3b
rdx : 0x9
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f3b
rdx : 0x9
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:02 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f3b
rdx : 0x9
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe28
rdi : 0x875f3b
rdx : 0x9
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe28
rdi : 0x875f3b
rdx : 0x9
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe28
rdi : 0x875f3b
rdx : 0x9
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b404
stashes  [<SimState @ 0x72b404>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f3b
rdx : 0x9
rflags : 0x4
rip : 0x72b404
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b404:	test	rax, rax
0x72b407:	mov	qword ptr [rbp - 0x60], rax
0x72b40b:	je	0x72b412

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b412
stashes  [<SimState @ 0x72b412>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f3b
rdx : 0x9
rflags : 0x44
rip : 0x72b412
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b412:	lea	rdx, [rip + 0x133d97]
0x72b419:	movsxd	rax, ebx
0x72b41c:	movzx	edi, byte ptr [rdx + rax]
0x72b420:	lea	rax, [rip + 0x133d99]
0x72b427:	add	rdi, rax
0x72b42a:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x85f210
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f210
r13b : 0x10
r13d : 0x85f210
r13w : 0xf210
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x85f210
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f210
r13b : 0x10
r13d : 0x85f210
r13w : 0xf210
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x85f210
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f210
r13b : 0x10
r13d : 0x85f210
r13w : 0xf210
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xa
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x85f210
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f210
r13b : 0x10
r13d : 0x85f210
r13w : 0xf210
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x85f210
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f210
r13b : 0x10
r13d : 0x85f210
r13w : 0xf210
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x85f210
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f210
r13b : 0x10
r13d : 0x85f210
r13w : 0xf210
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe28
rdi : 0x85f210
rdx : 0x85f1b0
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f212
r13b : 0x12
r13d : 0x85f212
r13w : 0xf212
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x8
r15b : 0x8
r15d : 0x8
r15w : 0x8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe28
rdi : 0x85f210
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f212
r13b : 0x12
r13d : 0x85f212
r13w : 0xf212
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x8
r15b : 0x8
r15d : 0x8
r15w : 0x8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe28
rdi : 0x85f210
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b42f
stashes  [<SimState @ 0x72b42f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x85f210
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b42f
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b42f:	test	rax, rax
0x72b432:	mov	qword ptr [rbp - 0x60], rax
0x72b436:	je	0x72b43d

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b43d
stashes  [<SimState @ 0x72b43d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x85f210
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b43d
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b43d:	lea	rdi, [rip + 0x14aafe]
0x72b444:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe28
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe28
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe28
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b449
stashes  [<SimState @ 0x72b449>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b449
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b449:	test	rax, rax
0x72b44c:	mov	qword ptr [rbp - 0x60], rax
0x72b450:	je	0x72b469

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b469
stashes  [<SimState @ 0x72b469>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b469
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b469:	lea	r14, [rip + 0x14c962]
0x72b470:	mov	qword ptr [rbp - 0x60], r14
0x72b474:	jmp	0x72b2df

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b2df
stashes  [<SimState @ 0x72b2df>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2df
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b2df:	lea	rsi, [rip + 0x14caec]
0x72b2e6:	mov	rdi, r14
0x72b2e9:	call	0x721200

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721200
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x783bd0
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b2ee
stashes  [<SimState @ 0x72b2ee>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2ee
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b2ee:	test	eax, eax
0x72b2f0:	je	0x72b480

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b480
stashes  [<SimState @ 0x72b480>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe28
r15b : 0x28
r15d : 0xfffefe28
r15w : 0xfe28
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b480
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b480:	lea	rax, [rip + 0x14c94b]
0x72b487:	mov	qword ptr [r15], rax
0x72b48a:	lea	rax, [rip + 0x3824cf]
0x72b491:	mov	rax, qword ptr [rax + rbx*8]
0x72b495:	lea	rsp, [rbp - 0x28]
0x72b499:	pop	rbx
0x72b49a:	pop	r12
0x72b49c:	pop	r13
0x72b49e:	pop	r14
0x72b4a0:	pop	r15
0x72b4a2:	pop	rbp
0x72b4a3:	ret	

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72acdc
stashes  [<SimState @ 0x72acdc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x9
r15b : 0x9
r15d : 0x9
r15w : 0x9
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac160
rbp : 0x7fffffffffefde0
rbx : 0xa
rcx : 0x7fffffffffefe28
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acdc
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acdc:	test	rax, rax
0x72acdf:	mov	qword ptr [rsp + r13*8 + 0xa0], rax
0x72ace7:	je	0x72ad40

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72ace9
stashes  [<SimState @ 0x72ace9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x9
r15b : 0x9
r15d : 0x9
r15w : 0x9
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac160
rbp : 0x7fffffffffefde0
rbx : 0xa
rcx : 0x7fffffffffefe28
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72ace9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ace9:	cmp	dword ptr [rax + 0x30], -1
0x72aced:	je	0x72acf6

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72acf6
stashes  [<SimState @ 0x72acf6>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x9
r15b : 0x9
r15d : 0x9
r15w : 0x9
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac160
rbp : 0x7fffffffffefde0
rbx : 0xa
rcx : 0x7fffffffffefe28
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acf6
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acf6:	mov	r14, qword ptr [rsp + r13*8 + 0x30]
0x72acfb:	lea	rax, [rip + 0x14d0d0]
0x72ad02:	cmp	r14, rax
0x72ad05:	je	0x72aca9

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72aca9
stashes  [<SimState @ 0x72aca9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x9
r15b : 0x9
r15d : 0x9
r15w : 0x9
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0xa
rcx : 0x7fffffffffefe28
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72aca9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72aca9:	movsxd	rbx, r15d
0x72acac:	test	ebx, ebx
0x72acae:	lea	r15d, [rbx - 1]
0x72acb2:	je	0x72b010

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72acb8
stashes  [<SimState @ 0x72acb8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x8
r15b : 0x8
r15d : 0x8
r15w : 0x8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72acb8
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acb8:	cmp	r15d, 6
0x72acbc:	je	0x72b0e0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72acc2
stashes  [<SimState @ 0x72acc2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x9
r13b : 0x9
r13d : 0x9
r13w : 0x9
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x8
r15b : 0x8
r15d : 0x8
r15w : 0x8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x9
rcx : 0x7fffffffffefe28
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72acc2
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acc2:	movsxd	r13, r15d
0x72acc5:	mov	rsi, qword ptr [rsp + 0x28]
0x72acca:	mov	rdi, qword ptr [rsp + 0x20]
0x72accf:	lea	rcx, [rbp + r13*8]
0x72acd4:	mov	edx, r15d
0x72acd7:	call	0x72b2b0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b2b0
stashes  [<SimState @ 0x72b2b0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x8
r15b : 0x8
r15d : 0x8
r15w : 0x8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x9
rcx : 0x7fffffffffefe20
rdi : 0x0
rdx : 0x8
rflags : 0x0
rip : 0x72b2b0
rsi : 0x0
rsp : 0x7fffffffffefda8
0x72b2b0:	push	rbp
0x72b2b1:	mov	rbp, rsp
0x72b2b4:	push	r15
0x72b2b6:	push	r14
0x72b2b8:	push	r13
0x72b2ba:	push	r12
0x72b2bc:	mov	r15, rcx
0x72b2bf:	push	rbx
0x72b2c0:	mov	r12, rdi
0x72b2c3:	movsxd	rbx, edx
0x72b2c6:	sub	rsp, 0x58
0x72b2ca:	mov	r14, qword ptr [rcx]
0x72b2cd:	mov	qword ptr [rbp - 0x68], rsi
0x72b2d1:	mov	qword ptr [rbp - 0x60], r14
0x72b2d5:	cmp	byte ptr [r14], 0
0x72b2d9:	je	0x72b3f8

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b3f8
stashes  [<SimState @ 0x72b3f8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x0
rdx : 0x8
rflags : 0x44
rip : 0x72b3f8
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b3f8:	lea	rdi, [rip + 0x14ab3c]
0x72b3ff:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f3b
rdx : 0x8
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f3b
rdx : 0x8
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f3b
rdx : 0x8
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f3b
rdx : 0x8
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f3b
rdx : 0x8
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f3b
rdx : 0x8
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe20
rdi : 0x875f3b
rdx : 0x8
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe20
rdi : 0x875f3b
rdx : 0x8
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe20
rdi : 0x875f3b
rdx : 0x8
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b404
stashes  [<SimState @ 0x72b404>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f3b
rdx : 0x8
rflags : 0x4
rip : 0x72b404
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b404:	test	rax, rax
0x72b407:	mov	qword ptr [rbp - 0x60], rax
0x72b40b:	je	0x72b412

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b412
stashes  [<SimState @ 0x72b412>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f3b
rdx : 0x8
rflags : 0x44
rip : 0x72b412
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b412:	lea	rdx, [rip + 0x133d97]
0x72b419:	movsxd	rax, ebx
0x72b41c:	movzx	edi, byte ptr [rdx + rax]
0x72b420:	lea	rax, [rip + 0x133d99]
0x72b427:	add	rdi, rax
0x72b42a:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x85f208
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f208
r13b : 0x8
r13d : 0x85f208
r13w : 0xf208
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x85f208
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f208
r13b : 0x8
r13d : 0x85f208
r13w : 0xf208
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x85f208
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f208
r13b : 0x8
r13d : 0x85f208
r13w : 0xf208
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x85f208
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f208
r13b : 0x8
r13d : 0x85f208
r13w : 0xf208
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x85f208
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f208
r13b : 0x8
r13d : 0x85f208
r13w : 0xf208
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x85f208
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f208
r13b : 0x8
r13d : 0x85f208
r13w : 0xf208
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe20
rdi : 0x85f208
rdx : 0x85f1b0
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f20a
r13b : 0xa
r13d : 0x85f20a
r13w : 0xf20a
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x5
r15b : 0x5
r15d : 0x5
r15w : 0x5
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe20
rdi : 0x85f208
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f20a
r13b : 0xa
r13d : 0x85f20a
r13w : 0xf20a
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x5
r15b : 0x5
r15d : 0x5
r15w : 0x5
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe20
rdi : 0x85f208
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b42f
stashes  [<SimState @ 0x72b42f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x85f208
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b42f
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b42f:	test	rax, rax
0x72b432:	mov	qword ptr [rbp - 0x60], rax
0x72b436:	je	0x72b43d

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b43d
stashes  [<SimState @ 0x72b43d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x85f208
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b43d
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b43d:	lea	rdi, [rip + 0x14aafe]
0x72b444:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe20
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe20
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe20
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:03 active states =  1 rip =  0x72b449
stashes  [<SimState @ 0x72b449>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b449
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b449:	test	rax, rax
0x72b44c:	mov	qword ptr [rbp - 0x60], rax
0x72b450:	je	0x72b469

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b469
stashes  [<SimState @ 0x72b469>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b469
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b469:	lea	r14, [rip + 0x14c962]
0x72b470:	mov	qword ptr [rbp - 0x60], r14
0x72b474:	jmp	0x72b2df

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b2df
stashes  [<SimState @ 0x72b2df>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2df
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b2df:	lea	rsi, [rip + 0x14caec]
0x72b2e6:	mov	rdi, r14
0x72b2e9:	call	0x721200

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721200
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x783bd0
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b2ee
stashes  [<SimState @ 0x72b2ee>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2ee
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b2ee:	test	eax, eax
0x72b2f0:	je	0x72b480

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b480
stashes  [<SimState @ 0x72b480>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe20
r15b : 0x20
r15d : 0xfffefe20
r15w : 0xfe20
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b480
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b480:	lea	rax, [rip + 0x14c94b]
0x72b487:	mov	qword ptr [r15], rax
0x72b48a:	lea	rax, [rip + 0x3824cf]
0x72b491:	mov	rax, qword ptr [rax + rbx*8]
0x72b495:	lea	rsp, [rbp - 0x28]
0x72b499:	pop	rbx
0x72b49a:	pop	r12
0x72b49c:	pop	r13
0x72b49e:	pop	r14
0x72b4a0:	pop	r15
0x72b4a2:	pop	rbp
0x72b4a3:	ret	

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72acdc
stashes  [<SimState @ 0x72acdc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x8
r15b : 0x8
r15d : 0x8
r15w : 0x8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac0e0
rbp : 0x7fffffffffefde0
rbx : 0x9
rcx : 0x7fffffffffefe20
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acdc
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acdc:	test	rax, rax
0x72acdf:	mov	qword ptr [rsp + r13*8 + 0xa0], rax
0x72ace7:	je	0x72ad40

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72ace9
stashes  [<SimState @ 0x72ace9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x8
r15b : 0x8
r15d : 0x8
r15w : 0x8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac0e0
rbp : 0x7fffffffffefde0
rbx : 0x9
rcx : 0x7fffffffffefe20
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72ace9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ace9:	cmp	dword ptr [rax + 0x30], -1
0x72aced:	je	0x72acf6

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72acf6
stashes  [<SimState @ 0x72acf6>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x8
r15b : 0x8
r15d : 0x8
r15w : 0x8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac0e0
rbp : 0x7fffffffffefde0
rbx : 0x9
rcx : 0x7fffffffffefe20
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acf6
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acf6:	mov	r14, qword ptr [rsp + r13*8 + 0x30]
0x72acfb:	lea	rax, [rip + 0x14d0d0]
0x72ad02:	cmp	r14, rax
0x72ad05:	je	0x72aca9

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72aca9
stashes  [<SimState @ 0x72aca9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x8
r15b : 0x8
r15d : 0x8
r15w : 0x8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x9
rcx : 0x7fffffffffefe20
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72aca9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72aca9:	movsxd	rbx, r15d
0x72acac:	test	ebx, ebx
0x72acae:	lea	r15d, [rbx - 1]
0x72acb2:	je	0x72b010

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72acb8
stashes  [<SimState @ 0x72acb8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7
r15b : 0x7
r15d : 0x7
r15w : 0x7
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72acb8
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acb8:	cmp	r15d, 6
0x72acbc:	je	0x72b0e0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72acc2
stashes  [<SimState @ 0x72acc2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7
r15b : 0x7
r15d : 0x7
r15w : 0x7
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x8
rcx : 0x7fffffffffefe20
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72acc2
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acc2:	movsxd	r13, r15d
0x72acc5:	mov	rsi, qword ptr [rsp + 0x28]
0x72acca:	mov	rdi, qword ptr [rsp + 0x20]
0x72accf:	lea	rcx, [rbp + r13*8]
0x72acd4:	mov	edx, r15d
0x72acd7:	call	0x72b2b0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b2b0
stashes  [<SimState @ 0x72b2b0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7
r15b : 0x7
r15d : 0x7
r15w : 0x7
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x8
rcx : 0x7fffffffffefe18
rdi : 0x0
rdx : 0x7
rflags : 0x0
rip : 0x72b2b0
rsi : 0x0
rsp : 0x7fffffffffefda8
0x72b2b0:	push	rbp
0x72b2b1:	mov	rbp, rsp
0x72b2b4:	push	r15
0x72b2b6:	push	r14
0x72b2b8:	push	r13
0x72b2ba:	push	r12
0x72b2bc:	mov	r15, rcx
0x72b2bf:	push	rbx
0x72b2c0:	mov	r12, rdi
0x72b2c3:	movsxd	rbx, edx
0x72b2c6:	sub	rsp, 0x58
0x72b2ca:	mov	r14, qword ptr [rcx]
0x72b2cd:	mov	qword ptr [rbp - 0x68], rsi
0x72b2d1:	mov	qword ptr [rbp - 0x60], r14
0x72b2d5:	cmp	byte ptr [r14], 0
0x72b2d9:	je	0x72b3f8

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b3f8
stashes  [<SimState @ 0x72b3f8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x0
rdx : 0x7
rflags : 0x44
rip : 0x72b3f8
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b3f8:	lea	rdi, [rip + 0x14ab3c]
0x72b3ff:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f3b
rdx : 0x7
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f3b
rdx : 0x7
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f3b
rdx : 0x7
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f3b
rdx : 0x7
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f3b
rdx : 0x7
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f3b
rdx : 0x7
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe18
rdi : 0x875f3b
rdx : 0x7
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe18
rdi : 0x875f3b
rdx : 0x7
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe18
rdi : 0x875f3b
rdx : 0x7
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b404
stashes  [<SimState @ 0x72b404>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f3b
rdx : 0x7
rflags : 0x4
rip : 0x72b404
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b404:	test	rax, rax
0x72b407:	mov	qword ptr [rbp - 0x60], rax
0x72b40b:	je	0x72b412

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b412
stashes  [<SimState @ 0x72b412>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f3b
rdx : 0x7
rflags : 0x44
rip : 0x72b412
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b412:	lea	rdx, [rip + 0x133d97]
0x72b419:	movsxd	rax, ebx
0x72b41c:	movzx	edi, byte ptr [rdx + rax]
0x72b420:	lea	rax, [rip + 0x133d99]
0x72b427:	add	rdi, rax
0x72b42a:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x85f1ff
rdx : 0x85f1b0
rflags : 0x4
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1ff
r13b : 0xff
r13d : 0x85f1ff
r13w : 0xf1ff
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x85f1ff
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1ff
r13b : 0xff
r13d : 0x85f1ff
r13w : 0xf1ff
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x85f1ff
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1ff
r13b : 0xff
r13d : 0x85f1ff
r13w : 0xf1ff
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x8
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x85f1ff
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1ff
r13b : 0xff
r13d : 0x85f1ff
r13w : 0xf1ff
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x85f1ff
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1ff
r13b : 0xff
r13d : 0x85f1ff
r13w : 0xf1ff
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x85f1ff
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1ff
r13b : 0xff
r13d : 0x85f1ff
r13w : 0xf1ff
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe18
rdi : 0x85f1ff
rdx : 0x85f1b0
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f201
r13b : 0x1
r13d : 0x85f201
r13w : 0xf201
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x6
r15b : 0x6
r15d : 0x6
r15w : 0x6
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe18
rdi : 0x85f1ff
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f201
r13b : 0x1
r13d : 0x85f201
r13w : 0xf201
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x6
r15b : 0x6
r15d : 0x6
r15w : 0x6
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe18
rdi : 0x85f1ff
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b42f
stashes  [<SimState @ 0x72b42f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x85f1ff
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b42f
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b42f:	test	rax, rax
0x72b432:	mov	qword ptr [rbp - 0x60], rax
0x72b436:	je	0x72b43d

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b43d
stashes  [<SimState @ 0x72b43d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x85f1ff
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b43d
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b43d:	lea	rdi, [rip + 0x14aafe]
0x72b444:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe18
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe18
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe18
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b449
stashes  [<SimState @ 0x72b449>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b449
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b449:	test	rax, rax
0x72b44c:	mov	qword ptr [rbp - 0x60], rax
0x72b450:	je	0x72b469

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b469
stashes  [<SimState @ 0x72b469>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b469
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b469:	lea	r14, [rip + 0x14c962]
0x72b470:	mov	qword ptr [rbp - 0x60], r14
0x72b474:	jmp	0x72b2df

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b2df
stashes  [<SimState @ 0x72b2df>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2df
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b2df:	lea	rsi, [rip + 0x14caec]
0x72b2e6:	mov	rdi, r14
0x72b2e9:	call	0x721200

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721200
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x783bd0
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b2ee
stashes  [<SimState @ 0x72b2ee>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2ee
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b2ee:	test	eax, eax
0x72b2f0:	je	0x72b480

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b480
stashes  [<SimState @ 0x72b480>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe18
r15b : 0x18
r15d : 0xfffefe18
r15w : 0xfe18
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b480
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b480:	lea	rax, [rip + 0x14c94b]
0x72b487:	mov	qword ptr [r15], rax
0x72b48a:	lea	rax, [rip + 0x3824cf]
0x72b491:	mov	rax, qword ptr [rax + rbx*8]
0x72b495:	lea	rsp, [rbp - 0x28]
0x72b499:	pop	rbx
0x72b49a:	pop	r12
0x72b49c:	pop	r13
0x72b49e:	pop	r14
0x72b4a0:	pop	r15
0x72b4a2:	pop	rbp
0x72b4a3:	ret	

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72acdc
stashes  [<SimState @ 0x72acdc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7
r15b : 0x7
r15d : 0x7
r15w : 0x7
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac080
rbp : 0x7fffffffffefde0
rbx : 0x8
rcx : 0x7fffffffffefe18
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acdc
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acdc:	test	rax, rax
0x72acdf:	mov	qword ptr [rsp + r13*8 + 0xa0], rax
0x72ace7:	je	0x72ad40

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72ace9
stashes  [<SimState @ 0x72ace9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7
r15b : 0x7
r15d : 0x7
r15w : 0x7
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac080
rbp : 0x7fffffffffefde0
rbx : 0x8
rcx : 0x7fffffffffefe18
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72ace9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ace9:	cmp	dword ptr [rax + 0x30], -1
0x72aced:	je	0x72acf6

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72acf6
stashes  [<SimState @ 0x72acf6>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7
r15b : 0x7
r15d : 0x7
r15w : 0x7
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac080
rbp : 0x7fffffffffefde0
rbx : 0x8
rcx : 0x7fffffffffefe18
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acf6
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acf6:	mov	r14, qword ptr [rsp + r13*8 + 0x30]
0x72acfb:	lea	rax, [rip + 0x14d0d0]
0x72ad02:	cmp	r14, rax
0x72ad05:	je	0x72aca9

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72aca9
stashes  [<SimState @ 0x72aca9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7
r15b : 0x7
r15d : 0x7
r15w : 0x7
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x8
rcx : 0x7fffffffffefe18
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72aca9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72aca9:	movsxd	rbx, r15d
0x72acac:	test	ebx, ebx
0x72acae:	lea	r15d, [rbx - 1]
0x72acb2:	je	0x72b010

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72acb8
stashes  [<SimState @ 0x72acb8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x6
r15b : 0x6
r15d : 0x6
r15w : 0x6
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72acb8
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acb8:	cmp	r15d, 6
0x72acbc:	je	0x72b0e0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b0e0
stashes  [<SimState @ 0x72b0e0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x6
r15b : 0x6
r15d : 0x6
r15w : 0x6
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x7
rcx : 0x7fffffffffefe18
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b0e0
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72b0e0:	mov	ebx, 6
0x72b0e5:	mov	r15d, 5
0x72b0eb:	jmp	0x72acc2

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72acc2
stashes  [<SimState @ 0x72acc2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x7
r13b : 0x7
r13d : 0x7
r13w : 0x7
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x5
r15b : 0x5
r15d : 0x5
r15w : 0x5
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x6
rcx : 0x7fffffffffefe18
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acc2
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acc2:	movsxd	r13, r15d
0x72acc5:	mov	rsi, qword ptr [rsp + 0x28]
0x72acca:	mov	rdi, qword ptr [rsp + 0x20]
0x72accf:	lea	rcx, [rbp + r13*8]
0x72acd4:	mov	edx, r15d
0x72acd7:	call	0x72b2b0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b2b0
stashes  [<SimState @ 0x72b2b0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x5
r15b : 0x5
r15d : 0x5
r15w : 0x5
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x6
rcx : 0x7fffffffffefe08
rdi : 0x0
rdx : 0x5
rflags : 0x44
rip : 0x72b2b0
rsi : 0x0
rsp : 0x7fffffffffefda8
0x72b2b0:	push	rbp
0x72b2b1:	mov	rbp, rsp
0x72b2b4:	push	r15
0x72b2b6:	push	r14
0x72b2b8:	push	r13
0x72b2ba:	push	r12
0x72b2bc:	mov	r15, rcx
0x72b2bf:	push	rbx
0x72b2c0:	mov	r12, rdi
0x72b2c3:	movsxd	rbx, edx
0x72b2c6:	sub	rsp, 0x58
0x72b2ca:	mov	r14, qword ptr [rcx]
0x72b2cd:	mov	qword ptr [rbp - 0x68], rsi
0x72b2d1:	mov	qword ptr [rbp - 0x60], r14
0x72b2d5:	cmp	byte ptr [r14], 0
0x72b2d9:	je	0x72b3f8

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b3f8
stashes  [<SimState @ 0x72b3f8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x0
rdx : 0x5
rflags : 0x44
rip : 0x72b3f8
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b3f8:	lea	rdi, [rip + 0x14ab3c]
0x72b3ff:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f3b
rdx : 0x5
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f3b
rdx : 0x5
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f3b
rdx : 0x5
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f3b
rdx : 0x5
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f3b
rdx : 0x5
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f3b
rdx : 0x5
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe08
rdi : 0x875f3b
rdx : 0x5
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe08
rdi : 0x875f3b
rdx : 0x5
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe08
rdi : 0x875f3b
rdx : 0x5
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b404
stashes  [<SimState @ 0x72b404>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f3b
rdx : 0x5
rflags : 0x4
rip : 0x72b404
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b404:	test	rax, rax
0x72b407:	mov	qword ptr [rbp - 0x60], rax
0x72b40b:	je	0x72b412

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x72b412
stashes  [<SimState @ 0x72b412>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f3b
rdx : 0x5
rflags : 0x44
rip : 0x72b412
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b412:	lea	rdx, [rip + 0x133d97]
0x72b419:	movsxd	rax, ebx
0x72b41c:	movzx	edi, byte ptr [rdx + rax]
0x72b420:	lea	rax, [rip + 0x133d99]
0x72b427:	add	rdi, rax
0x72b42a:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x85f1f3
rdx : 0x85f1b0
rflags : 0x4
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1f3
r13b : 0xf3
r13d : 0x85f1f3
r13w : 0xf1f3
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x85f1f3
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1f3
r13b : 0xf3
r13d : 0x85f1f3
r13w : 0xf1f3
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x85f1f3
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1f3
r13b : 0xf3
r13d : 0x85f1f3
r13w : 0xf1f3
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xb
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x85f1f3
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1f3
r13b : 0xf3
r13d : 0x85f1f3
r13w : 0xf1f3
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x85f1f3
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1f3
r13b : 0xf3
r13d : 0x85f1f3
r13w : 0xf1f3
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x85f1f3
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1f3
r13b : 0xf3
r13d : 0x85f1f3
r13w : 0xf1f3
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe08
rdi : 0x85f1f3
rdx : 0x85f1b0
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f1f5
r13b : 0xf5
r13d : 0x85f1f5
r13w : 0xf1f5
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x9
r15b : 0x9
r15d : 0x9
r15w : 0x9
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe08
rdi : 0x85f1f3
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:04 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f1f5
r13b : 0xf5
r13d : 0x85f1f5
r13w : 0xf1f5
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x9
r15b : 0x9
r15d : 0x9
r15w : 0x9
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe08
rdi : 0x85f1f3
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b42f
stashes  [<SimState @ 0x72b42f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x85f1f3
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b42f
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b42f:	test	rax, rax
0x72b432:	mov	qword ptr [rbp - 0x60], rax
0x72b436:	je	0x72b43d

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b43d
stashes  [<SimState @ 0x72b43d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x85f1f3
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b43d
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b43d:	lea	rdi, [rip + 0x14aafe]
0x72b444:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe08
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe08
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe08
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b449
stashes  [<SimState @ 0x72b449>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b449
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b449:	test	rax, rax
0x72b44c:	mov	qword ptr [rbp - 0x60], rax
0x72b450:	je	0x72b469

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b469
stashes  [<SimState @ 0x72b469>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b469
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b469:	lea	r14, [rip + 0x14c962]
0x72b470:	mov	qword ptr [rbp - 0x60], r14
0x72b474:	jmp	0x72b2df

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b2df
stashes  [<SimState @ 0x72b2df>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2df
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b2df:	lea	rsi, [rip + 0x14caec]
0x72b2e6:	mov	rdi, r14
0x72b2e9:	call	0x721200

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721200
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x783bd0
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b2ee
stashes  [<SimState @ 0x72b2ee>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2ee
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b2ee:	test	eax, eax
0x72b2f0:	je	0x72b480

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b480
stashes  [<SimState @ 0x72b480>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe08
r15b : 0x8
r15d : 0xfffefe08
r15w : 0xfe08
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b480
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b480:	lea	rax, [rip + 0x14c94b]
0x72b487:	mov	qword ptr [r15], rax
0x72b48a:	lea	rax, [rip + 0x3824cf]
0x72b491:	mov	rax, qword ptr [rax + rbx*8]
0x72b495:	lea	rsp, [rbp - 0x28]
0x72b499:	pop	rbx
0x72b49a:	pop	r12
0x72b49c:	pop	r13
0x72b49e:	pop	r14
0x72b4a0:	pop	r15
0x72b4a2:	pop	rbp
0x72b4a3:	ret	

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72acdc
stashes  [<SimState @ 0x72acdc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x5
r15b : 0x5
r15d : 0x5
r15w : 0x5
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaab880
rbp : 0x7fffffffffefde0
rbx : 0x6
rcx : 0x7fffffffffefe08
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acdc
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acdc:	test	rax, rax
0x72acdf:	mov	qword ptr [rsp + r13*8 + 0xa0], rax
0x72ace7:	je	0x72ad40

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72ace9
stashes  [<SimState @ 0x72ace9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x5
r15b : 0x5
r15d : 0x5
r15w : 0x5
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaab880
rbp : 0x7fffffffffefde0
rbx : 0x6
rcx : 0x7fffffffffefe08
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72ace9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ace9:	cmp	dword ptr [rax + 0x30], -1
0x72aced:	je	0x72acf6

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72acf6
stashes  [<SimState @ 0x72acf6>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x5
r15b : 0x5
r15d : 0x5
r15w : 0x5
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaab880
rbp : 0x7fffffffffefde0
rbx : 0x6
rcx : 0x7fffffffffefe08
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acf6
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acf6:	mov	r14, qword ptr [rsp + r13*8 + 0x30]
0x72acfb:	lea	rax, [rip + 0x14d0d0]
0x72ad02:	cmp	r14, rax
0x72ad05:	je	0x72aca9

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72aca9
stashes  [<SimState @ 0x72aca9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x5
r15b : 0x5
r15d : 0x5
r15w : 0x5
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x6
rcx : 0x7fffffffffefe08
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72aca9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72aca9:	movsxd	rbx, r15d
0x72acac:	test	ebx, ebx
0x72acae:	lea	r15d, [rbx - 1]
0x72acb2:	je	0x72b010

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72acb8
stashes  [<SimState @ 0x72acb8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72acb8
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acb8:	cmp	r15d, 6
0x72acbc:	je	0x72b0e0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72acc2
stashes  [<SimState @ 0x72acc2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x5
r13b : 0x5
r13d : 0x5
r13w : 0x5
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x5
rcx : 0x7fffffffffefe08
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x91
rip : 0x72acc2
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acc2:	movsxd	r13, r15d
0x72acc5:	mov	rsi, qword ptr [rsp + 0x28]
0x72acca:	mov	rdi, qword ptr [rsp + 0x20]
0x72accf:	lea	rcx, [rbp + r13*8]
0x72acd4:	mov	edx, r15d
0x72acd7:	call	0x72b2b0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b2b0
stashes  [<SimState @ 0x72b2b0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x5
rcx : 0x7fffffffffefe00
rdi : 0x0
rdx : 0x4
rflags : 0x91
rip : 0x72b2b0
rsi : 0x0
rsp : 0x7fffffffffefda8
0x72b2b0:	push	rbp
0x72b2b1:	mov	rbp, rsp
0x72b2b4:	push	r15
0x72b2b6:	push	r14
0x72b2b8:	push	r13
0x72b2ba:	push	r12
0x72b2bc:	mov	r15, rcx
0x72b2bf:	push	rbx
0x72b2c0:	mov	r12, rdi
0x72b2c3:	movsxd	rbx, edx
0x72b2c6:	sub	rsp, 0x58
0x72b2ca:	mov	r14, qword ptr [rcx]
0x72b2cd:	mov	qword ptr [rbp - 0x68], rsi
0x72b2d1:	mov	qword ptr [rbp - 0x60], r14
0x72b2d5:	cmp	byte ptr [r14], 0
0x72b2d9:	je	0x72b3f8

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b3f8
stashes  [<SimState @ 0x72b3f8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x0
rdx : 0x4
rflags : 0x44
rip : 0x72b3f8
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b3f8:	lea	rdi, [rip + 0x14ab3c]
0x72b3ff:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f3b
rdx : 0x4
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f3b
rdx : 0x4
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f3b
rdx : 0x4
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f3b
rdx : 0x4
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f3b
rdx : 0x4
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f3b
rdx : 0x4
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe00
rdi : 0x875f3b
rdx : 0x4
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe00
rdi : 0x875f3b
rdx : 0x4
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe00
rdi : 0x875f3b
rdx : 0x4
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b404
stashes  [<SimState @ 0x72b404>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f3b
rdx : 0x4
rflags : 0x4
rip : 0x72b404
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b404:	test	rax, rax
0x72b407:	mov	qword ptr [rbp - 0x60], rax
0x72b40b:	je	0x72b412

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b412
stashes  [<SimState @ 0x72b412>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f3b
rdx : 0x4
rflags : 0x44
rip : 0x72b412
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b412:	lea	rdx, [rip + 0x133d97]
0x72b419:	movsxd	rax, ebx
0x72b41c:	movzx	edi, byte ptr [rdx + rax]
0x72b420:	lea	rax, [rip + 0x133d99]
0x72b427:	add	rdi, rax
0x72b42a:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x85f1d4
rdx : 0x85f1b0
rflags : 0x4
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1d4
r13b : 0xd4
r13d : 0x85f1d4
r13w : 0xf1d4
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x85f1d4
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1d4
r13b : 0xd4
r13d : 0x85f1d4
r13w : 0xf1d4
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x85f1d4
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1d4
r13b : 0xd4
r13d : 0x85f1d4
r13w : 0xf1d4
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xb
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x85f1d4
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1d4
r13b : 0xd4
r13d : 0x85f1d4
r13w : 0xf1d4
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x85f1d4
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1d4
r13b : 0xd4
r13d : 0x85f1d4
r13w : 0xf1d4
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x85f1d4
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1d4
r13b : 0xd4
r13d : 0x85f1d4
r13w : 0xf1d4
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe00
rdi : 0x85f1d4
rdx : 0x85f1b0
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f1d6
r13b : 0xd6
r13d : 0x85f1d6
r13w : 0xf1d6
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x9
r15b : 0x9
r15d : 0x9
r15w : 0x9
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe00
rdi : 0x85f1d4
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f1d6
r13b : 0xd6
r13d : 0x85f1d6
r13w : 0xf1d6
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x9
r15b : 0x9
r15d : 0x9
r15w : 0x9
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe00
rdi : 0x85f1d4
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b42f
stashes  [<SimState @ 0x72b42f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x85f1d4
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b42f
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b42f:	test	rax, rax
0x72b432:	mov	qword ptr [rbp - 0x60], rax
0x72b436:	je	0x72b43d

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b43d
stashes  [<SimState @ 0x72b43d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x85f1d4
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b43d
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b43d:	lea	rdi, [rip + 0x14aafe]
0x72b444:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe00
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe00
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefe00
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b449
stashes  [<SimState @ 0x72b449>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b449
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b449:	test	rax, rax
0x72b44c:	mov	qword ptr [rbp - 0x60], rax
0x72b450:	je	0x72b469

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b469
stashes  [<SimState @ 0x72b469>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b469
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b469:	lea	r14, [rip + 0x14c962]
0x72b470:	mov	qword ptr [rbp - 0x60], r14
0x72b474:	jmp	0x72b2df

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b2df
stashes  [<SimState @ 0x72b2df>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2df
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b2df:	lea	rsi, [rip + 0x14caec]
0x72b2e6:	mov	rdi, r14
0x72b2e9:	call	0x721200

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721200
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x783bd0
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b2ee
stashes  [<SimState @ 0x72b2ee>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2ee
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b2ee:	test	eax, eax
0x72b2f0:	je	0x72b480

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b480
stashes  [<SimState @ 0x72b480>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefe00
r15b : 0x0
r15d : 0xfffefe00
r15w : 0xfe00
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b480
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b480:	lea	rax, [rip + 0x14c94b]
0x72b487:	mov	qword ptr [r15], rax
0x72b48a:	lea	rax, [rip + 0x3824cf]
0x72b491:	mov	rax, qword ptr [rax + rbx*8]
0x72b495:	lea	rsp, [rbp - 0x28]
0x72b499:	pop	rbx
0x72b49a:	pop	r12
0x72b49c:	pop	r13
0x72b49e:	pop	r14
0x72b4a0:	pop	r15
0x72b4a2:	pop	rbp
0x72b4a3:	ret	

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72acdc
stashes  [<SimState @ 0x72acdc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaab900
rbp : 0x7fffffffffefde0
rbx : 0x5
rcx : 0x7fffffffffefe00
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acdc
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acdc:	test	rax, rax
0x72acdf:	mov	qword ptr [rsp + r13*8 + 0xa0], rax
0x72ace7:	je	0x72ad40

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72ace9
stashes  [<SimState @ 0x72ace9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaab900
rbp : 0x7fffffffffefde0
rbx : 0x5
rcx : 0x7fffffffffefe00
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72ace9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ace9:	cmp	dword ptr [rax + 0x30], -1
0x72aced:	je	0x72acf6

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72acf6
stashes  [<SimState @ 0x72acf6>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaab900
rbp : 0x7fffffffffefde0
rbx : 0x5
rcx : 0x7fffffffffefe00
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acf6
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acf6:	mov	r14, qword ptr [rsp + r13*8 + 0x30]
0x72acfb:	lea	rax, [rip + 0x14d0d0]
0x72ad02:	cmp	r14, rax
0x72ad05:	je	0x72aca9

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72aca9
stashes  [<SimState @ 0x72aca9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x5
rcx : 0x7fffffffffefe00
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72aca9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72aca9:	movsxd	rbx, r15d
0x72acac:	test	ebx, ebx
0x72acae:	lea	r15d, [rbx - 1]
0x72acb2:	je	0x72b010

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72acb8
stashes  [<SimState @ 0x72acb8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x3
r15b : 0x3
r15d : 0x3
r15w : 0x3
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72acb8
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acb8:	cmp	r15d, 6
0x72acbc:	je	0x72b0e0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72acc2
stashes  [<SimState @ 0x72acc2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x4
r13b : 0x4
r13d : 0x4
r13w : 0x4
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x3
r15b : 0x3
r15d : 0x3
r15w : 0x3
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x4
rcx : 0x7fffffffffefe00
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x91
rip : 0x72acc2
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acc2:	movsxd	r13, r15d
0x72acc5:	mov	rsi, qword ptr [rsp + 0x28]
0x72acca:	mov	rdi, qword ptr [rsp + 0x20]
0x72accf:	lea	rcx, [rbp + r13*8]
0x72acd4:	mov	edx, r15d
0x72acd7:	call	0x72b2b0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b2b0
stashes  [<SimState @ 0x72b2b0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x3
r15b : 0x3
r15d : 0x3
r15w : 0x3
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x4
rcx : 0x7fffffffffefdf8
rdi : 0x0
rdx : 0x3
rflags : 0x91
rip : 0x72b2b0
rsi : 0x0
rsp : 0x7fffffffffefda8
0x72b2b0:	push	rbp
0x72b2b1:	mov	rbp, rsp
0x72b2b4:	push	r15
0x72b2b6:	push	r14
0x72b2b8:	push	r13
0x72b2ba:	push	r12
0x72b2bc:	mov	r15, rcx
0x72b2bf:	push	rbx
0x72b2c0:	mov	r12, rdi
0x72b2c3:	movsxd	rbx, edx
0x72b2c6:	sub	rsp, 0x58
0x72b2ca:	mov	r14, qword ptr [rcx]
0x72b2cd:	mov	qword ptr [rbp - 0x68], rsi
0x72b2d1:	mov	qword ptr [rbp - 0x60], r14
0x72b2d5:	cmp	byte ptr [r14], 0
0x72b2d9:	je	0x72b3f8

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x72b3f8
stashes  [<SimState @ 0x72b3f8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x0
rdx : 0x3
rflags : 0x44
rip : 0x72b3f8
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b3f8:	lea	rdi, [rip + 0x14ab3c]
0x72b3ff:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f3b
rdx : 0x3
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f3b
rdx : 0x3
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f3b
rdx : 0x3
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:05 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f3b
rdx : 0x3
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f3b
rdx : 0x3
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f3b
rdx : 0x3
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf8
rdi : 0x875f3b
rdx : 0x3
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf8
rdi : 0x875f3b
rdx : 0x3
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf8
rdi : 0x875f3b
rdx : 0x3
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b404
stashes  [<SimState @ 0x72b404>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f3b
rdx : 0x3
rflags : 0x4
rip : 0x72b404
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b404:	test	rax, rax
0x72b407:	mov	qword ptr [rbp - 0x60], rax
0x72b40b:	je	0x72b412

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b412
stashes  [<SimState @ 0x72b412>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f3b
rdx : 0x3
rflags : 0x44
rip : 0x72b412
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b412:	lea	rdx, [rip + 0x133d97]
0x72b419:	movsxd	rax, ebx
0x72b41c:	movzx	edi, byte ptr [rdx + rax]
0x72b420:	lea	rax, [rip + 0x133d99]
0x72b427:	add	rdi, rax
0x72b42a:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x85f1c0
rdx : 0x85f1b0
rflags : 0x4
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1c0
r13b : 0xc0
r13d : 0x85f1c0
r13w : 0xf1c0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x85f1c0
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1c0
r13b : 0xc0
r13d : 0x85f1c0
r13w : 0xf1c0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x85f1c0
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1c0
r13b : 0xc0
r13d : 0x85f1c0
r13w : 0xf1c0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xa
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x85f1c0
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1c0
r13b : 0xc0
r13d : 0x85f1c0
r13w : 0xf1c0
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x85f1c0
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1c0
r13b : 0xc0
r13d : 0x85f1c0
r13w : 0xf1c0
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x85f1c0
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1c0
r13b : 0xc0
r13d : 0x85f1c0
r13w : 0xf1c0
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf8
rdi : 0x85f1c0
rdx : 0x85f1b0
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f1c2
r13b : 0xc2
r13d : 0x85f1c2
r13w : 0xf1c2
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x8
r15b : 0x8
r15d : 0x8
r15w : 0x8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf8
rdi : 0x85f1c0
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f1c2
r13b : 0xc2
r13d : 0x85f1c2
r13w : 0xf1c2
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x8
r15b : 0x8
r15d : 0x8
r15w : 0x8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf8
rdi : 0x85f1c0
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b42f
stashes  [<SimState @ 0x72b42f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x85f1c0
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b42f
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b42f:	test	rax, rax
0x72b432:	mov	qword ptr [rbp - 0x60], rax
0x72b436:	je	0x72b43d

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b43d
stashes  [<SimState @ 0x72b43d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x85f1c0
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b43d
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b43d:	lea	rdi, [rip + 0x14aafe]
0x72b444:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b449
stashes  [<SimState @ 0x72b449>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b449
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b449:	test	rax, rax
0x72b44c:	mov	qword ptr [rbp - 0x60], rax
0x72b450:	je	0x72b469

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b469
stashes  [<SimState @ 0x72b469>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b469
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b469:	lea	r14, [rip + 0x14c962]
0x72b470:	mov	qword ptr [rbp - 0x60], r14
0x72b474:	jmp	0x72b2df

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b2df
stashes  [<SimState @ 0x72b2df>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2df
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b2df:	lea	rsi, [rip + 0x14caec]
0x72b2e6:	mov	rdi, r14
0x72b2e9:	call	0x721200

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721200
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x783bd0
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b2ee
stashes  [<SimState @ 0x72b2ee>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2ee
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b2ee:	test	eax, eax
0x72b2f0:	je	0x72b480

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b480
stashes  [<SimState @ 0x72b480>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefdf8
r15b : 0xf8
r15d : 0xfffefdf8
r15w : 0xfdf8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b480
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b480:	lea	rax, [rip + 0x14c94b]
0x72b487:	mov	qword ptr [r15], rax
0x72b48a:	lea	rax, [rip + 0x3824cf]
0x72b491:	mov	rax, qword ptr [rax + rbx*8]
0x72b495:	lea	rsp, [rbp - 0x28]
0x72b499:	pop	rbx
0x72b49a:	pop	r12
0x72b49c:	pop	r13
0x72b49e:	pop	r14
0x72b4a0:	pop	r15
0x72b4a2:	pop	rbp
0x72b4a3:	ret	

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72acdc
stashes  [<SimState @ 0x72acdc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x3
r15b : 0x3
r15d : 0x3
r15w : 0x3
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac3c0
rbp : 0x7fffffffffefde0
rbx : 0x4
rcx : 0x7fffffffffefdf8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acdc
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acdc:	test	rax, rax
0x72acdf:	mov	qword ptr [rsp + r13*8 + 0xa0], rax
0x72ace7:	je	0x72ad40

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72ace9
stashes  [<SimState @ 0x72ace9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x3
r15b : 0x3
r15d : 0x3
r15w : 0x3
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac3c0
rbp : 0x7fffffffffefde0
rbx : 0x4
rcx : 0x7fffffffffefdf8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72ace9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ace9:	cmp	dword ptr [rax + 0x30], -1
0x72aced:	je	0x72acf6

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72acf6
stashes  [<SimState @ 0x72acf6>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x3
r15b : 0x3
r15d : 0x3
r15w : 0x3
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaac3c0
rbp : 0x7fffffffffefde0
rbx : 0x4
rcx : 0x7fffffffffefdf8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acf6
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acf6:	mov	r14, qword ptr [rsp + r13*8 + 0x30]
0x72acfb:	lea	rax, [rip + 0x14d0d0]
0x72ad02:	cmp	r14, rax
0x72ad05:	je	0x72aca9

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72aca9
stashes  [<SimState @ 0x72aca9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x3
r15b : 0x3
r15d : 0x3
r15w : 0x3
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x4
rcx : 0x7fffffffffefdf8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72aca9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72aca9:	movsxd	rbx, r15d
0x72acac:	test	ebx, ebx
0x72acae:	lea	r15d, [rbx - 1]
0x72acb2:	je	0x72b010

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72acb8
stashes  [<SimState @ 0x72acb8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72acb8
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acb8:	cmp	r15d, 6
0x72acbc:	je	0x72b0e0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72acc2
stashes  [<SimState @ 0x72acc2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x3
r13b : 0x3
r13d : 0x3
r13w : 0x3
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x3
rcx : 0x7fffffffffefdf8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x95
rip : 0x72acc2
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acc2:	movsxd	r13, r15d
0x72acc5:	mov	rsi, qword ptr [rsp + 0x28]
0x72acca:	mov	rdi, qword ptr [rsp + 0x20]
0x72accf:	lea	rcx, [rbp + r13*8]
0x72acd4:	mov	edx, r15d
0x72acd7:	call	0x72b2b0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b2b0
stashes  [<SimState @ 0x72b2b0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x3
rcx : 0x7fffffffffefdf0
rdi : 0x0
rdx : 0x2
rflags : 0x95
rip : 0x72b2b0
rsi : 0x0
rsp : 0x7fffffffffefda8
0x72b2b0:	push	rbp
0x72b2b1:	mov	rbp, rsp
0x72b2b4:	push	r15
0x72b2b6:	push	r14
0x72b2b8:	push	r13
0x72b2ba:	push	r12
0x72b2bc:	mov	r15, rcx
0x72b2bf:	push	rbx
0x72b2c0:	mov	r12, rdi
0x72b2c3:	movsxd	rbx, edx
0x72b2c6:	sub	rsp, 0x58
0x72b2ca:	mov	r14, qword ptr [rcx]
0x72b2cd:	mov	qword ptr [rbp - 0x68], rsi
0x72b2d1:	mov	qword ptr [rbp - 0x60], r14
0x72b2d5:	cmp	byte ptr [r14], 0
0x72b2d9:	je	0x72b3f8

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b3f8
stashes  [<SimState @ 0x72b3f8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x0
rdx : 0x2
rflags : 0x44
rip : 0x72b3f8
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b3f8:	lea	rdi, [rip + 0x14ab3c]
0x72b3ff:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f3b
rdx : 0x2
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f3b
rdx : 0x2
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f3b
rdx : 0x2
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f3b
rdx : 0x2
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f3b
rdx : 0x2
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f3b
rdx : 0x2
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf0
rdi : 0x875f3b
rdx : 0x2
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf0
rdi : 0x875f3b
rdx : 0x2
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf0
rdi : 0x875f3b
rdx : 0x2
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b404
stashes  [<SimState @ 0x72b404>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f3b
rdx : 0x2
rflags : 0x4
rip : 0x72b404
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b404:	test	rax, rax
0x72b407:	mov	qword ptr [rbp - 0x60], rax
0x72b40b:	je	0x72b412

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b412
stashes  [<SimState @ 0x72b412>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f3b
rdx : 0x2
rflags : 0x44
rip : 0x72b412
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b412:	lea	rdx, [rip + 0x133d97]
0x72b419:	movsxd	rax, ebx
0x72b41c:	movzx	edi, byte ptr [rdx + rax]
0x72b420:	lea	rax, [rip + 0x133d99]
0x72b427:	add	rdi, rax
0x72b42a:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x85f1eb
rdx : 0x85f1b0
rflags : 0x4
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1eb
r13b : 0xeb
r13d : 0x85f1eb
r13w : 0xf1eb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x85f1eb
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1eb
r13b : 0xeb
r13d : 0x85f1eb
r13w : 0xf1eb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x85f1eb
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1eb
r13b : 0xeb
r13d : 0x85f1eb
r13w : 0xf1eb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x85f1eb
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1eb
r13b : 0xeb
r13d : 0x85f1eb
r13w : 0xf1eb
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x85f1eb
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1eb
r13b : 0xeb
r13d : 0x85f1eb
r13w : 0xf1eb
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x85f1eb
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1eb
r13b : 0xeb
r13d : 0x85f1eb
r13w : 0xf1eb
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf0
rdi : 0x85f1eb
rdx : 0x85f1b0
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f1ed
r13b : 0xed
r13d : 0x85f1ed
r13w : 0xf1ed
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x5
r15b : 0x5
r15d : 0x5
r15w : 0x5
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf0
rdi : 0x85f1eb
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f1ed
r13b : 0xed
r13d : 0x85f1ed
r13w : 0xf1ed
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x5
r15b : 0x5
r15d : 0x5
r15w : 0x5
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf0
rdi : 0x85f1eb
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b42f
stashes  [<SimState @ 0x72b42f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x85f1eb
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b42f
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b42f:	test	rax, rax
0x72b432:	mov	qword ptr [rbp - 0x60], rax
0x72b436:	je	0x72b43d

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b43d
stashes  [<SimState @ 0x72b43d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x85f1eb
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b43d
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b43d:	lea	rdi, [rip + 0x14aafe]
0x72b444:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefdf0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b449
stashes  [<SimState @ 0x72b449>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b449
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b449:	test	rax, rax
0x72b44c:	mov	qword ptr [rbp - 0x60], rax
0x72b450:	je	0x72b469

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b469
stashes  [<SimState @ 0x72b469>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b469
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b469:	lea	r14, [rip + 0x14c962]
0x72b470:	mov	qword ptr [rbp - 0x60], r14
0x72b474:	jmp	0x72b2df

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b2df
stashes  [<SimState @ 0x72b2df>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2df
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b2df:	lea	rsi, [rip + 0x14caec]
0x72b2e6:	mov	rdi, r14
0x72b2e9:	call	0x721200

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721200
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x783bd0
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b2ee
stashes  [<SimState @ 0x72b2ee>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2ee
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b2ee:	test	eax, eax
0x72b2f0:	je	0x72b480

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72b480
stashes  [<SimState @ 0x72b480>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefdf0
r15b : 0xf0
r15d : 0xfffefdf0
r15w : 0xfdf0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b480
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b480:	lea	rax, [rip + 0x14c94b]
0x72b487:	mov	qword ptr [r15], rax
0x72b48a:	lea	rax, [rip + 0x3824cf]
0x72b491:	mov	rax, qword ptr [rax + rbx*8]
0x72b495:	lea	rsp, [rbp - 0x28]
0x72b499:	pop	rbx
0x72b49a:	pop	r12
0x72b49c:	pop	r13
0x72b49e:	pop	r14
0x72b4a0:	pop	r15
0x72b4a2:	pop	rbp
0x72b4a3:	ret	

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72acdc
stashes  [<SimState @ 0x72acdc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaabb40
rbp : 0x7fffffffffefde0
rbx : 0x3
rcx : 0x7fffffffffefdf0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acdc
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acdc:	test	rax, rax
0x72acdf:	mov	qword ptr [rsp + r13*8 + 0xa0], rax
0x72ace7:	je	0x72ad40

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72ace9
stashes  [<SimState @ 0x72ace9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaabb40
rbp : 0x7fffffffffefde0
rbx : 0x3
rcx : 0x7fffffffffefdf0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72ace9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ace9:	cmp	dword ptr [rax + 0x30], -1
0x72aced:	je	0x72acf6

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72acf6
stashes  [<SimState @ 0x72acf6>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaabb40
rbp : 0x7fffffffffefde0
rbx : 0x3
rcx : 0x7fffffffffefdf0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acf6
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acf6:	mov	r14, qword ptr [rsp + r13*8 + 0x30]
0x72acfb:	lea	rax, [rip + 0x14d0d0]
0x72ad02:	cmp	r14, rax
0x72ad05:	je	0x72aca9

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72aca9
stashes  [<SimState @ 0x72aca9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x3
rcx : 0x7fffffffffefdf0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72aca9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72aca9:	movsxd	rbx, r15d
0x72acac:	test	ebx, ebx
0x72acae:	lea	r15d, [rbx - 1]
0x72acb2:	je	0x72b010

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:06 active states =  1 rip =  0x72acb8
stashes  [<SimState @ 0x72acb8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72acb8
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acb8:	cmp	r15d, 6
0x72acbc:	je	0x72b0e0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72acc2
stashes  [<SimState @ 0x72acc2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x2
r13b : 0x2
r13d : 0x2
r13w : 0x2
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x2
rcx : 0x7fffffffffefdf0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x91
rip : 0x72acc2
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acc2:	movsxd	r13, r15d
0x72acc5:	mov	rsi, qword ptr [rsp + 0x28]
0x72acca:	mov	rdi, qword ptr [rsp + 0x20]
0x72accf:	lea	rcx, [rbp + r13*8]
0x72acd4:	mov	edx, r15d
0x72acd7:	call	0x72b2b0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b2b0
stashes  [<SimState @ 0x72b2b0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x2
rcx : 0x7fffffffffefde8
rdi : 0x0
rdx : 0x1
rflags : 0x91
rip : 0x72b2b0
rsi : 0x0
rsp : 0x7fffffffffefda8
0x72b2b0:	push	rbp
0x72b2b1:	mov	rbp, rsp
0x72b2b4:	push	r15
0x72b2b6:	push	r14
0x72b2b8:	push	r13
0x72b2ba:	push	r12
0x72b2bc:	mov	r15, rcx
0x72b2bf:	push	rbx
0x72b2c0:	mov	r12, rdi
0x72b2c3:	movsxd	rbx, edx
0x72b2c6:	sub	rsp, 0x58
0x72b2ca:	mov	r14, qword ptr [rcx]
0x72b2cd:	mov	qword ptr [rbp - 0x68], rsi
0x72b2d1:	mov	qword ptr [rbp - 0x60], r14
0x72b2d5:	cmp	byte ptr [r14], 0
0x72b2d9:	je	0x72b3f8

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b3f8
stashes  [<SimState @ 0x72b3f8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x0
rdx : 0x1
rflags : 0x44
rip : 0x72b3f8
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b3f8:	lea	rdi, [rip + 0x14ab3c]
0x72b3ff:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f3b
rdx : 0x1
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f3b
rdx : 0x1
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f3b
rdx : 0x1
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f3b
rdx : 0x1
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f3b
rdx : 0x1
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f3b
rdx : 0x1
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde8
rdi : 0x875f3b
rdx : 0x1
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde8
rdi : 0x875f3b
rdx : 0x1
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde8
rdi : 0x875f3b
rdx : 0x1
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b404
stashes  [<SimState @ 0x72b404>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f3b
rdx : 0x1
rflags : 0x4
rip : 0x72b404
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b404:	test	rax, rax
0x72b407:	mov	qword ptr [rbp - 0x60], rax
0x72b40b:	je	0x72b412

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b412
stashes  [<SimState @ 0x72b412>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f3b
rdx : 0x1
rflags : 0x44
rip : 0x72b412
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b412:	lea	rdx, [rip + 0x133d97]
0x72b419:	movsxd	rax, ebx
0x72b41c:	movzx	edi, byte ptr [rdx + rax]
0x72b420:	lea	rax, [rip + 0x133d99]
0x72b427:	add	rdi, rax
0x72b42a:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x85f1e0
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1e0
r13b : 0xe0
r13d : 0x85f1e0
r13w : 0xf1e0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x85f1e0
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1e0
r13b : 0xe0
r13d : 0x85f1e0
r13w : 0xf1e0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x85f1e0
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1e0
r13b : 0xe0
r13d : 0x85f1e0
r13w : 0xf1e0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xa
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x85f1e0
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1e0
r13b : 0xe0
r13d : 0x85f1e0
r13w : 0xf1e0
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x85f1e0
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1e0
r13b : 0xe0
r13d : 0x85f1e0
r13w : 0xf1e0
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x85f1e0
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1e0
r13b : 0xe0
r13d : 0x85f1e0
r13w : 0xf1e0
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde8
rdi : 0x85f1e0
rdx : 0x85f1b0
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f1e2
r13b : 0xe2
r13d : 0x85f1e2
r13w : 0xf1e2
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x8
r15b : 0x8
r15d : 0x8
r15w : 0x8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde8
rdi : 0x85f1e0
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f1e2
r13b : 0xe2
r13d : 0x85f1e2
r13w : 0xf1e2
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x8
r15b : 0x8
r15d : 0x8
r15w : 0x8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde8
rdi : 0x85f1e0
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b42f
stashes  [<SimState @ 0x72b42f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x85f1e0
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b42f
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b42f:	test	rax, rax
0x72b432:	mov	qword ptr [rbp - 0x60], rax
0x72b436:	je	0x72b43d

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b43d
stashes  [<SimState @ 0x72b43d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x85f1e0
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b43d
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b43d:	lea	rdi, [rip + 0x14aafe]
0x72b444:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b449
stashes  [<SimState @ 0x72b449>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b449
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b449:	test	rax, rax
0x72b44c:	mov	qword ptr [rbp - 0x60], rax
0x72b450:	je	0x72b469

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b469
stashes  [<SimState @ 0x72b469>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b469
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b469:	lea	r14, [rip + 0x14c962]
0x72b470:	mov	qword ptr [rbp - 0x60], r14
0x72b474:	jmp	0x72b2df

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b2df
stashes  [<SimState @ 0x72b2df>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2df
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b2df:	lea	rsi, [rip + 0x14caec]
0x72b2e6:	mov	rdi, r14
0x72b2e9:	call	0x721200

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721200
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x783bd0
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b2ee
stashes  [<SimState @ 0x72b2ee>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2ee
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b2ee:	test	eax, eax
0x72b2f0:	je	0x72b480

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b480
stashes  [<SimState @ 0x72b480>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefde8
r15b : 0xe8
r15d : 0xfffefde8
r15w : 0xfde8
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b480
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b480:	lea	rax, [rip + 0x14c94b]
0x72b487:	mov	qword ptr [r15], rax
0x72b48a:	lea	rax, [rip + 0x3824cf]
0x72b491:	mov	rax, qword ptr [rax + rbx*8]
0x72b495:	lea	rsp, [rbp - 0x28]
0x72b499:	pop	rbx
0x72b49a:	pop	r12
0x72b49c:	pop	r13
0x72b49e:	pop	r14
0x72b4a0:	pop	r15
0x72b4a2:	pop	rbp
0x72b4a3:	ret	

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72acdc
stashes  [<SimState @ 0x72acdc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaabac0
rbp : 0x7fffffffffefde0
rbx : 0x2
rcx : 0x7fffffffffefde8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acdc
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acdc:	test	rax, rax
0x72acdf:	mov	qword ptr [rsp + r13*8 + 0xa0], rax
0x72ace7:	je	0x72ad40

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72ace9
stashes  [<SimState @ 0x72ace9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaabac0
rbp : 0x7fffffffffefde0
rbx : 0x2
rcx : 0x7fffffffffefde8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72ace9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ace9:	cmp	dword ptr [rax + 0x30], -1
0x72aced:	je	0x72acf6

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72acf6
stashes  [<SimState @ 0x72acf6>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaabac0
rbp : 0x7fffffffffefde0
rbx : 0x2
rcx : 0x7fffffffffefde8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acf6
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acf6:	mov	r14, qword ptr [rsp + r13*8 + 0x30]
0x72acfb:	lea	rax, [rip + 0x14d0d0]
0x72ad02:	cmp	r14, rax
0x72ad05:	je	0x72aca9

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72aca9
stashes  [<SimState @ 0x72aca9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x2
rcx : 0x7fffffffffefde8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72aca9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72aca9:	movsxd	rbx, r15d
0x72acac:	test	ebx, ebx
0x72acae:	lea	r15d, [rbx - 1]
0x72acb2:	je	0x72b010

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72acb8
stashes  [<SimState @ 0x72acb8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72acb8
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acb8:	cmp	r15d, 6
0x72acbc:	je	0x72b0e0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72acc2
stashes  [<SimState @ 0x72acc2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x1
rcx : 0x7fffffffffefde8
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x95
rip : 0x72acc2
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acc2:	movsxd	r13, r15d
0x72acc5:	mov	rsi, qword ptr [rsp + 0x28]
0x72acca:	mov	rdi, qword ptr [rsp + 0x20]
0x72accf:	lea	rcx, [rbp + r13*8]
0x72acd4:	mov	edx, r15d
0x72acd7:	call	0x72b2b0

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b2b0
stashes  [<SimState @ 0x72b2b0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x1
rcx : 0x7fffffffffefde0
rdi : 0x0
rdx : 0x0
rflags : 0x95
rip : 0x72b2b0
rsi : 0x0
rsp : 0x7fffffffffefda8
0x72b2b0:	push	rbp
0x72b2b1:	mov	rbp, rsp
0x72b2b4:	push	r15
0x72b2b6:	push	r14
0x72b2b8:	push	r13
0x72b2ba:	push	r12
0x72b2bc:	mov	r15, rcx
0x72b2bf:	push	rbx
0x72b2c0:	mov	r12, rdi
0x72b2c3:	movsxd	rbx, edx
0x72b2c6:	sub	rsp, 0x58
0x72b2ca:	mov	r14, qword ptr [rcx]
0x72b2cd:	mov	qword ptr [rbp - 0x68], rsi
0x72b2d1:	mov	qword ptr [rbp - 0x60], r14
0x72b2d5:	cmp	byte ptr [r14], 0
0x72b2d9:	je	0x72b3f8

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b3f8
stashes  [<SimState @ 0x72b3f8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x0
rdx : 0x0
rflags : 0x44
rip : 0x72b3f8
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b3f8:	lea	rdi, [rip + 0x14ab3c]
0x72b3ff:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f3b
rdx : 0x0
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f3b
rdx : 0x0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f3b
rdx : 0x0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f3b
rdx : 0x0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f3b
rdx : 0x0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f3b
rdx : 0x0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f3b
r13b : 0x3b
r13d : 0x875f3b
r13w : 0x5f3b
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f3b
rdx : 0x0
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f3b
rdx : 0x0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x875f3d
r13b : 0x3d
r13d : 0x875f3d
r13w : 0x5f3d
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x4
r15b : 0x4
r15d : 0x4
r15w : 0x4
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f3b
rdx : 0x0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b3f8 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b404
stashes  [<SimState @ 0x72b404>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f3b
rdx : 0x0
rflags : 0x4
rip : 0x72b404
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b404:	test	rax, rax
0x72b407:	mov	qword ptr [rbp - 0x60], rax
0x72b40b:	je	0x72b412

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b412
stashes  [<SimState @ 0x72b412>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f3b
rdx : 0x0
rflags : 0x44
rip : 0x72b412
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b412:	lea	rdx, [rip + 0x133d97]
0x72b419:	movsxd	rax, ebx
0x72b41c:	movzx	edi, byte ptr [rdx + rax]
0x72b420:	lea	rax, [rip + 0x133d99]
0x72b427:	add	rdi, rax
0x72b42a:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x85f1cb
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1cb
r13b : 0xcb
r13d : 0x85f1cb
r13w : 0xf1cb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x85f1cb
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1cb
r13b : 0xcb
r13d : 0x85f1cb
r13w : 0xf1cb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x85f1c0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x85f1cb
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1cb
r13b : 0xcb
r13d : 0x85f1cb
r13w : 0xf1cb
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x8
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x85f1cb
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1cb
r13b : 0xcb
r13d : 0x85f1cb
r13w : 0xf1cb
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x85f1cb
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1cb
r13b : 0xcb
r13d : 0x85f1cb
r13w : 0xf1cb
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x85f1cb
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x85f1cb
r13b : 0xcb
r13d : 0x85f1cb
r13w : 0xf1cb
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x85f1cb
rdx : 0x85f1b0
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f1cd
r13b : 0xcd
r13d : 0x85f1cd
r13w : 0xf1cd
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x6
r15b : 0x6
r15d : 0x6
r15w : 0x6
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x85f1cb
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x434c
r12b : 0x4c
r12d : 0x434c
r12w : 0x434c
r13 : 0x85f1cd
r13b : 0xcd
r13d : 0x85f1cd
r13w : 0xf1cd
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x6
r15b : 0x6
r15d : 0x6
r15w : 0x6
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x85f1cb
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b412 => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b42f
stashes  [<SimState @ 0x72b42f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x85f1cb
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b42f
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b42f:	test	rax, rax
0x72b432:	mov	qword ptr [rbp - 0x60], rax
0x72b436:	je	0x72b43d

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b43d
stashes  [<SimState @ 0x72b43d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x85f1cb
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b43d
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b43d:	lea	rdi, [rip + 0x14aafe]
0x72b444:	call	0x736420

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefd18
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefcd8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefce0
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x0
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x875f42
r13b : 0x42
r13d : 0x875f42
r13w : 0x5f42
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefce0
0x7364b2:	jmp	0x736486

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x414c
r12b : 0x4c
r12d : 0x414c
r12w : 0x414c
r13 : 0x875f44
r13b : 0x44
r13d : 0x875f44
r13w : 0x5f44
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x2
r15b : 0x2
r15d : 0x2
r15w : 0x2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x4c
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefce0
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x72b43d => 0x736420(getenv)
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b449
stashes  [<SimState @ 0x72b449>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b449
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b449:	test	rax, rax
0x72b44c:	mov	qword ptr [rbp - 0x60], rax
0x72b450:	je	0x72b469

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b469
stashes  [<SimState @ 0x72b469>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x407649
r14b : 0x49
r14d : 0x407649
r14w : 0x7649
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b469
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b469:	lea	r14, [rip + 0x14c962]
0x72b470:	mov	qword ptr [rbp - 0x60], r14
0x72b474:	jmp	0x72b2df

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b2df
stashes  [<SimState @ 0x72b2df>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x875f42
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2df
rsi : 0x0
rsp : 0x7fffffffffefd20
0x72b2df:	lea	rsi, [rip + 0x14caec]
0x72b2e6:	mov	rdi, r14
0x72b2e9:	call	0x721200

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721200
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x783bd0
rsi : 0x877dd2
rsp : 0x7fffffffffefd18
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72b2df => 0x721200()
0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b2ee
stashes  [<SimState @ 0x72b2ee>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b2ee
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b2ee:	test	eax, eax
0x72b2f0:	je	0x72b480

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b480
stashes  [<SimState @ 0x72b480>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x7fffffffffefde0
r15b : 0xe0
r15d : 0xfffefde0
r15w : 0xfde0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefda0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b480
rsi : 0x877dd2
rsp : 0x7fffffffffefd20
0x72b480:	lea	rax, [rip + 0x14c94b]
0x72b487:	mov	qword ptr [r15], rax
0x72b48a:	lea	rax, [rip + 0x3824cf]
0x72b491:	mov	rax, qword ptr [rax + rbx*8]
0x72b495:	lea	rsp, [rbp - 0x28]
0x72b499:	pop	rbx
0x72b49a:	pop	r12
0x72b49c:	pop	r13
0x72b49e:	pop	r14
0x72b4a0:	pop	r15
0x72b4a2:	pop	rbp
0x72b4a3:	ret	

0x72acc2 => 0x72b2b0(_nl_find_locale)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72acdc
stashes  [<SimState @ 0x72acdc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaab580
rbp : 0x7fffffffffefde0
rbx : 0x1
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acdc
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acdc:	test	rax, rax
0x72acdf:	mov	qword ptr [rsp + r13*8 + 0xa0], rax
0x72ace7:	je	0x72ad40

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72ace9
stashes  [<SimState @ 0x72ace9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaab580
rbp : 0x7fffffffffefde0
rbx : 0x1
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72ace9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72ace9:	cmp	dword ptr [rax + 0x30], -1
0x72aced:	je	0x72acf6

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72acf6
stashes  [<SimState @ 0x72acf6>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaab580
rbp : 0x7fffffffffefde0
rbx : 0x1
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72acf6
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72acf6:	mov	r14, qword ptr [rsp + r13*8 + 0x30]
0x72acfb:	lea	rax, [rip + 0x14d0d0]
0x72ad02:	cmp	r14, rax
0x72ad05:	je	0x72aca9

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72aca9
stashes  [<SimState @ 0x72aca9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x1
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72aca9
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72aca9:	movsxd	rbx, r15d
0x72acac:	test	ebx, ebx
0x72acae:	lea	r15d, [rbx - 1]
0x72acb2:	je	0x72b010

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72b010
stashes  [<SimState @ 0x72b010>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b010
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72b010:	mov	rsi, rbp
0x72b013:	mov	edi, 6
0x72b018:	call	0x72a930

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72a930
stashes  [<SimState @ 0x72a930>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x6
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a930
rsi : 0x7fffffffffefde0
rsp : 0x7fffffffffefda8
0x72a930:	push	r15
0x72a932:	push	r14
0x72a934:	xor	r14d, r14d
0x72a937:	push	r13
0x72a939:	push	r12
0x72a93b:	mov	r13d, 1
0x72a941:	push	rbp
0x72a942:	push	rbx
0x72a943:	xor	r12d, r12d
0x72a946:	mov	ebx, edi
0x72a948:	sub	rsp, 0x18
0x72a94c:	mov	qword ptr [rsp], rsi
0x72a950:	jmp	0x72a9b7

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72a9b7
stashes  [<SimState @ 0x72a9b7>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x6
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72a9b7
rsi : 0x7fffffffffefde0
rsp : 0x7fffffffffefd60
0x72a9b7:	cmp	r14, 6
0x72a9bb:	je	0x72a9b3

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:07 active states =  1 rip =  0x72a9bd
stashes  [<SimState @ 0x72a9bd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x6
rdx : 0x85f1b0
rflags : 0x95
rip : 0x72a9bd
rsi : 0x7fffffffffefde0
rsp : 0x7fffffffffefd60
0x72a9bd:	cmp	ebx, 6
0x72a9c0:	jne	0x72a958

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9c2
stashes  [<SimState @ 0x72a9c2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x6
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9c2
rsi : 0x7fffffffffefde0
rsp : 0x7fffffffffefd60
0x72a9c2:	mov	rax, qword ptr [rsp]
0x72a9c6:	mov	rbp, qword ptr [rax + r14*8]
0x72a9ca:	jmp	0x72a96c

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a96c
stashes  [<SimState @ 0x72a96c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x6
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a96c
rsi : 0x7fffffffffefde0
rsp : 0x7fffffffffefd60
0x72a96c:	mov	rdi, rbp
0x72a96f:	call	0x721100

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721100
rsi : 0x7fffffffffefde0
rsp : 0x7fffffffffefd58
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x784030
rsi : 0x7fffffffffefde0
rsp : 0x7fffffffffefd58
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a974
stashes  [<SimState @ 0x72a974>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a974
rsi : 0x7fffffffffefde0
rsp : 0x7fffffffffefd60
0x72a974:	mov	r15, rax
0x72a977:	lea	rax, [rip + 0x134822]
0x72a97e:	movzx	eax, byte ptr [rax + r14]
0x72a983:	lea	r12, [r12 + rax + 2]
0x72a988:	add	r12, r15
0x72a98b:	test	r13d, r13d
0x72a98e:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a990
stashes  [<SimState @ 0x72a990>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xb
r12b : 0xb
r12d : 0xb
r12w : 0xb
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x8
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a990
rsi : 0x7fffffffffefde0
rsp : 0x7fffffffffefd60
0x72a990:	mov	rax, qword ptr [rsp]
0x72a994:	mov	rsi, qword ptr [rax]
0x72a997:	cmp	rsi, rbp
0x72a99a:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9ad
stashes  [<SimState @ 0x72a9ad>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xb
r12b : 0xb
r12d : 0xb
r12w : 0xb
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9ad
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9ad:	cmp	r14d, 0xc
0x72a9b1:	je	0x72a9d0

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9b3
stashes  [<SimState @ 0x72a9b3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xb
r12b : 0xb
r12d : 0xb
r12w : 0xb
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x91
rip : 0x72a9b3
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9b3:	add	r14, 1
0x72a9b7:	cmp	r14, 6
0x72a9bb:	je	0x72a9b3

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9bd
stashes  [<SimState @ 0x72a9bd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xb
r12b : 0xb
r12d : 0xb
r12w : 0xb
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x91
rip : 0x72a9bd
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9bd:	cmp	ebx, 6
0x72a9c0:	jne	0x72a958

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9c2
stashes  [<SimState @ 0x72a9c2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xb
r12b : 0xb
r12d : 0xb
r12w : 0xb
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9c2
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9c2:	mov	rax, qword ptr [rsp]
0x72a9c6:	mov	rbp, qword ptr [rax + r14*8]
0x72a9ca:	jmp	0x72a96c

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a96c
stashes  [<SimState @ 0x72a96c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xb
r12b : 0xb
r12d : 0xb
r12w : 0xb
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a96c
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a96c:	mov	rdi, rbp
0x72a96f:	call	0x721100

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xb
r12b : 0xb
r12d : 0xb
r12w : 0xb
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721100
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xb
r12b : 0xb
r12d : 0xb
r12w : 0xb
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x784030
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a974
stashes  [<SimState @ 0x72a974>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xb
r12b : 0xb
r12d : 0xb
r12w : 0xb
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a974
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a974:	mov	r15, rax
0x72a977:	lea	rax, [rip + 0x134822]
0x72a97e:	movzx	eax, byte ptr [rax + r14]
0x72a983:	lea	r12, [r12 + rax + 2]
0x72a988:	add	r12, r15
0x72a98b:	test	r13d, r13d
0x72a98e:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a990
stashes  [<SimState @ 0x72a990>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x18
r12b : 0x18
r12d : 0x18
r12w : 0x18
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xa
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a990
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a990:	mov	rax, qword ptr [rsp]
0x72a994:	mov	rsi, qword ptr [rax]
0x72a997:	cmp	rsi, rbp
0x72a99a:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9ad
stashes  [<SimState @ 0x72a9ad>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x18
r12b : 0x18
r12d : 0x18
r12w : 0x18
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9ad
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9ad:	cmp	r14d, 0xc
0x72a9b1:	je	0x72a9d0

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9b3
stashes  [<SimState @ 0x72a9b3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x18
r12b : 0x18
r12d : 0x18
r12w : 0x18
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x95
rip : 0x72a9b3
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9b3:	add	r14, 1
0x72a9b7:	cmp	r14, 6
0x72a9bb:	je	0x72a9b3

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9bd
stashes  [<SimState @ 0x72a9bd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x18
r12b : 0x18
r12d : 0x18
r12w : 0x18
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x2
r14b : 0x2
r14d : 0x2
r14w : 0x2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x95
rip : 0x72a9bd
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9bd:	cmp	ebx, 6
0x72a9c0:	jne	0x72a958

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9c2
stashes  [<SimState @ 0x72a9c2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x18
r12b : 0x18
r12d : 0x18
r12w : 0x18
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x2
r14b : 0x2
r14d : 0x2
r14w : 0x2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9c2
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9c2:	mov	rax, qword ptr [rsp]
0x72a9c6:	mov	rbp, qword ptr [rax + r14*8]
0x72a9ca:	jmp	0x72a96c

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a96c
stashes  [<SimState @ 0x72a96c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x18
r12b : 0x18
r12d : 0x18
r12w : 0x18
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x2
r14b : 0x2
r14d : 0x2
r14w : 0x2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a96c
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a96c:	mov	rdi, rbp
0x72a96f:	call	0x721100

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x18
r12b : 0x18
r12d : 0x18
r12w : 0x18
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x2
r14b : 0x2
r14d : 0x2
r14w : 0x2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721100
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x18
r12b : 0x18
r12d : 0x18
r12w : 0x18
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x2
r14b : 0x2
r14d : 0x2
r14w : 0x2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x784030
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a974
stashes  [<SimState @ 0x72a974>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x18
r12b : 0x18
r12d : 0x18
r12w : 0x18
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x2
r14b : 0x2
r14d : 0x2
r14w : 0x2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a974
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a974:	mov	r15, rax
0x72a977:	lea	rax, [rip + 0x134822]
0x72a97e:	movzx	eax, byte ptr [rax + r14]
0x72a983:	lea	r12, [r12 + rax + 2]
0x72a988:	add	r12, r15
0x72a98b:	test	r13d, r13d
0x72a98e:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a990
stashes  [<SimState @ 0x72a990>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x22
r12b : 0x22
r12d : 0x22
r12w : 0x22
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x2
r14b : 0x2
r14d : 0x2
r14w : 0x2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a990
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a990:	mov	rax, qword ptr [rsp]
0x72a994:	mov	rsi, qword ptr [rax]
0x72a997:	cmp	rsi, rbp
0x72a99a:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9ad
stashes  [<SimState @ 0x72a9ad>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x22
r12b : 0x22
r12d : 0x22
r12w : 0x22
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x2
r14b : 0x2
r14d : 0x2
r14w : 0x2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9ad
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9ad:	cmp	r14d, 0xc
0x72a9b1:	je	0x72a9d0

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9b3
stashes  [<SimState @ 0x72a9b3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x22
r12b : 0x22
r12d : 0x22
r12w : 0x22
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x2
r14b : 0x2
r14d : 0x2
r14w : 0x2
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x95
rip : 0x72a9b3
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9b3:	add	r14, 1
0x72a9b7:	cmp	r14, 6
0x72a9bb:	je	0x72a9b3

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9bd
stashes  [<SimState @ 0x72a9bd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x22
r12b : 0x22
r12d : 0x22
r12w : 0x22
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x3
r14b : 0x3
r14d : 0x3
r14w : 0x3
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x91
rip : 0x72a9bd
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9bd:	cmp	ebx, 6
0x72a9c0:	jne	0x72a958

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9c2
stashes  [<SimState @ 0x72a9c2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x22
r12b : 0x22
r12d : 0x22
r12w : 0x22
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x3
r14b : 0x3
r14d : 0x3
r14w : 0x3
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9c2
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9c2:	mov	rax, qword ptr [rsp]
0x72a9c6:	mov	rbp, qword ptr [rax + r14*8]
0x72a9ca:	jmp	0x72a96c

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a96c
stashes  [<SimState @ 0x72a96c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x22
r12b : 0x22
r12d : 0x22
r12w : 0x22
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x3
r14b : 0x3
r14d : 0x3
r14w : 0x3
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a96c
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a96c:	mov	rdi, rbp
0x72a96f:	call	0x721100

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x22
r12b : 0x22
r12d : 0x22
r12w : 0x22
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x3
r14b : 0x3
r14d : 0x3
r14w : 0x3
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721100
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x22
r12b : 0x22
r12d : 0x22
r12w : 0x22
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x3
r14b : 0x3
r14d : 0x3
r14w : 0x3
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x784030
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a974
stashes  [<SimState @ 0x72a974>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x22
r12b : 0x22
r12d : 0x22
r12w : 0x22
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x3
r14b : 0x3
r14d : 0x3
r14w : 0x3
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a974
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a974:	mov	r15, rax
0x72a977:	lea	rax, [rip + 0x134822]
0x72a97e:	movzx	eax, byte ptr [rax + r14]
0x72a983:	lea	r12, [r12 + rax + 2]
0x72a988:	add	r12, r15
0x72a98b:	test	r13d, r13d
0x72a98e:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a990
stashes  [<SimState @ 0x72a990>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2f
r12b : 0x2f
r12d : 0x2f
r12w : 0x2f
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x3
r14b : 0x3
r14d : 0x3
r14w : 0x3
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xa
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a990
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a990:	mov	rax, qword ptr [rsp]
0x72a994:	mov	rsi, qword ptr [rax]
0x72a997:	cmp	rsi, rbp
0x72a99a:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9ad
stashes  [<SimState @ 0x72a9ad>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2f
r12b : 0x2f
r12d : 0x2f
r12w : 0x2f
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x3
r14b : 0x3
r14d : 0x3
r14w : 0x3
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9ad
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9ad:	cmp	r14d, 0xc
0x72a9b1:	je	0x72a9d0

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9b3
stashes  [<SimState @ 0x72a9b3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2f
r12b : 0x2f
r12d : 0x2f
r12w : 0x2f
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x3
r14b : 0x3
r14d : 0x3
r14w : 0x3
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x91
rip : 0x72a9b3
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9b3:	add	r14, 1
0x72a9b7:	cmp	r14, 6
0x72a9bb:	je	0x72a9b3

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9bd
stashes  [<SimState @ 0x72a9bd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2f
r12b : 0x2f
r12d : 0x2f
r12w : 0x2f
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x91
rip : 0x72a9bd
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9bd:	cmp	ebx, 6
0x72a9c0:	jne	0x72a958

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9c2
stashes  [<SimState @ 0x72a9c2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2f
r12b : 0x2f
r12d : 0x2f
r12w : 0x2f
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9c2
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9c2:	mov	rax, qword ptr [rsp]
0x72a9c6:	mov	rbp, qword ptr [rax + r14*8]
0x72a9ca:	jmp	0x72a96c

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a96c
stashes  [<SimState @ 0x72a96c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2f
r12b : 0x2f
r12d : 0x2f
r12w : 0x2f
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a96c
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a96c:	mov	rdi, rbp
0x72a96f:	call	0x721100

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2f
r12b : 0x2f
r12d : 0x2f
r12w : 0x2f
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721100
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2f
r12b : 0x2f
r12d : 0x2f
r12w : 0x2f
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x784030
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a974
stashes  [<SimState @ 0x72a974>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2f
r12b : 0x2f
r12d : 0x2f
r12w : 0x2f
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a974
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a974:	mov	r15, rax
0x72a977:	lea	rax, [rip + 0x134822]
0x72a97e:	movzx	eax, byte ptr [rax + r14]
0x72a983:	lea	r12, [r12 + rax + 2]
0x72a988:	add	r12, r15
0x72a98b:	test	r13d, r13d
0x72a98e:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a990
stashes  [<SimState @ 0x72a990>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3d
r12b : 0x3d
r12d : 0x3d
r12w : 0x3d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xb
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a990
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a990:	mov	rax, qword ptr [rsp]
0x72a994:	mov	rsi, qword ptr [rax]
0x72a997:	cmp	rsi, rbp
0x72a99a:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9ad
stashes  [<SimState @ 0x72a9ad>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3d
r12b : 0x3d
r12d : 0x3d
r12w : 0x3d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9ad
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9ad:	cmp	r14d, 0xc
0x72a9b1:	je	0x72a9d0

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9b3
stashes  [<SimState @ 0x72a9b3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3d
r12b : 0x3d
r12d : 0x3d
r12w : 0x3d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x91
rip : 0x72a9b3
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9b3:	add	r14, 1
0x72a9b7:	cmp	r14, 6
0x72a9bb:	je	0x72a9b3

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9bd
stashes  [<SimState @ 0x72a9bd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3d
r12b : 0x3d
r12d : 0x3d
r12w : 0x3d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x95
rip : 0x72a9bd
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9bd:	cmp	ebx, 6
0x72a9c0:	jne	0x72a958

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9c2
stashes  [<SimState @ 0x72a9c2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3d
r12b : 0x3d
r12d : 0x3d
r12w : 0x3d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9c2
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9c2:	mov	rax, qword ptr [rsp]
0x72a9c6:	mov	rbp, qword ptr [rax + r14*8]
0x72a9ca:	jmp	0x72a96c

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a96c
stashes  [<SimState @ 0x72a96c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3d
r12b : 0x3d
r12d : 0x3d
r12w : 0x3d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a96c
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a96c:	mov	rdi, rbp
0x72a96f:	call	0x721100

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3d
r12b : 0x3d
r12d : 0x3d
r12w : 0x3d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721100
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3d
r12b : 0x3d
r12d : 0x3d
r12w : 0x3d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x784030
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a974
stashes  [<SimState @ 0x72a974>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3d
r12b : 0x3d
r12d : 0x3d
r12w : 0x3d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a974
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a974:	mov	r15, rax
0x72a977:	lea	rax, [rip + 0x134822]
0x72a97e:	movzx	eax, byte ptr [rax + r14]
0x72a983:	lea	r12, [r12 + rax + 2]
0x72a988:	add	r12, r15
0x72a98b:	test	r13d, r13d
0x72a98e:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a990
stashes  [<SimState @ 0x72a990>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x4b
r12b : 0x4b
r12d : 0x4b
r12w : 0x4b
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xb
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a990
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a990:	mov	rax, qword ptr [rsp]
0x72a994:	mov	rsi, qword ptr [rax]
0x72a997:	cmp	rsi, rbp
0x72a99a:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9ad
stashes  [<SimState @ 0x72a9ad>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x4b
r12b : 0x4b
r12d : 0x4b
r12w : 0x4b
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9ad
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9ad:	cmp	r14d, 0xc
0x72a9b1:	je	0x72a9d0

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9b3
stashes  [<SimState @ 0x72a9b3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x4b
r12b : 0x4b
r12d : 0x4b
r12w : 0x4b
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x95
rip : 0x72a9b3
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9b3:	add	r14, 1
0x72a9b7:	cmp	r14, 6
0x72a9bb:	je	0x72a9b3

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9b3
stashes  [<SimState @ 0x72a9b3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x4b
r12b : 0x4b
r12d : 0x4b
r12w : 0x4b
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9b3
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9b3:	add	r14, 1
0x72a9b7:	cmp	r14, 6
0x72a9bb:	je	0x72a9b3

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9bd
stashes  [<SimState @ 0x72a9bd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x4b
r12b : 0x4b
r12d : 0x4b
r12w : 0x4b
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a9bd
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9bd:	cmp	ebx, 6
0x72a9c0:	jne	0x72a958

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9c2
stashes  [<SimState @ 0x72a9c2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x4b
r12b : 0x4b
r12d : 0x4b
r12w : 0x4b
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9c2
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9c2:	mov	rax, qword ptr [rsp]
0x72a9c6:	mov	rbp, qword ptr [rax + r14*8]
0x72a9ca:	jmp	0x72a96c

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a96c
stashes  [<SimState @ 0x72a96c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x4b
r12b : 0x4b
r12d : 0x4b
r12w : 0x4b
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a96c
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a96c:	mov	rdi, rbp
0x72a96f:	call	0x721100

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x4b
r12b : 0x4b
r12d : 0x4b
r12w : 0x4b
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721100
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x4b
r12b : 0x4b
r12d : 0x4b
r12w : 0x4b
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x784030
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a974
stashes  [<SimState @ 0x72a974>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x4b
r12b : 0x4b
r12d : 0x4b
r12w : 0x4b
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a974
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a974:	mov	r15, rax
0x72a977:	lea	rax, [rip + 0x134822]
0x72a97e:	movzx	eax, byte ptr [rax + r14]
0x72a983:	lea	r12, [r12 + rax + 2]
0x72a988:	add	r12, r15
0x72a98b:	test	r13d, r13d
0x72a98e:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a990
stashes  [<SimState @ 0x72a990>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x56
r12b : 0x56
r12d : 0x56
r12w : 0x56
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x8
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a990
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a990:	mov	rax, qword ptr [rsp]
0x72a994:	mov	rsi, qword ptr [rax]
0x72a997:	cmp	rsi, rbp
0x72a99a:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9ad
stashes  [<SimState @ 0x72a9ad>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x56
r12b : 0x56
r12d : 0x56
r12w : 0x56
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9ad
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9ad:	cmp	r14d, 0xc
0x72a9b1:	je	0x72a9d0

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9b3
stashes  [<SimState @ 0x72a9b3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x56
r12b : 0x56
r12d : 0x56
r12w : 0x56
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x91
rip : 0x72a9b3
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9b3:	add	r14, 1
0x72a9b7:	cmp	r14, 6
0x72a9bb:	je	0x72a9b3

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9bd
stashes  [<SimState @ 0x72a9bd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x56
r12b : 0x56
r12d : 0x56
r12w : 0x56
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a9bd
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9bd:	cmp	ebx, 6
0x72a9c0:	jne	0x72a958

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9c2
stashes  [<SimState @ 0x72a9c2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x56
r12b : 0x56
r12d : 0x56
r12w : 0x56
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9c2
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9c2:	mov	rax, qword ptr [rsp]
0x72a9c6:	mov	rbp, qword ptr [rax + r14*8]
0x72a9ca:	jmp	0x72a96c

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a96c
stashes  [<SimState @ 0x72a96c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x56
r12b : 0x56
r12d : 0x56
r12w : 0x56
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a96c
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a96c:	mov	rdi, rbp
0x72a96f:	call	0x721100

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x56
r12b : 0x56
r12d : 0x56
r12w : 0x56
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721100
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x56
r12b : 0x56
r12d : 0x56
r12w : 0x56
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x784030
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a974
stashes  [<SimState @ 0x72a974>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x56
r12b : 0x56
r12d : 0x56
r12w : 0x56
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a974
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a974:	mov	r15, rax
0x72a977:	lea	rax, [rip + 0x134822]
0x72a97e:	movzx	eax, byte ptr [rax + r14]
0x72a983:	lea	r12, [r12 + rax + 2]
0x72a988:	add	r12, r15
0x72a98b:	test	r13d, r13d
0x72a98e:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a990
stashes  [<SimState @ 0x72a990>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60
r12b : 0x60
r12d : 0x60
r12w : 0x60
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a990
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a990:	mov	rax, qword ptr [rsp]
0x72a994:	mov	rsi, qword ptr [rax]
0x72a997:	cmp	rsi, rbp
0x72a99a:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9ad
stashes  [<SimState @ 0x72a9ad>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60
r12b : 0x60
r12d : 0x60
r12w : 0x60
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9ad
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9ad:	cmp	r14d, 0xc
0x72a9b1:	je	0x72a9d0

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9b3
stashes  [<SimState @ 0x72a9b3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60
r12b : 0x60
r12d : 0x60
r12w : 0x60
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x95
rip : 0x72a9b3
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9b3:	add	r14, 1
0x72a9b7:	cmp	r14, 6
0x72a9bb:	je	0x72a9b3

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9bd
stashes  [<SimState @ 0x72a9bd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60
r12b : 0x60
r12d : 0x60
r12w : 0x60
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x9
r14b : 0x9
r14d : 0x9
r14w : 0x9
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72a9bd
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9bd:	cmp	ebx, 6
0x72a9c0:	jne	0x72a958

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9c2
stashes  [<SimState @ 0x72a9c2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60
r12b : 0x60
r12d : 0x60
r12w : 0x60
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x9
r14b : 0x9
r14d : 0x9
r14w : 0x9
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9c2
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9c2:	mov	rax, qword ptr [rsp]
0x72a9c6:	mov	rbp, qword ptr [rax + r14*8]
0x72a9ca:	jmp	0x72a96c

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a96c
stashes  [<SimState @ 0x72a96c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60
r12b : 0x60
r12d : 0x60
r12w : 0x60
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x9
r14b : 0x9
r14d : 0x9
r14w : 0x9
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a96c
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a96c:	mov	rdi, rbp
0x72a96f:	call	0x721100

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60
r12b : 0x60
r12d : 0x60
r12w : 0x60
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x9
r14b : 0x9
r14d : 0x9
r14w : 0x9
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721100
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60
r12b : 0x60
r12d : 0x60
r12w : 0x60
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x9
r14b : 0x9
r14d : 0x9
r14w : 0x9
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x784030
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a974
stashes  [<SimState @ 0x72a974>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60
r12b : 0x60
r12d : 0x60
r12w : 0x60
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x9
r14b : 0x9
r14d : 0x9
r14w : 0x9
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a974
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a974:	mov	r15, rax
0x72a977:	lea	rax, [rip + 0x134822]
0x72a97e:	movzx	eax, byte ptr [rax + r14]
0x72a983:	lea	r12, [r12 + rax + 2]
0x72a988:	add	r12, r15
0x72a98b:	test	r13d, r13d
0x72a98e:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a990
stashes  [<SimState @ 0x72a990>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x6d
r12b : 0x6d
r12d : 0x6d
r12w : 0x6d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x9
r14b : 0x9
r14d : 0x9
r14w : 0x9
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xa
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a990
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a990:	mov	rax, qword ptr [rsp]
0x72a994:	mov	rsi, qword ptr [rax]
0x72a997:	cmp	rsi, rbp
0x72a99a:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9ad
stashes  [<SimState @ 0x72a9ad>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x6d
r12b : 0x6d
r12d : 0x6d
r12w : 0x6d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x9
r14b : 0x9
r14d : 0x9
r14w : 0x9
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9ad
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9ad:	cmp	r14d, 0xc
0x72a9b1:	je	0x72a9d0

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9b3
stashes  [<SimState @ 0x72a9b3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x6d
r12b : 0x6d
r12d : 0x6d
r12w : 0x6d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x9
r14b : 0x9
r14d : 0x9
r14w : 0x9
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x91
rip : 0x72a9b3
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9b3:	add	r14, 1
0x72a9b7:	cmp	r14, 6
0x72a9bb:	je	0x72a9b3

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9bd
stashes  [<SimState @ 0x72a9bd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x6d
r12b : 0x6d
r12d : 0x6d
r12w : 0x6d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a9bd
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9bd:	cmp	ebx, 6
0x72a9c0:	jne	0x72a958

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9c2
stashes  [<SimState @ 0x72a9c2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x6d
r12b : 0x6d
r12d : 0x6d
r12w : 0x6d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9c2
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9c2:	mov	rax, qword ptr [rsp]
0x72a9c6:	mov	rbp, qword ptr [rax + r14*8]
0x72a9ca:	jmp	0x72a96c

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a96c
stashes  [<SimState @ 0x72a96c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x6d
r12b : 0x6d
r12d : 0x6d
r12w : 0x6d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a96c
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a96c:	mov	rdi, rbp
0x72a96f:	call	0x721100

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x6d
r12b : 0x6d
r12d : 0x6d
r12w : 0x6d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721100
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x6d
r12b : 0x6d
r12d : 0x6d
r12w : 0x6d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x784030
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a974
stashes  [<SimState @ 0x72a974>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x6d
r12b : 0x6d
r12d : 0x6d
r12w : 0x6d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a974
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a974:	mov	r15, rax
0x72a977:	lea	rax, [rip + 0x134822]
0x72a97e:	movzx	eax, byte ptr [rax + r14]
0x72a983:	lea	r12, [r12 + rax + 2]
0x72a988:	add	r12, r15
0x72a98b:	test	r13d, r13d
0x72a98e:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a990
stashes  [<SimState @ 0x72a990>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7c
r12b : 0x7c
r12d : 0x7c
r12w : 0x7c
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a990
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a990:	mov	rax, qword ptr [rsp]
0x72a994:	mov	rsi, qword ptr [rax]
0x72a997:	cmp	rsi, rbp
0x72a99a:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9ad
stashes  [<SimState @ 0x72a9ad>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7c
r12b : 0x7c
r12d : 0x7c
r12w : 0x7c
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9ad
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9ad:	cmp	r14d, 0xc
0x72a9b1:	je	0x72a9d0

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9b3
stashes  [<SimState @ 0x72a9b3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7c
r12b : 0x7c
r12d : 0x7c
r12w : 0x7c
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x91
rip : 0x72a9b3
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9b3:	add	r14, 1
0x72a9b7:	cmp	r14, 6
0x72a9bb:	je	0x72a9b3

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9bd
stashes  [<SimState @ 0x72a9bd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7c
r12b : 0x7c
r12d : 0x7c
r12w : 0x7c
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72a9bd
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9bd:	cmp	ebx, 6
0x72a9c0:	jne	0x72a958

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9c2
stashes  [<SimState @ 0x72a9c2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7c
r12b : 0x7c
r12d : 0x7c
r12w : 0x7c
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9c2
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9c2:	mov	rax, qword ptr [rsp]
0x72a9c6:	mov	rbp, qword ptr [rax + r14*8]
0x72a9ca:	jmp	0x72a96c

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a96c
stashes  [<SimState @ 0x72a96c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7c
r12b : 0x7c
r12d : 0x7c
r12w : 0x7c
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a96c
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a96c:	mov	rdi, rbp
0x72a96f:	call	0x721100

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7c
r12b : 0x7c
r12d : 0x7c
r12w : 0x7c
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721100
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7c
r12b : 0x7c
r12d : 0x7c
r12w : 0x7c
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x784030
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a974
stashes  [<SimState @ 0x72a974>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7c
r12b : 0x7c
r12d : 0x7c
r12w : 0x7c
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a974
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a974:	mov	r15, rax
0x72a977:	lea	rax, [rip + 0x134822]
0x72a97e:	movzx	eax, byte ptr [rax + r14]
0x72a983:	lea	r12, [r12 + rax + 2]
0x72a988:	add	r12, r15
0x72a98b:	test	r13d, r13d
0x72a98e:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a990
stashes  [<SimState @ 0x72a990>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x8d
r12b : 0x8d
r12d : 0x8d
r12w : 0x8d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xe
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a990
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a990:	mov	rax, qword ptr [rsp]
0x72a994:	mov	rsi, qword ptr [rax]
0x72a997:	cmp	rsi, rbp
0x72a99a:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9ad
stashes  [<SimState @ 0x72a9ad>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x8d
r12b : 0x8d
r12d : 0x8d
r12w : 0x8d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9ad
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9ad:	cmp	r14d, 0xc
0x72a9b1:	je	0x72a9d0

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9b3
stashes  [<SimState @ 0x72a9b3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x8d
r12b : 0x8d
r12d : 0x8d
r12w : 0x8d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x95
rip : 0x72a9b3
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9b3:	add	r14, 1
0x72a9b7:	cmp	r14, 6
0x72a9bb:	je	0x72a9b3

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9bd
stashes  [<SimState @ 0x72a9bd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x8d
r12b : 0x8d
r12d : 0x8d
r12w : 0x8d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72a9bd
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9bd:	cmp	ebx, 6
0x72a9c0:	jne	0x72a958

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:08 active states =  1 rip =  0x72a9c2
stashes  [<SimState @ 0x72a9c2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x8d
r12b : 0x8d
r12d : 0x8d
r12w : 0x8d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9c2
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9c2:	mov	rax, qword ptr [rsp]
0x72a9c6:	mov	rbp, qword ptr [rax + r14*8]
0x72a9ca:	jmp	0x72a96c

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72a96c
stashes  [<SimState @ 0x72a96c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x8d
r12b : 0x8d
r12d : 0x8d
r12w : 0x8d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a96c
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a96c:	mov	rdi, rbp
0x72a96f:	call	0x721100

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x8d
r12b : 0x8d
r12d : 0x8d
r12w : 0x8d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x721100
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x8d
r12b : 0x8d
r12d : 0x8d
r12w : 0x8d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x784030
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x72a96c => 0x721100()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72a974
stashes  [<SimState @ 0x72a974>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x8d
r12b : 0x8d
r12d : 0x8d
r12w : 0x8d
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a974
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a974:	mov	r15, rax
0x72a977:	lea	rax, [rip + 0x134822]
0x72a97e:	movzx	eax, byte ptr [rax + r14]
0x72a983:	lea	r12, [r12 + rax + 2]
0x72a988:	add	r12, r15
0x72a98b:	test	r13d, r13d
0x72a98e:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72a990
stashes  [<SimState @ 0x72a990>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xa1
r12b : 0xa1
r12d : 0xa1
r12w : 0xa1
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x11
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a990
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a990:	mov	rax, qword ptr [rsp]
0x72a994:	mov	rsi, qword ptr [rax]
0x72a997:	cmp	rsi, rbp
0x72a99a:	je	0x72a9ad

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72a9ad
stashes  [<SimState @ 0x72a9ad>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xa1
r12b : 0xa1
r12d : 0xa1
r12w : 0xa1
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9ad
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9ad:	cmp	r14d, 0xc
0x72a9b1:	je	0x72a9d0

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72a9d0
stashes  [<SimState @ 0x72a9d0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xa1
r12b : 0xa1
r12d : 0xa1
r12w : 0xa1
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72a9d0
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9d0:	test	r13d, r13d
0x72a9d3:	je	0x72aa40

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72a9d5
stashes  [<SimState @ 0x72a9d5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xa1
r12b : 0xa1
r12d : 0xa1
r12w : 0xa1
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a9d5
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9d5:	mov	rax, qword ptr [rsp]
0x72a9d9:	lea	rsi, [rip + 0x14d3f2]
0x72a9e0:	mov	rbp, qword ptr [rax]
0x72a9e3:	mov	rdi, rbp
0x72a9e6:	call	0x721200

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xa1
r12b : 0xa1
r12d : 0xa1
r12w : 0xa1
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x721200
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72a9d5 => 0x721200()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xa1
r12b : 0xa1
r12d : 0xa1
r12w : 0xa1
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefde0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x783bd0
rsi : 0x877dd2
rsp : 0x7fffffffffefd58
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72a9d5 => 0x721200()
0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72a9eb
stashes  [<SimState @ 0x72a9eb>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xa1
r12b : 0xa1
r12d : 0xa1
r12w : 0xa1
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x0
rip : 0x72a9eb
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72a9eb:	test	eax, eax
0x72a9ed:	je	0x72aa30

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72aa30
stashes  [<SimState @ 0x72aa30>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xa1
r12b : 0xa1
r12d : 0xa1
r12w : 0xa1
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72aa30
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72aa30:	lea	rax, [rip + 0x14d39b]
0x72aa37:	mov	qword ptr [rsp + 8], rax
0x72aa3c:	jmp	0x72aa12

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72aa12
stashes  [<SimState @ 0x72aa12>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xa1
r12b : 0xa1
r12d : 0xa1
r12w : 0xa1
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x1
r15b : 0x1
r15d : 0x1
r15w : 0x1
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x877dd2
rbx : 0x6
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72aa12
rsi : 0x877dd2
rsp : 0x7fffffffffefd60
0x72aa12:	mov	rax, qword ptr [rsp + 8]
0x72aa17:	add	rsp, 0x18
0x72aa1b:	pop	rbx
0x72aa1c:	pop	rbp
0x72aa1d:	pop	r12
0x72aa1f:	pop	r13
0x72aa21:	pop	r14
0x72aa23:	pop	r15
0x72aa25:	ret	

0x72b010 => 0x72a930(new_composite_name)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b01d
stashes  [<SimState @ 0x72b01d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b01d
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72b01d:	test	rax, rax
0x72b020:	mov	r15, rax
0x72b023:	je	0x72ad45

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b029
stashes  [<SimState @ 0x72b029>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x877dd2
r14b : 0xd2
r14d : 0x877dd2
r14w : 0x7dd2
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x0
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b029
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72b029:	xor	r14d, r14d
0x72b02c:	lea	rbx, [rsp + 0xa0]
0x72b034:	jmp	0x72b044

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b044
stashes  [<SimState @ 0x72b044>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x44
rip : 0x72b044
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72b044:	cmp	r14, 6
0x72b048:	je	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b04a
stashes  [<SimState @ 0x72b04a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x7fffffffffefde0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x95
rip : 0x72b04a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72b04a:	mov	rcx, qword ptr [rbx + r14*8]
0x72b04e:	lea	rax, [rip + 0x38288b]
0x72b055:	lea	r13, [r14*8]
0x72b05d:	mov	qword ptr [r12 + r14*8], rcx
0x72b061:	mov	rcx, qword ptr [rax + r14*8]
0x72b065:	test	rcx, rcx
0x72b068:	je	0x72b06c

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b06a
stashes  [<SimState @ 0x72b06a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaad8e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x72d1a0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72b06a
rsi : 0x877dd2
rsp : 0x7fffffffffefdb0
0x72b06a:	call	rcx

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72d1a0
stashes  [<SimState @ 0x72d1a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaad8e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x72d1a0
rdi : 0x877dd2
rdx : 0x85f1b0
rflags : 0x4
rip : 0x72d1a0
rsi : 0x877dd2
rsp : 0x7fffffffffefda8
0x72d1a0:	mov	rdx, qword ptr [rip + 0x3823b9]
0x72d1a7:	mov	rsi, qword ptr [rip + 0x380c1a]
0x72d1ae:	lea	rdi, [rip + 0x3823ab]
0x72d1b5:	mov	rax, qword ptr [rdx + 0x40]
0x72d1b9:	lea	rcx, [rax + 0x100]
0x72d1c0:	mov	rax, qword ptr [rdx + 0x58]
0x72d1c4:	mov	rdx, qword ptr [rdx + 0x48]
0x72d1c8:	mov	qword ptr [rip + 0x3823f9], rcx
0x72d1cf:	add	rax, 0x200
0x72d1d5:	add	rdx, 0x200
0x72d1dc:	cmp	qword ptr fs:[rsi], rdi
0x72d1e0:	mov	qword ptr [rip + 0x3823e9], rax
0x72d1e7:	mov	qword ptr [rip + 0x3823ea], rdx
0x72d1ee:	jne	0x72d211

0x72b06a => 0x72d1a0(_nl_postload_ctype)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72d1f0
stashes  [<SimState @ 0x72d1f0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x860240
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x861140
rdi : 0xaaf560
rdx : 0x860840
rflags : 0x44
rip : 0x72d1f0
rsi : 0xffffffffffffff70
rsp : 0x7fffffffffefda8
0x72d1f0:	mov	rdi, qword ptr [rip + 0x380c09]
0x72d1f7:	mov	qword ptr fs:[rdi], rcx
0x72d1fb:	mov	rcx, qword ptr [rip + 0x380cd6]
0x72d202:	mov	qword ptr fs:[rcx], rdx
0x72d206:	mov	rdx, qword ptr [rip + 0x380d13]
0x72d20d:	mov	qword ptr fs:[rdx], rax
0x72d211:	mov	rax, qword ptr fs:[rsi]
0x72d215:	mov	rcx, qword ptr [rip + 0x380c74]
0x72d21c:	mov	rax, qword ptr [rax]
0x72d21f:	mov	rdi, qword ptr [rax + 0x40]
0x72d223:	mov	rsi, qword ptr [rax + 0x48]
0x72d227:	lea	rdx, [rdi + 0x100]
0x72d22e:	mov	rdi, qword ptr [rax + 0x58]
0x72d232:	mov	qword ptr [rcx], rdx
0x72d235:	mov	rcx, qword ptr [rip + 0x380c44]
0x72d23c:	lea	rdx, [rsi + 0x200]
0x72d243:	mov	qword ptr [rcx], rdx
0x72d246:	mov	rcx, qword ptr [rip + 0x380c2b]
0x72d24d:	lea	rdx, [rdi + 0x200]
0x72d254:	mov	qword ptr [rcx], rdx
0x72d257:	mov	rcx, qword ptr [rax + 0x68]
0x72d25b:	mov	rdx, qword ptr [rip + 0x380c4e]
0x72d262:	mov	qword ptr [rdx], rcx
0x72d265:	mov	rcx, qword ptr [rax + 0xb8]
0x72d26c:	mov	rdx, qword ptr [rip + 0x380d55]
0x72d273:	mov	qword ptr [rdx], rcx
0x72d276:	mov	rdx, qword ptr [rax + 0xc0]
0x72d27d:	mov	rax, qword ptr [rip + 0x380b5c]
0x72d284:	mov	qword ptr [rax], rdx
0x72d287:	ret	

0x72b06a => 0x72d1a0(_nl_postload_ctype)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b06c
stashes  [<SimState @ 0x72b06c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaae6e8
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x860840
rdi : 0x860040
rdx : 0x860240
rflags : 0x44
rip : 0x72b06c
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b06c:	lea	rax, [rip + 0x38456d]
0x72b073:	mov	rcx, qword ptr [rbp + r14*8]
0x72b078:	mov	rdi, qword ptr [rax + r13]
0x72b07c:	cmp	rcx, rdi
0x72b07f:	je	0x72b0a5

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b0a5
stashes  [<SimState @ 0x72b0a5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b0a5
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b0a5:	cmp	r14d, 0xc
0x72b0a9:	jne	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b040
stashes  [<SimState @ 0x72b040>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x91
rip : 0x72b040
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b040:	add	r14, 1
0x72b044:	cmp	r14, 6
0x72b048:	je	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b04a
stashes  [<SimState @ 0x72b04a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x91
rip : 0x72b04a
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b04a:	mov	rcx, qword ptr [rbx + r14*8]
0x72b04e:	lea	rax, [rip + 0x38288b]
0x72b055:	lea	r13, [r14*8]
0x72b05d:	mov	qword ptr [r12 + r14*8], rcx
0x72b061:	mov	rcx, qword ptr [rax + r14*8]
0x72b065:	test	rcx, rcx
0x72b068:	je	0x72b06c

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b06c
stashes  [<SimState @ 0x72b06c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaad8e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x0
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b06c
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b06c:	lea	rax, [rip + 0x38456d]
0x72b073:	mov	rcx, qword ptr [rbp + r14*8]
0x72b078:	mov	rdi, qword ptr [rax + r13]
0x72b07c:	cmp	rcx, rdi
0x72b07f:	je	0x72b0a5

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b0a5
stashes  [<SimState @ 0x72b0a5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b0a5
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b0a5:	cmp	r14d, 0xc
0x72b0a9:	jne	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b040
stashes  [<SimState @ 0x72b040>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x95
rip : 0x72b040
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b040:	add	r14, 1
0x72b044:	cmp	r14, 6
0x72b048:	je	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b04a
stashes  [<SimState @ 0x72b04a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x8
r13b : 0x8
r13d : 0x8
r13w : 0x8
r14 : 0x2
r14b : 0x2
r14d : 0x2
r14w : 0x2
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x95
rip : 0x72b04a
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b04a:	mov	rcx, qword ptr [rbx + r14*8]
0x72b04e:	lea	rax, [rip + 0x38288b]
0x72b055:	lea	r13, [r14*8]
0x72b05d:	mov	qword ptr [r12 + r14*8], rcx
0x72b061:	mov	rcx, qword ptr [rax + r14*8]
0x72b065:	test	rcx, rcx
0x72b068:	je	0x72b06c

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b06c
stashes  [<SimState @ 0x72b06c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x10
r13b : 0x10
r13d : 0x10
r13w : 0x10
r14 : 0x2
r14b : 0x2
r14d : 0x2
r14w : 0x2
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaad8e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x0
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b06c
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b06c:	lea	rax, [rip + 0x38456d]
0x72b073:	mov	rcx, qword ptr [rbp + r14*8]
0x72b078:	mov	rdi, qword ptr [rax + r13]
0x72b07c:	cmp	rcx, rdi
0x72b07f:	je	0x72b0a5

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b0a5
stashes  [<SimState @ 0x72b0a5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x10
r13b : 0x10
r13d : 0x10
r13w : 0x10
r14 : 0x2
r14b : 0x2
r14d : 0x2
r14w : 0x2
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b0a5
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b0a5:	cmp	r14d, 0xc
0x72b0a9:	jne	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b040
stashes  [<SimState @ 0x72b040>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x10
r13b : 0x10
r13d : 0x10
r13w : 0x10
r14 : 0x2
r14b : 0x2
r14d : 0x2
r14w : 0x2
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x95
rip : 0x72b040
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b040:	add	r14, 1
0x72b044:	cmp	r14, 6
0x72b048:	je	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b04a
stashes  [<SimState @ 0x72b04a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x10
r13b : 0x10
r13d : 0x10
r13w : 0x10
r14 : 0x3
r14b : 0x3
r14d : 0x3
r14w : 0x3
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x91
rip : 0x72b04a
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b04a:	mov	rcx, qword ptr [rbx + r14*8]
0x72b04e:	lea	rax, [rip + 0x38288b]
0x72b055:	lea	r13, [r14*8]
0x72b05d:	mov	qword ptr [r12 + r14*8], rcx
0x72b061:	mov	rcx, qword ptr [rax + r14*8]
0x72b065:	test	rcx, rcx
0x72b068:	je	0x72b06c

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b06c
stashes  [<SimState @ 0x72b06c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x18
r13b : 0x18
r13d : 0x18
r13w : 0x18
r14 : 0x3
r14b : 0x3
r14d : 0x3
r14w : 0x3
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaad8e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x0
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b06c
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b06c:	lea	rax, [rip + 0x38456d]
0x72b073:	mov	rcx, qword ptr [rbp + r14*8]
0x72b078:	mov	rdi, qword ptr [rax + r13]
0x72b07c:	cmp	rcx, rdi
0x72b07f:	je	0x72b0a5

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b0a5
stashes  [<SimState @ 0x72b0a5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x18
r13b : 0x18
r13d : 0x18
r13w : 0x18
r14 : 0x3
r14b : 0x3
r14d : 0x3
r14w : 0x3
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b0a5
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b0a5:	cmp	r14d, 0xc
0x72b0a9:	jne	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b040
stashes  [<SimState @ 0x72b040>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x18
r13b : 0x18
r13d : 0x18
r13w : 0x18
r14 : 0x3
r14b : 0x3
r14d : 0x3
r14w : 0x3
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x91
rip : 0x72b040
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b040:	add	r14, 1
0x72b044:	cmp	r14, 6
0x72b048:	je	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b04a
stashes  [<SimState @ 0x72b04a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x18
r13b : 0x18
r13d : 0x18
r13w : 0x18
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x91
rip : 0x72b04a
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b04a:	mov	rcx, qword ptr [rbx + r14*8]
0x72b04e:	lea	rax, [rip + 0x38288b]
0x72b055:	lea	r13, [r14*8]
0x72b05d:	mov	qword ptr [r12 + r14*8], rcx
0x72b061:	mov	rcx, qword ptr [rax + r14*8]
0x72b065:	test	rcx, rcx
0x72b068:	je	0x72b06c

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b06c
stashes  [<SimState @ 0x72b06c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaad8e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x0
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b06c
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b06c:	lea	rax, [rip + 0x38456d]
0x72b073:	mov	rcx, qword ptr [rbp + r14*8]
0x72b078:	mov	rdi, qword ptr [rax + r13]
0x72b07c:	cmp	rcx, rdi
0x72b07f:	je	0x72b0a5

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b0a5
stashes  [<SimState @ 0x72b0a5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b0a5
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b0a5:	cmp	r14d, 0xc
0x72b0a9:	jne	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b040
stashes  [<SimState @ 0x72b040>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x4
r14b : 0x4
r14d : 0x4
r14w : 0x4
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x91
rip : 0x72b040
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b040:	add	r14, 1
0x72b044:	cmp	r14, 6
0x72b048:	je	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b04a
stashes  [<SimState @ 0x72b04a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x95
rip : 0x72b04a
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b04a:	mov	rcx, qword ptr [rbx + r14*8]
0x72b04e:	lea	rax, [rip + 0x38288b]
0x72b055:	lea	r13, [r14*8]
0x72b05d:	mov	qword ptr [r12 + r14*8], rcx
0x72b061:	mov	rcx, qword ptr [rax + r14*8]
0x72b065:	test	rcx, rcx
0x72b068:	je	0x72b06c

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b06c
stashes  [<SimState @ 0x72b06c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x28
r13b : 0x28
r13d : 0x28
r13w : 0x28
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaad8e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x0
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b06c
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b06c:	lea	rax, [rip + 0x38456d]
0x72b073:	mov	rcx, qword ptr [rbp + r14*8]
0x72b078:	mov	rdi, qword ptr [rax + r13]
0x72b07c:	cmp	rcx, rdi
0x72b07f:	je	0x72b0a5

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b0a5
stashes  [<SimState @ 0x72b0a5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x28
r13b : 0x28
r13d : 0x28
r13w : 0x28
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b0a5
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b0a5:	cmp	r14d, 0xc
0x72b0a9:	jne	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b040
stashes  [<SimState @ 0x72b040>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x28
r13b : 0x28
r13d : 0x28
r13w : 0x28
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x95
rip : 0x72b040
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b040:	add	r14, 1
0x72b044:	cmp	r14, 6
0x72b048:	je	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b040
stashes  [<SimState @ 0x72b040>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x28
r13b : 0x28
r13d : 0x28
r13w : 0x28
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b040
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b040:	add	r14, 1
0x72b044:	cmp	r14, 6
0x72b048:	je	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b04a
stashes  [<SimState @ 0x72b04a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x28
r13b : 0x28
r13d : 0x28
r13w : 0x28
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x0
rip : 0x72b04a
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b04a:	mov	rcx, qword ptr [rbx + r14*8]
0x72b04e:	lea	rax, [rip + 0x38288b]
0x72b055:	lea	r13, [r14*8]
0x72b05d:	mov	qword ptr [r12 + r14*8], rcx
0x72b061:	mov	rcx, qword ptr [rax + r14*8]
0x72b065:	test	rcx, rcx
0x72b068:	je	0x72b06c

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b06c
stashes  [<SimState @ 0x72b06c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x38
r13b : 0x38
r13d : 0x38
r13w : 0x38
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaad8e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x0
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b06c
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b06c:	lea	rax, [rip + 0x38456d]
0x72b073:	mov	rcx, qword ptr [rbp + r14*8]
0x72b078:	mov	rdi, qword ptr [rax + r13]
0x72b07c:	cmp	rcx, rdi
0x72b07f:	je	0x72b0a5

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b0a5
stashes  [<SimState @ 0x72b0a5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x38
r13b : 0x38
r13d : 0x38
r13w : 0x38
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b0a5
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b0a5:	cmp	r14d, 0xc
0x72b0a9:	jne	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b040
stashes  [<SimState @ 0x72b040>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x38
r13b : 0x38
r13d : 0x38
r13w : 0x38
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x91
rip : 0x72b040
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b040:	add	r14, 1
0x72b044:	cmp	r14, 6
0x72b048:	je	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b04a
stashes  [<SimState @ 0x72b04a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x38
r13b : 0x38
r13d : 0x38
r13w : 0x38
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x0
rip : 0x72b04a
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b04a:	mov	rcx, qword ptr [rbx + r14*8]
0x72b04e:	lea	rax, [rip + 0x38288b]
0x72b055:	lea	r13, [r14*8]
0x72b05d:	mov	qword ptr [r12 + r14*8], rcx
0x72b061:	mov	rcx, qword ptr [rax + r14*8]
0x72b065:	test	rcx, rcx
0x72b068:	je	0x72b06c

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b06c
stashes  [<SimState @ 0x72b06c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x40
r13b : 0x40
r13d : 0x40
r13w : 0x40
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaad8e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x0
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b06c
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b06c:	lea	rax, [rip + 0x38456d]
0x72b073:	mov	rcx, qword ptr [rbp + r14*8]
0x72b078:	mov	rdi, qword ptr [rax + r13]
0x72b07c:	cmp	rcx, rdi
0x72b07f:	je	0x72b0a5

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b0a5
stashes  [<SimState @ 0x72b0a5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x40
r13b : 0x40
r13d : 0x40
r13w : 0x40
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b0a5
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b0a5:	cmp	r14d, 0xc
0x72b0a9:	jne	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b040
stashes  [<SimState @ 0x72b040>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x40
r13b : 0x40
r13d : 0x40
r13w : 0x40
r14 : 0x8
r14b : 0x8
r14d : 0x8
r14w : 0x8
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x95
rip : 0x72b040
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b040:	add	r14, 1
0x72b044:	cmp	r14, 6
0x72b048:	je	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b04a
stashes  [<SimState @ 0x72b04a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x40
r13b : 0x40
r13d : 0x40
r13w : 0x40
r14 : 0x9
r14b : 0x9
r14d : 0x9
r14w : 0x9
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x4
rip : 0x72b04a
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b04a:	mov	rcx, qword ptr [rbx + r14*8]
0x72b04e:	lea	rax, [rip + 0x38288b]
0x72b055:	lea	r13, [r14*8]
0x72b05d:	mov	qword ptr [r12 + r14*8], rcx
0x72b061:	mov	rcx, qword ptr [rax + r14*8]
0x72b065:	test	rcx, rcx
0x72b068:	je	0x72b06c

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b06c
stashes  [<SimState @ 0x72b06c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x48
r13b : 0x48
r13d : 0x48
r13w : 0x48
r14 : 0x9
r14b : 0x9
r14d : 0x9
r14w : 0x9
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaad8e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x0
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b06c
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b06c:	lea	rax, [rip + 0x38456d]
0x72b073:	mov	rcx, qword ptr [rbp + r14*8]
0x72b078:	mov	rdi, qword ptr [rax + r13]
0x72b07c:	cmp	rcx, rdi
0x72b07f:	je	0x72b0a5

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b0a5
stashes  [<SimState @ 0x72b0a5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x48
r13b : 0x48
r13d : 0x48
r13w : 0x48
r14 : 0x9
r14b : 0x9
r14d : 0x9
r14w : 0x9
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b0a5
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b0a5:	cmp	r14d, 0xc
0x72b0a9:	jne	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b040
stashes  [<SimState @ 0x72b040>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x48
r13b : 0x48
r13d : 0x48
r13w : 0x48
r14 : 0x9
r14b : 0x9
r14d : 0x9
r14w : 0x9
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x91
rip : 0x72b040
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b040:	add	r14, 1
0x72b044:	cmp	r14, 6
0x72b048:	je	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b04a
stashes  [<SimState @ 0x72b04a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x48
r13b : 0x48
r13d : 0x48
r13w : 0x48
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x0
rip : 0x72b04a
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b04a:	mov	rcx, qword ptr [rbx + r14*8]
0x72b04e:	lea	rax, [rip + 0x38288b]
0x72b055:	lea	r13, [r14*8]
0x72b05d:	mov	qword ptr [r12 + r14*8], rcx
0x72b061:	mov	rcx, qword ptr [rax + r14*8]
0x72b065:	test	rcx, rcx
0x72b068:	je	0x72b06c

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b06c
stashes  [<SimState @ 0x72b06c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x50
r13b : 0x50
r13d : 0x50
r13w : 0x50
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaad8e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x0
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b06c
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b06c:	lea	rax, [rip + 0x38456d]
0x72b073:	mov	rcx, qword ptr [rbp + r14*8]
0x72b078:	mov	rdi, qword ptr [rax + r13]
0x72b07c:	cmp	rcx, rdi
0x72b07f:	je	0x72b0a5

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b0a5
stashes  [<SimState @ 0x72b0a5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x50
r13b : 0x50
r13d : 0x50
r13w : 0x50
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b0a5
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b0a5:	cmp	r14d, 0xc
0x72b0a9:	jne	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b040
stashes  [<SimState @ 0x72b040>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x50
r13b : 0x50
r13d : 0x50
r13w : 0x50
r14 : 0xa
r14b : 0xa
r14d : 0xa
r14w : 0xa
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x91
rip : 0x72b040
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b040:	add	r14, 1
0x72b044:	cmp	r14, 6
0x72b048:	je	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b04a
stashes  [<SimState @ 0x72b04a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x50
r13b : 0x50
r13d : 0x50
r13w : 0x50
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x4
rip : 0x72b04a
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b04a:	mov	rcx, qword ptr [rbx + r14*8]
0x72b04e:	lea	rax, [rip + 0x38288b]
0x72b055:	lea	r13, [r14*8]
0x72b05d:	mov	qword ptr [r12 + r14*8], rcx
0x72b061:	mov	rcx, qword ptr [rax + r14*8]
0x72b065:	test	rcx, rcx
0x72b068:	je	0x72b06c

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b06c
stashes  [<SimState @ 0x72b06c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x58
r13b : 0x58
r13d : 0x58
r13w : 0x58
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaad8e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x0
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b06c
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b06c:	lea	rax, [rip + 0x38456d]
0x72b073:	mov	rcx, qword ptr [rbp + r14*8]
0x72b078:	mov	rdi, qword ptr [rax + r13]
0x72b07c:	cmp	rcx, rdi
0x72b07f:	je	0x72b0a5

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b0a5
stashes  [<SimState @ 0x72b0a5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x58
r13b : 0x58
r13d : 0x58
r13w : 0x58
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b0a5
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b0a5:	cmp	r14d, 0xc
0x72b0a9:	jne	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b040
stashes  [<SimState @ 0x72b040>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x58
r13b : 0x58
r13d : 0x58
r13w : 0x58
r14 : 0xb
r14b : 0xb
r14d : 0xb
r14w : 0xb
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x95
rip : 0x72b040
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b040:	add	r14, 1
0x72b044:	cmp	r14, 6
0x72b048:	je	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b04a
stashes  [<SimState @ 0x72b04a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x58
r13b : 0x58
r13d : 0x58
r13w : 0x58
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x4
rip : 0x72b04a
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b04a:	mov	rcx, qword ptr [rbx + r14*8]
0x72b04e:	lea	rax, [rip + 0x38288b]
0x72b055:	lea	r13, [r14*8]
0x72b05d:	mov	qword ptr [r12 + r14*8], rcx
0x72b061:	mov	rcx, qword ptr [rax + r14*8]
0x72b065:	test	rcx, rcx
0x72b068:	je	0x72b06c

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b06c
stashes  [<SimState @ 0x72b06c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x60
r13b : 0x60
r13d : 0x60
r13w : 0x60
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaad8e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x0
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b06c
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b06c:	lea	rax, [rip + 0x38456d]
0x72b073:	mov	rcx, qword ptr [rbp + r14*8]
0x72b078:	mov	rdi, qword ptr [rax + r13]
0x72b07c:	cmp	rcx, rdi
0x72b07f:	je	0x72b0a5

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b0a5
stashes  [<SimState @ 0x72b0a5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x60
r13b : 0x60
r13d : 0x60
r13w : 0x60
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b0a5
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b0a5:	cmp	r14d, 0xc
0x72b0a9:	jne	0x72b040

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b0ab
stashes  [<SimState @ 0x72b0ab>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x60
r13b : 0x60
r13d : 0x60
r13w : 0x60
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b0ab
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b0ab:	mov	rdi, qword ptr [rip + 0x38455e]
0x72b0b2:	cmp	r15, rdi
0x72b0b5:	je	0x72b0cf

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72b0cf
stashes  [<SimState @ 0x72b0cf>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x60
r13b : 0x60
r13d : 0x60
r13w : 0x60
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xaaf5e0
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x44
rip : 0x72b0cf
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72b0cf:	mov	rax, qword ptr [rip + 0x382e2a]
0x72b0d6:	add	dword ptr [rax], 1
0x72b0d9:	jmp	0x72ad7e

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72ad7e
stashes  [<SimState @ 0x72ad7e>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x60
r13b : 0x60
r13d : 0x60
r13w : 0x60
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab3590
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x860240
rflags : 0x0
rip : 0x72ad7e
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72ad7e:	mov	edx, dword ptr [rip + 0x388b64]
0x72ad84:	test	edx, edx
0x72ad86:	je	0x72ada5

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72ada5
stashes  [<SimState @ 0x72ada5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x60
r13b : 0x60
r13d : 0x60
r13w : 0x60
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab3590
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x877dd2
rdx : 0x0
rflags : 0x44
rip : 0x72ada5
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72ada5:	mov	rdi, qword ptr [rsp + 0x20]
0x72adaa:	call	0x7212c8

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x7212c8
stashes  [<SimState @ 0x7212c8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x60
r13b : 0x60
r13d : 0x60
r13w : 0x60
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab3590
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x0
rdx : 0x0
rflags : 0x44
rip : 0x7212c8
rsi : 0x860640
rsp : 0x7fffffffffefda8
0x7212c8:	jmp	qword ptr [rip + 0x38ccca]

0x72ada5 => 0x7212c8(free)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x780c10
stashes  [<SimState @ 0x780c10>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x60
r13b : 0x60
r13d : 0x60
r13w : 0x60
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab3590
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x0
rdx : 0x0
rflags : 0x44
rip : 0x780c10
rsi : 0x860640
rsp : 0x7fffffffffefda8
0x780c10:	push	rbx
0x780c11:	sub	rsp, 0x10
0x780c15:	mov	rax, qword ptr [rip + 0x32d2cc]
0x780c1c:	mov	rax, qword ptr [rax]
0x780c1f:	test	rax, rax
0x780c22:	jne	0x780cd0

0x72ada5 => 0x7212c8(free)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72adaf
stashes  [<SimState @ 0x72adaf>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x60
r13b : 0x60
r13d : 0x60
r13w : 0x60
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab3590
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x0
rdx : 0x0
rflags : 0x44
rip : 0x72adaf
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72adaf:	mov	rdi, qword ptr [rsp + 0x10]
0x72adb4:	call	0x7212c8

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x7212c8
stashes  [<SimState @ 0x7212c8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x60
r13b : 0x60
r13d : 0x60
r13w : 0x60
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab3590
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x0
rdx : 0x0
rflags : 0x44
rip : 0x7212c8
rsi : 0x860640
rsp : 0x7fffffffffefda8
0x7212c8:	jmp	qword ptr [rip + 0x38ccca]

0x72adaf => 0x7212c8(free)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x780c10
stashes  [<SimState @ 0x780c10>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x60
r13b : 0x60
r13d : 0x60
r13w : 0x60
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab3590
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x0
rdx : 0x0
rflags : 0x44
rip : 0x780c10
rsi : 0x860640
rsp : 0x7fffffffffefda8
0x780c10:	push	rbx
0x780c11:	sub	rsp, 0x10
0x780c15:	mov	rax, qword ptr [rip + 0x32d2cc]
0x780c1c:	mov	rax, qword ptr [rax]
0x780c1f:	test	rax, rax
0x780c22:	jne	0x780cd0

0x72adaf => 0x7212c8(free)
0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72adb9
stashes  [<SimState @ 0x72adb9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x60
r13b : 0x60
r13d : 0x60
r13w : 0x60
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab3590
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x0
rdx : 0x0
rflags : 0x44
rip : 0x72adb9
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72adb9:	jmp	0x72abe2

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72abe2
stashes  [<SimState @ 0x72abe2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xaaf560
r12b : 0x60
r12d : 0xaaf560
r12w : 0xf560
r13 : 0x60
r13b : 0x60
r13d : 0x60
r13w : 0x60
r14 : 0xc
r14b : 0xc
r14d : 0xc
r14w : 0xc
r15 : 0x877dd2
r15b : 0xd2
r15d : 0x877dd2
r15w : 0x7dd2
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab3590
rbp : 0x7fffffffffefde0
rbx : 0x7fffffffffefe50
rcx : 0x877dd2
rdi : 0x0
rdx : 0x0
rflags : 0x44
rip : 0x72abe2
rsi : 0x860640
rsp : 0x7fffffffffefdb0
0x72abe2:	add	rsp, 0x118
0x72abe9:	mov	rax, r15
0x72abec:	pop	rbx
0x72abed:	pop	rbp
0x72abee:	pop	r12
0x72abf0:	pop	r13
0x72abf2:	pop	r14
0x72abf4:	pop	r15
0x72abf6:	ret	

0x401df4 => 0x401cf0(setlocale)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x401e05
stashes  [<SimState @ 0x401e05>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x877dd2
rdi : 0x0
rdx : 0x0
rflags : 0x0
rip : 0x401e05
rsi : 0x860640
rsp : 0x7fffffffffeff00
0x401e05:	lea	rsi, [rip + 0x515c]
0x401e0c:	lea	rdi, [rip + 0x512c]
0x401e13:	call	0x401ad0

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x401ad0
stashes  [<SimState @ 0x401ad0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x877dd2
rdi : 0x406f3f
rdx : 0x0
rflags : 0x0
rip : 0x401ad0
rsi : 0x406f68
rsp : 0x7fffffffffefef8
0x401ad0:	jmp	qword ptr [rip + 0x20838a]

0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:09 active states =  1 rip =  0x72de90
stashes  [<SimState @ 0x72de90>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877dd2
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x877dd2
rdi : 0x406f3f
rdx : 0x0
rflags : 0x0
rip : 0x72de90
rsi : 0x406f68
rsp : 0x7fffffffffefef8
0x72de90:	sub	rsp, 0x18
0x72de94:	xor	eax, eax
0x72de96:	test	rdi, rdi
0x72de99:	mov	qword ptr [rsp + 8], rsi
0x72de9e:	je	0x72dea5

0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72dea0
stashes  [<SimState @ 0x72dea0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x877dd2
rdi : 0x406f3f
rdx : 0x0
rflags : 0x4
rip : 0x72dea0
rsi : 0x406f68
rsp : 0x7fffffffffefee0
0x72dea0:	cmp	byte ptr [rdi], 0
0x72dea3:	jne	0x72deb0

0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72deb0
stashes  [<SimState @ 0x72deb0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x877dd2
rdi : 0x406f3f
rdx : 0x0
rflags : 0x4
rip : 0x72deb0
rsi : 0x406f68
rsp : 0x7fffffffffefee0
0x72deb0:	lea	rsi, [rsp + 8]
0x72deb5:	xor	edx, edx
0x72deb7:	call	0x72da00

0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72da00
stashes  [<SimState @ 0x72da00>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x877dd2
rdi : 0x406f3f
rdx : 0x0
rflags : 0x44
rip : 0x72da00
rsi : 0x7fffffffffefee8
rsp : 0x7fffffffffefed8
0x72da00:	push	r15
0x72da02:	push	r14
0x72da04:	mov	r14, rdx
0x72da07:	push	r13
0x72da09:	push	r12
0x72da0b:	mov	r13, rsi
0x72da0e:	push	rbp
0x72da0f:	push	rbx
0x72da10:	mov	r12, rdi
0x72da13:	sub	rsp, 0x18
0x72da17:	mov	edx, dword ptr [rip + 0x385ecb]
0x72da1d:	test	edx, edx
0x72da1f:	je	0x72da3e

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72da3e
stashes  [<SimState @ 0x72da3e>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x877dd2
rdi : 0x406f3f
rdx : 0x0
rflags : 0x44
rip : 0x72da3e
rsi : 0x7fffffffffefee8
rsp : 0x7fffffffffefe90
0x72da3e:	mov	r15, qword ptr [rip + 0x3804b3]
0x72da45:	mov	rbx, qword ptr [r15]
0x72da48:	test	rbx, rbx
0x72da4b:	jne	0x72da6a

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72da4d
stashes  [<SimState @ 0x72da4d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x0
rcx : 0x877dd2
rdi : 0x406f3f
rdx : 0x0
rflags : 0x44
rip : 0x72da4d
rsi : 0x7fffffffffefee8
rsp : 0x7fffffffffefe90
0x72da4d:	jmp	0x72db10

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72db10
stashes  [<SimState @ 0x72db10>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x0
rcx : 0x877dd2
rdi : 0x406f3f
rdx : 0x0
rflags : 0x44
rip : 0x72db10
rsi : 0x7fffffffffefee8
rsp : 0x7fffffffffefe90
0x72db10:	test	r13, r13
0x72db13:	je	0x72dc90

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72db19
stashes  [<SimState @ 0x72db19>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x0
rcx : 0x877dd2
rdi : 0x406f3f
rdx : 0x0
rflags : 0x4
rip : 0x72db19
rsi : 0x7fffffffffefee8
rsp : 0x7fffffffffefe90
0x72db19:	mov	rbx, qword ptr [r13]
0x72db1d:	test	rbx, rbx
0x72db20:	je	0x72ddcf

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72db26
stashes  [<SimState @ 0x72db26>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x406f68
rcx : 0x877dd2
rdi : 0x406f3f
rdx : 0x0
rflags : 0x0
rip : 0x72db26
rsi : 0x7fffffffffefee8
rsp : 0x7fffffffffefe90
0x72db26:	mov	rdi, r12
0x72db29:	call	0x721100

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x406f68
rcx : 0x877dd2
rdi : 0x406f3f
rdx : 0x0
rflags : 0x0
rip : 0x721100
rsi : 0x7fffffffffefee8
rsp : 0x7fffffffffefe88
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x72db26 => 0x721100()
0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x406f68
rcx : 0x877dd2
rdi : 0x406f3f
rdx : 0x0
rflags : 0x0
rip : 0x784030
rsi : 0x7fffffffffefee8
rsp : 0x7fffffffffefe88
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x72db26 => 0x721100()
0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72db2e
stashes  [<SimState @ 0x72db2e>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x9
rbp : 0x2
rbx : 0x406f68
rcx : 0x877dd2
rdi : 0x406f3f
rdx : 0x0
rflags : 0x0
rip : 0x72db2e
rsi : 0x7fffffffffefee8
rsp : 0x7fffffffffefe90
0x72db2e:	lea	rdx, [rax + 1]
0x72db32:	lea	rdi, [rax + 0x19]
0x72db36:	mov	qword ptr [rsp + 8], rdx
0x72db3b:	call	0x7212c0

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x7212c0
stashes  [<SimState @ 0x7212c0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x9
rbp : 0x2
rbx : 0x406f68
rcx : 0x877dd2
rdi : 0x22
rdx : 0xa
rflags : 0x0
rip : 0x7212c0
rsi : 0x7fffffffffefee8
rsp : 0x7fffffffffefe88
0x7212c0:	jmp	qword ptr [rip + 0x38cb6a]

0x72db2e => 0x7212c0(malloc)
0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x780580
stashes  [<SimState @ 0x780580>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x9
rbp : 0x2
rbx : 0x406f68
rcx : 0x877dd2
rdi : 0x22
rdx : 0xa
rflags : 0x0
rip : 0x780580
rsi : 0x7fffffffffefee8
rsp : 0x7fffffffffefe88
0x780580:	push	rbp
0x780581:	push	rbx
0x780582:	sub	rsp, 0x18
0x780586:	mov	rax, qword ptr [rip + 0x32d953]
0x78058d:	mov	rax, qword ptr [rax]
0x780590:	test	rax, rax
0x780593:	jne	0x780720

0x72db2e => 0x7212c0(malloc)
0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72db40
stashes  [<SimState @ 0x72db40>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000000
rbp : 0x2
rbx : 0x406f68
rcx : 0x877dd2
rdi : 0x22
rdx : 0xa
rflags : 0x0
rip : 0x72db40
rsi : 0x7fffffffffefee8
rsp : 0x7fffffffffefe90
0x72db40:	test	rax, rax
0x72db43:	mov	rbp, rax
0x72db46:	mov	rdx, qword ptr [rsp + 8]
0x72db4b:	je	0x72de04

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72db51
stashes  [<SimState @ 0x72db51>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000000
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x877dd2
rdi : 0x22
rdx : 0xa
rflags : 0x4
rip : 0x72db51
rsi : 0x7fffffffffefee8
rsp : 0x7fffffffffefe90
0x72db51:	lea	rdi, [rax + 0x18]
0x72db55:	mov	rsi, r12
0x72db58:	call	0x721160

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x721160
stashes  [<SimState @ 0x721160>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000000
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x877dd2
rdi : 0xc0000018
rdx : 0xa
rflags : 0x4
rip : 0x721160
rsi : 0x406f3f
rsp : 0x7fffffffffefe88
0x721160:	jmp	qword ptr [rip + 0x38cf72]

0x72db51 => 0x721160()
0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x79dc20
stashes  [<SimState @ 0x79dc20>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000000
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x877dd2
rdi : 0xc0000018
rdx : 0xa
rflags : 0x4
rip : 0x79dc20
rsi : 0x406f3f
rsp : 0x7fffffffffefe88
0x79dc20:	mov	rax, rdi
0x79dc23:	cmp	rdx, 0x10
0x79dc27:	jb	0x79dd27

0x72db51 => 0x721160()
0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x79dd27
stashes  [<SimState @ 0x79dd27>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000018
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x877dd2
rdi : 0xc0000018
rdx : 0xa
rflags : 0x85
rip : 0x79dd27
rsi : 0x406f3f
rsp : 0x7fffffffffefe88
0x79dd27:	cmp	dl, 8
0x79dd2a:	jae	0x79dd3e

0x72db51 => 0x721160()
0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x79dd3e
stashes  [<SimState @ 0x79dd3e>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000018
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x877dd2
rdi : 0xc0000018
rdx : 0xa
rflags : 0x0
rip : 0x79dd3e
rsi : 0x406f3f
rsp : 0x7fffffffffefe88
0x79dd3e:	mov	rcx, qword ptr [rsi + rdx - 8]
0x79dd43:	mov	rsi, qword ptr [rsi]
0x79dd46:	mov	qword ptr [rdi + rdx - 8], rcx
0x79dd4b:	mov	qword ptr [rdi], rsi
0x79dd4e:	ret	

0x72db51 => 0x721160()
0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72db5d
stashes  [<SimState @ 0x72db5d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000018
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x736c6974756572
rdi : 0xc0000018
rdx : 0xa
rflags : 0x0
rip : 0x72db5d
rsi : 0x6c69747565726f63
rsp : 0x7fffffffffefe90
0x72db5d:	lea	rsi, [rip + 0x14fadc]
0x72db64:	mov	rdi, rbx
0x72db67:	call	0x721200

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000018
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x736c6974756572
rdi : 0x406f68
rdx : 0xa
rflags : 0x0
rip : 0x721200
rsi : 0x87d640
rsp : 0x7fffffffffefe88
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x72db5d => 0x721200()
0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000018
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x736c6974756572
rdi : 0x406f68
rdx : 0xa
rflags : 0x0
rip : 0x783bd0
rsi : 0x87d640
rsp : 0x7fffffffffefe88
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x72db5d => 0x721200()
0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72db6c
stashes  [<SimState @ 0x72db6c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x736c6974756572
rdi : 0x406f68
rdx : 0xa
rflags : 0x0
rip : 0x72db6c
rsi : 0x87d640
rsp : 0x7fffffffffefe90
0x72db6c:	test	eax, eax
0x72db6e:	lea	rdx, [rip + 0x14facb]
0x72db75:	jne	0x72de40

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72de40
stashes  [<SimState @ 0x72de40>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x736c6974756572
rdi : 0x406f68
rdx : 0x87d640
rflags : 0x84
rip : 0x72de40
rsi : 0x87d640
rsp : 0x7fffffffffefe90
0x72de40:	mov	rdi, rbx
0x72de43:	call	0x783d70

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x783d70
stashes  [<SimState @ 0x783d70>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x736c6974756572
rdi : 0x406f68
rdx : 0x87d640
rflags : 0x84
rip : 0x783d70
rsi : 0x87d640
rsp : 0x7fffffffffefe88
0x783d70:	push	rbp
0x783d71:	push	rbx
0x783d72:	mov	rbp, rdi
0x783d75:	sub	rsp, 8
0x783d79:	call	0x721100

0x72de40 => 0x783d70(__strdup)
0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
== Before Malloc ==

0x72de40 => 0x783d70(__strdup)
0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fb0 size =  0x1de00 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
rip 783d70 malloc requested 7 with requst_size 24, allocated size 32, heap state before
== After Malloc ==

0x72de40 => 0x783d70(__strdup)
0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
rip 783d70 malloc called 7 with requst_size 24, allocated size 32, allocated at 0x2000fb0
Backtrace:
Frame 0: 0x72de40 => 0x783d70, sp = 0x7fffffffffefe88
Frame 1: 0x72deb0 => 0x72da00, sp = 0x7fffffffffefed8
Frame 2: 0x401e05 => 0x401ad0, sp = 0x7fffffffffefef8
Frame 3: 0x1b01080 => 0x401dd0, sp = 0x7fffffffffeff28
Frame 4: 0x402450 => 0x7219a0, sp = 0x7fffffffffeff38
Frame 5: 0x0 => 0x0, sp = 0xffffffffffffffff
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72de48
stashes  [<SimState @ 0x72de48>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fc0
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x736c6974756572
rdi : 0x406f68
rdx : 0x87d640
rflags : 0x84
rip : 0x72de48
rsi : 0x87d640
rsp : 0x7fffffffffefe90
0x72de48:	test	rax, rax
0x72de4b:	mov	rdx, rax
0x72de4e:	jne	0x72db7b

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72db7b
stashes  [<SimState @ 0x72db7b>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fc0
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x736c6974756572
rdi : 0x406f68
rdx : 0x2000fc0
rflags : 0x4
rip : 0x72db7b
rsi : 0x87d640
rsp : 0x7fffffffffefe90
0x72db7b:	test	r14, r14
0x72db7e:	mov	qword ptr [r13], rdx
0x72db82:	mov	qword ptr [rbp + 8], rdx
0x72db86:	je	0x72dd90

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72dd90
stashes  [<SimState @ 0x72dd90>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fc0
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x736c6974756572
rdi : 0x406f68
rdx : 0x2000fc0
rflags : 0x44
rip : 0x72dd90
rsi : 0x87d640
rsp : 0x7fffffffffefe90
0x72dd90:	mov	qword ptr [rbp + 0x10], 0
0x72dd98:	jmp	0x72db9f

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72db9f
stashes  [<SimState @ 0x72db9f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x7fffffffffefee8
r13b : 0xe8
r13d : 0xfffefee8
r13w : 0xfee8
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fc0
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x736c6974756572
rdi : 0x406f68
rdx : 0x2000fc0
rflags : 0x44
rip : 0x72db9f
rsi : 0x87d640
rsp : 0x7fffffffffefe90
0x72db9f:	mov	r13, qword ptr [r15]
0x72dba2:	test	r13, r13
0x72dba5:	je	0x72dda0

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72dda0
stashes  [<SimState @ 0x72dda0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fc0
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x736c6974756572
rdi : 0x406f68
rdx : 0x2000fc0
rflags : 0x44
rip : 0x72dda0
rsi : 0x87d640
rsp : 0x7fffffffffefe90
0x72dda0:	mov	qword ptr [rbp], r13
0x72dda4:	mov	qword ptr [r15], rbp
0x72dda7:	jmp	0x72dc48

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72dc48
stashes  [<SimState @ 0x72dc48>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fc0
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x736c6974756572
rdi : 0x406f68
rdx : 0x2000fc0
rflags : 0x44
rip : 0x72dc48
rsi : 0x87d640
rsp : 0x7fffffffffefe90
0x72dc48:	mov	rax, qword ptr [rip + 0x3802b1]
0x72dc4f:	add	dword ptr [rax], 1
0x72dc52:	mov	eax, dword ptr [rip + 0x385c90]
0x72dc58:	test	eax, eax
0x72dc5a:	je	0x72dd66

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72dd66
stashes  [<SimState @ 0x72dd66>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x406f3f
r12b : 0x3f
r12d : 0x406f3f
r12w : 0x6f3f
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xab3588
r15b : 0x88
r15d : 0xab3588
r15w : 0x3588
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xc0000000
rbx : 0x406f68
rcx : 0x736c6974756572
rdi : 0x406f68
rdx : 0x2000fc0
rflags : 0x44
rip : 0x72dd66
rsi : 0x87d640
rsp : 0x7fffffffffefe90
0x72dd66:	add	rsp, 0x18
0x72dd6a:	pop	rbx
0x72dd6b:	pop	rbp
0x72dd6c:	pop	r12
0x72dd6e:	pop	r13
0x72dd70:	pop	r14
0x72dd72:	pop	r15
0x72dd74:	ret	

0x72deb0 => 0x72da00(set_binding_values.part.0)
0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x72debc
stashes  [<SimState @ 0x72debc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x736c6974756572
rdi : 0x406f68
rdx : 0x2000fc0
rflags : 0x0
rip : 0x72debc
rsi : 0x87d640
rsp : 0x7fffffffffefee0
0x72debc:	mov	rax, qword ptr [rsp + 8]
0x72dec1:	add	rsp, 0x18
0x72dec5:	ret	

0x401e05 => 0x401ad0(bindtextdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x401e18
stashes  [<SimState @ 0x401e18>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fc0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x736c6974756572
rdi : 0x406f68
rdx : 0x2000fc0
rflags : 0x0
rip : 0x401e18
rsi : 0x87d640
rsp : 0x7fffffffffeff00
0x401e18:	lea	rdi, [rip + 0x5120]
0x401e1f:	call	0x401aa0

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x401aa0
stashes  [<SimState @ 0x401aa0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fc0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x2000fc0
rflags : 0x0
rip : 0x401aa0
rsi : 0x87d640
rsp : 0x7fffffffffefef8
0x401aa0:	jmp	qword ptr [rip + 0x2083a2]

0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x731420
stashes  [<SimState @ 0x731420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fc0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x2000fc0
rflags : 0x0
rip : 0x731420
rsi : 0x87d640
rsp : 0x7fffffffffefef8
0x731420:	push	rbp
0x731421:	push	rbx
0x731422:	sub	rsp, 8
0x731426:	test	rdi, rdi
0x731429:	mov	rbx, qword ptr [rip + 0x37d2e0]
0x731430:	je	0x7314c0

0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x731436
stashes  [<SimState @ 0x731436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fc0
rbp : 0x2
rbx : 0x879c80
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x2000fc0
rflags : 0x4
rip : 0x731436
rsi : 0x87d640
rsp : 0x7fffffffffefee0
0x731436:	mov	edx, dword ptr [rip + 0x3824ac]
0x73143c:	mov	rbx, rdi
0x73143f:	test	edx, edx
0x731441:	je	0x731460

0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x731460
stashes  [<SimState @ 0x731460>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fc0
rbp : 0x2
rbx : 0x406f3f
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x0
rflags : 0x44
rip : 0x731460
rsi : 0x87d640
rsp : 0x7fffffffffefee0
0x731460:	cmp	byte ptr [rbx], 0
0x731463:	mov	rbp, qword ptr [rip + 0x37d2a6]
0x73146a:	jne	0x7314d0

0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x7314d0
stashes  [<SimState @ 0x7314d0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fc0
rbp : 0x879c80
rbx : 0x406f3f
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x0
rflags : 0x4
rip : 0x7314d0
rsi : 0x87d640
rsp : 0x7fffffffffefee0
0x7314d0:	lea	rsi, [rip + 0x1487a9]
0x7314d7:	mov	rdi, rbx
0x7314da:	call	0x721200

0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fc0
rbp : 0x879c80
rbx : 0x406f3f
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x0
rflags : 0x4
rip : 0x721200
rsi : 0x879c80
rsp : 0x7fffffffffefed8
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x7314d0 => 0x721200()
0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fc0
rbp : 0x879c80
rbx : 0x406f3f
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x0
rflags : 0x4
rip : 0x783bd0
rsi : 0x879c80
rsp : 0x7fffffffffefed8
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x7314d0 => 0x721200()
0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x7314df
stashes  [<SimState @ 0x7314df>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x879c80
rbx : 0x406f3f
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x0
rflags : 0x4
rip : 0x7314df
rsi : 0x879c80
rsp : 0x7fffffffffefee0
0x7314df:	test	eax, eax
0x7314e1:	je	0x73146c

0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x7314e3
stashes  [<SimState @ 0x7314e3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x879c80
rbx : 0x406f3f
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x0
rflags : 0x84
rip : 0x7314e3
rsi : 0x879c80
rsp : 0x7fffffffffefee0
0x7314e3:	mov	rsi, rbp
0x7314e6:	mov	rdi, rbx
0x7314e9:	call	0x721200

0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x721200
stashes  [<SimState @ 0x721200>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x879c80
rbx : 0x406f3f
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x0
rflags : 0x84
rip : 0x721200
rsi : 0x879c80
rsp : 0x7fffffffffefed8
0x721200:	jmp	qword ptr [rip + 0x38cf22]

0x7314e3 => 0x721200()
0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x783bd0
stashes  [<SimState @ 0x783bd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x879c80
rbx : 0x406f3f
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x0
rflags : 0x84
rip : 0x783bd0
rsi : 0x879c80
rsp : 0x7fffffffffefed8
0x783bd0:	mov	rdx, qword ptr [rip + 0x32a281]
0x783bd7:	lea	rax, [rip + 0x8a52]
0x783bde:	test	byte ptr [rdx + 0xb4], 0x10
0x783be5:	jne	0x783bfd

0x7314e3 => 0x721200()
0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x7314ee
stashes  [<SimState @ 0x7314ee>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x879c80
rbx : 0x406f3f
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x0
rflags : 0x84
rip : 0x7314ee
rsi : 0x879c80
rsp : 0x7fffffffffefee0
0x7314ee:	test	eax, eax
0x7314f0:	jne	0x731508

0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x731508
stashes  [<SimState @ 0x731508>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x879c80
rbx : 0x406f3f
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x0
rflags : 0x84
rip : 0x731508
rsi : 0x879c80
rsp : 0x7fffffffffefee0
0x731508:	mov	rdi, rbx
0x73150b:	call	0x783d70

0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:10 active states =  1 rip =  0x783d70
stashes  [<SimState @ 0x783d70>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x879c80
rbx : 0x406f3f
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x0
rflags : 0x84
rip : 0x783d70
rsi : 0x879c80
rsp : 0x7fffffffffefed8
0x783d70:	push	rbp
0x783d71:	push	rbx
0x783d72:	mov	rbp, rdi
0x783d75:	sub	rsp, 8
0x783d79:	call	0x721100

0x731508 => 0x783d70(__strdup)
0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
== Before Malloc ==

0x731508 => 0x783d70(__strdup)
0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000fd0 size =  0x1dde0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
rip 783d70 malloc requested 8 with requst_size 10, allocated size 32, heap state before
== After Malloc ==

0x731508 => 0x783d70(__strdup)
0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
rip 783d70 malloc called 8 with requst_size 10, allocated size 32, allocated at 0x2000fd0
Backtrace:
Frame 0: 0x731508 => 0x783d70, sp = 0x7fffffffffefed8
Frame 1: 0x401e18 => 0x401aa0, sp = 0x7fffffffffefef8
Frame 2: 0x1b01080 => 0x401dd0, sp = 0x7fffffffffeff28
Frame 3: 0x402450 => 0x7219a0, sp = 0x7fffffffffeff38
Frame 4: 0x0 => 0x0, sp = 0xffffffffffffffff
posix out b''
posix err b''
10:07:11 active states =  1 rip =  0x731510
stashes  [<SimState @ 0x731510>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fe0
rbp : 0x879c80
rbx : 0x406f3f
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x0
rflags : 0x84
rip : 0x731510
rsi : 0x879c80
rsp : 0x7fffffffffefee0
0x731510:	test	rax, rax
0x731513:	mov	rbx, rax
0x731516:	je	0x731499

0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:11 active states =  1 rip =  0x731518
stashes  [<SimState @ 0x731518>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fe0
rbp : 0x879c80
rbx : 0x2000fe0
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x0
rflags : 0x0
rip : 0x731518
rsi : 0x879c80
rsp : 0x7fffffffffefee0
0x731518:	mov	qword ptr [rip + 0x37d1f1], rax
0x73151f:	lea	rax, [rip + 0x14875a]
0x731526:	jmp	0x73147d

0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:11 active states =  1 rip =  0x73147d
stashes  [<SimState @ 0x73147d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x879c80
rbp : 0x879c80
rbx : 0x2000fe0
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0x0
rflags : 0x0
rip : 0x73147d
rsi : 0x879c80
rsp : 0x7fffffffffefee0
0x73147d:	mov	rdx, qword ptr [rip + 0x37ca7c]
0x731484:	add	dword ptr [rdx], 1
0x731487:	cmp	rbp, rax
0x73148a:	je	0x731499

0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:11 active states =  1 rip =  0x731499
stashes  [<SimState @ 0x731499>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x879c80
rbp : 0x879c80
rbx : 0x2000fe0
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0xab3590
rflags : 0x44
rip : 0x731499
rsi : 0x879c80
rsp : 0x7fffffffffefee0
0x731499:	mov	eax, dword ptr [rip + 0x382449]
0x73149f:	test	eax, eax
0x7314a1:	je	0x7314c0

0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:11 active states =  1 rip =  0x7314c0
stashes  [<SimState @ 0x7314c0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x879c80
rbx : 0x2000fe0
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0xab3590
rflags : 0x44
rip : 0x7314c0
rsi : 0x879c80
rsp : 0x7fffffffffefee0
0x7314c0:	add	rsp, 8
0x7314c4:	mov	rax, rbx
0x7314c7:	pop	rbx
0x7314c8:	pop	rbp
0x7314c9:	ret	

0x401e18 => 0x401aa0(textdomain)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:11 active states =  1 rip =  0x401e24
stashes  [<SimState @ 0x401e24>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fe0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x736c6974756572
rdi : 0x406f3f
rdx : 0xab3590
rflags : 0x4
rip : 0x401e24
rsi : 0x879c80
rsp : 0x7fffffffffeff00
0x401e24:	lea	rdi, [rip + 0x1395]
0x401e2b:	call	0x4068b0

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:11 active states =  1 rip =  0x4068b0
stashes  [<SimState @ 0x4068b0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fe0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x736c6974756572
rdi : 0x4031c0
rdx : 0xab3590
rflags : 0x4
rip : 0x4068b0
rsi : 0x879c80
rsp : 0x7fffffffffefef8
0x4068b0:	mov	rdx, qword ptr [rip + 0x203751]
0x4068b7:	xor	esi, esi
0x4068b9:	jmp	0x401d50

0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:11 active states =  1 rip =  0x401d50
stashes  [<SimState @ 0x401d50>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fe0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x736c6974756572
rdi : 0x4031c0
rdx : 0x60a008
rflags : 0x44
rip : 0x401d50
rsi : 0x0
rsp : 0x7fffffffffefef8
0x401d50:	jmp	qword ptr [rip + 0x20824a]

0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:11 active states =  1 rip =  0x737130
stashes  [<SimState @ 0x737130>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fe0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x736c6974756572
rdi : 0x4031c0
rdx : 0x60a008
rflags : 0x44
rip : 0x737130
rsi : 0x0
rsp : 0x7fffffffffefef8
0x737130:	lea	rcx, [rip + 0x3775e1]
0x737137:	jmp	0x737040

0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:11 active states =  1 rip =  0x737040
stashes  [<SimState @ 0x737040>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2000fe0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0xaae718
rdi : 0x4031c0
rdx : 0x60a008
rflags : 0x44
rip : 0x737040
rsi : 0x0
rsp : 0x7fffffffffefef8
0x737040:	push	r13
0x737042:	push	r12
0x737044:	mov	r13, rdx
0x737047:	push	rbp
0x737048:	push	rbx
0x737049:	mov	r12, rsi
0x73704c:	mov	rbp, rdi
0x73704f:	mov	rdx, rcx
0x737052:	mov	esi, 1
0x737057:	sub	rsp, 8
0x73705b:	xor	eax, eax
0x73705d:	lea	rbx, [rip + 0x37c5c4]
0x737064:	cmp	dword ptr [rip + 0x37c88d], 0
0x73706b:	je	0x737075

0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x737075
stashes  [<SimState @ 0x737075>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x60a008
r13b : 0x8
r13d : 0x60a008
r13w : 0xa008
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x4031c0
rbx : 0xab3628
rcx : 0xaae718
rdi : 0x4031c0
rdx : 0xaae718
rflags : 0x44
rip : 0x737075
rsi : 0x1
rsp : 0x7fffffffffefed0
0x737075:	cmpxchg	dword ptr [rbx], esi
0x737078:	je	0x737090

0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x737090
stashes  [<SimState @ 0x737090>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x60a008
r13b : 0x8
r13d : 0x60a008
r13w : 0xa008
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x4031c0
rbx : 0xab3628
rcx : 0xaae718
rdi : 0x4031c0
rdx : 0xaae718
rflags : 0x44
rip : 0x737090
rsi : 0x1
rsp : 0x7fffffffffefed0
0x737090:	mov	rdi, rdx
0x737093:	call	0x736f20

0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x736f20
stashes  [<SimState @ 0x736f20>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x60a008
r13b : 0x8
r13d : 0x60a008
r13w : 0xa008
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x4031c0
rbx : 0xab3628
rcx : 0xaae718
rdi : 0xaae718
rdx : 0xaae718
rflags : 0x44
rip : 0x736f20
rsi : 0x1
rsp : 0x7fffffffffefec8
0x736f20:	cmp	byte ptr [rip + 0x378e45], 0
0x736f27:	jne	0x73703d

0x737090 => 0x736f20(__new_exitfn)
0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x736f2d
stashes  [<SimState @ 0x736f2d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x60a008
r13b : 0x8
r13d : 0x60a008
r13w : 0xa008
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x4031c0
rbx : 0xab3628
rcx : 0xaae718
rdi : 0xaae718
rdx : 0xaae718
rflags : 0x44
rip : 0x736f2d
rsi : 0x1
rsp : 0x7fffffffffefec8
0x736f2d:	push	rbp
0x736f2e:	push	rbx
0x736f2f:	xor	r9d, r9d
0x736f32:	mov	rbx, rdi
0x736f35:	sub	rsp, 8
0x736f39:	mov	rbp, qword ptr [rdi]
0x736f3c:	test	rbp, rbp
0x736f3f:	mov	r8, rbp
0x736f42:	je	0x73701e

0x737090 => 0x736f20(__new_exitfn)
0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x736f48
stashes  [<SimState @ 0x736f48>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x60a008
r13b : 0x8
r13d : 0x60a008
r13w : 0xa008
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0xaafd80
r8b : 0x80
r8d : 0xaafd80
r8w : 0xfd80
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xaafd80
rbx : 0xaae718
rcx : 0xaae718
rdi : 0xaae718
rdx : 0xaae718
rflags : 0x0
rip : 0x736f48
rsi : 0x1
rsp : 0x7fffffffffefeb0
0x736f48:	nop	dword ptr [rax + rax]
0x736f50:	mov	rax, qword ptr [r8 + 8]
0x736f54:	test	rax, rax
0x736f57:	je	0x736f97

0x737090 => 0x736f20(__new_exitfn)
0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x736f97
stashes  [<SimState @ 0x736f97>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x60a008
r13b : 0x8
r13d : 0x60a008
r13w : 0xa008
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0xaafd80
r8b : 0x80
r8d : 0xaafd80
r8w : 0xfd80
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xaafd80
rbx : 0xaae718
rcx : 0xaae718
rdi : 0xaae718
rdx : 0xaae718
rflags : 0x44
rip : 0x736f97
rsi : 0x1
rsp : 0x7fffffffffefeb0
0x736f97:	mov	rax, qword ptr [r8]
0x736f9a:	mov	qword ptr [r8 + 8], 0
0x736fa2:	mov	r9, r8
0x736fa5:	test	rax, rax
0x736fa8:	je	0x737010

0x737090 => 0x736f20(__new_exitfn)
0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x737010
stashes  [<SimState @ 0x737010>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x60a008
r13b : 0x8
r13d : 0x60a008
r13w : 0xa008
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0xaafd80
r8b : 0x80
r8d : 0xaafd80
r8w : 0xfd80
r9 : 0xaafd80
r9b : 0x80
r9d : 0xaafd80
r9w : 0xfd80
rax : 0x0
rbp : 0xaafd80
rbx : 0xaae718
rcx : 0xaae718
rdi : 0xaae718
rdx : 0xaae718
rflags : 0x44
rip : 0x737010
rsi : 0x1
rsp : 0x7fffffffffefeb0
0x737010:	lea	rax, [r8 + 0x10]
0x737014:	mov	qword ptr [r8 + 8], 1
0x73701c:	jmp	0x736fd2

0x737090 => 0x736f20(__new_exitfn)
0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x736fd2
stashes  [<SimState @ 0x736fd2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x60a008
r13b : 0x8
r13d : 0x60a008
r13w : 0xa008
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0xaafd80
r8b : 0x80
r8d : 0xaafd80
r8w : 0xfd80
r9 : 0xaafd80
r9b : 0x80
r9d : 0xaafd80
r9w : 0xfd80
rax : 0xaafd90
rbp : 0xaafd80
rbx : 0xaae718
rcx : 0xaae718
rdi : 0xaae718
rdx : 0xaae718
rflags : 0x44
rip : 0x736fd2
rsi : 0x1
rsp : 0x7fffffffffefeb0
0x736fd2:	mov	qword ptr [rax], 1
0x736fd9:	add	qword ptr [rip + 0x37c63f], 1
0x736fe1:	add	rsp, 8
0x736fe5:	pop	rbx
0x736fe6:	pop	rbp
0x736fe7:	ret	

0x737090 => 0x736f20(__new_exitfn)
0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x737098
stashes  [<SimState @ 0x737098>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x60a008
r13b : 0x8
r13d : 0x60a008
r13w : 0xa008
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0xaafd80
r8b : 0x80
r8d : 0xaafd80
r8w : 0xfd80
r9 : 0xaafd80
r9b : 0x80
r9d : 0xaafd80
r9w : 0xfd80
rax : 0xaafd90
rbp : 0x4031c0
rbx : 0xab3628
rcx : 0xaae718
rdi : 0xaae718
rdx : 0xaae718
rflags : 0x4
rip : 0x737098
rsi : 0x1
rsp : 0x7fffffffffefed0
0x737098:	test	rax, rax
0x73709b:	je	0x7370f4

0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x73709d
stashes  [<SimState @ 0x73709d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x60a008
r13b : 0x8
r13d : 0x60a008
r13w : 0xa008
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0xaafd80
r8b : 0x80
r8d : 0xaafd80
r8w : 0xfd80
r9 : 0xaafd80
r9b : 0x80
r9d : 0xaafd80
r9w : 0xfd80
rax : 0xaafd90
rbp : 0x4031c0
rbx : 0xab3628
rcx : 0xaae718
rdi : 0xaae718
rdx : 0xaae718
rflags : 0x4
rip : 0x73709d
rsi : 0x1
rsp : 0x7fffffffffefed0
0x73709d:	xor	rbp, qword ptr fs:[0x30]
0x7370a6:	rol	rbp, 0x11
0x7370aa:	mov	qword ptr [rax + 0x10], r12
0x7370ae:	mov	qword ptr [rax + 8], rbp
0x7370b2:	mov	qword ptr [rax + 0x18], r13
0x7370b6:	mov	qword ptr [rax], 4
0x7370bd:	cmp	dword ptr [rip + 0x37c834], 0
0x7370c4:	je	0x7370cd

0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7370cd
stashes  [<SimState @ 0x7370cd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x60a008
r13b : 0x8
r13d : 0x60a008
r13w : 0xa008
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0xaafd80
r8b : 0x80
r8d : 0xaafd80
r8w : 0xfd80
r9 : 0xaafd80
r9b : 0x80
r9d : 0xaafd80
r9w : 0xfd80
rax : 0xaafd90
rbp : 0xa48eaa02c708a0a8
rbx : 0xab3628
rcx : 0xaae718
rdi : 0xaae718
rdx : 0xaae718
rflags : 0x44
rip : 0x7370cd
rsi : 0x1
rsp : 0x7fffffffffefed0
0x7370cd:	dec	dword ptr [rbx]
0x7370cf:	je	0x7370e7

0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7370e7
stashes  [<SimState @ 0x7370e7>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x60a008
r13b : 0x8
r13d : 0x60a008
r13w : 0xa008
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0xaafd80
r8b : 0x80
r8d : 0xaafd80
r8w : 0xfd80
r9 : 0xaafd80
r9b : 0x80
r9d : 0xaafd80
r9w : 0xfd80
rax : 0xaafd90
rbp : 0xa48eaa02c708a0a8
rbx : 0xab3628
rcx : 0xaae718
rdi : 0xaae718
rdx : 0xaae718
rflags : 0x44
rip : 0x7370e7
rsi : 0x1
rsp : 0x7fffffffffefed0
0x7370e7:	xor	eax, eax
0x7370e9:	add	rsp, 8
0x7370ed:	pop	rbx
0x7370ee:	pop	rbp
0x7370ef:	pop	r12
0x7370f1:	pop	r13
0x7370f3:	ret	

0x401e24 => 0x4068b0(atexit)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x401e30
stashes  [<SimState @ 0x401e30>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0xaafd80
r8b : 0x80
r8d : 0xaafd80
r8w : 0xfd80
r9 : 0xaafd80
r9b : 0x80
r9d : 0xaafd80
r9w : 0xfd80
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0xaae718
rdi : 0xaae718
rdx : 0xaae718
rflags : 0x4
rip : 0x401e30
rsi : 0x1
rsp : 0x7fffffffffeff00
0x401e30:	lea	rdx, [rip + 0x5168]
0x401e37:	xor	r8d, r8d
0x401e3a:	mov	rcx, r13
0x401e3d:	mov	rsi, rbx
0x401e40:	mov	edi, ebp
0x401e42:	call	0x401b30

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x401b30
stashes  [<SimState @ 0x401b30>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0xaafd80
r9b : 0x80
r9d : 0xaafd80
r9w : 0xfd80
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x609a40
rdi : 0x2
rdx : 0x406f9f
rflags : 0x44
rip : 0x401b30
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefef8
0x401b30:	jmp	qword ptr [rip + 0x20835a]

0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7daf80
stashes  [<SimState @ 0x7daf80>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0xaafd80
r9b : 0x80
r9d : 0xaafd80
r9w : 0xfd80
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x609a40
rdi : 0x2
rdx : 0x406f9f
rflags : 0x44
rip : 0x7daf80
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefef8
0x7daf80:	sub	rsp, 0x10
0x7daf84:	xor	r9d, r9d
0x7daf87:	push	0
0x7daf89:	call	0x7daee0

0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7daee0
stashes  [<SimState @ 0x7daee0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x609a40
rdi : 0x2
rdx : 0x406f9f
rflags : 0x44
rip : 0x7daee0
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefed8
0x7daee0:	push	rbx
0x7daee1:	mov	rbx, qword ptr [rip + 0x2d3048]
0x7daee8:	mov	eax, dword ptr [rbx]
0x7daeea:	mov	dword ptr [rip + 0x2d6110], eax
0x7daef0:	mov	rax, qword ptr [rip + 0x2d30c9]
0x7daef7:	mov	eax, dword ptr [rax]
0x7daef9:	mov	dword ptr [rip + 0x2d6105], eax
0x7daeff:	mov	eax, dword ptr [rsp + 0x10]
0x7daf03:	push	rax
0x7daf04:	lea	rax, [rip + 0x2d60f5]
0x7daf0b:	push	rax
0x7daf0c:	call	0x7da8f0

0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7da8f0
stashes  [<SimState @ 0x7da8f0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1000
rbp : 0x2
rbx : 0x60a0b0
rcx : 0x609a40
rdi : 0x2
rdx : 0x406f9f
rflags : 0x44
rip : 0x7da8f0
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefeb8
0x7da8f0:	push	r15
0x7da8f2:	push	r14
0x7da8f4:	push	r13
0x7da8f6:	push	r12
0x7da8f8:	push	rbp
0x7da8f9:	push	rbx
0x7da8fa:	sub	rsp, 0x38
0x7da8fe:	test	edi, edi
0x7da900:	mov	rbx, qword ptr [rsp + 0x70]
0x7da905:	mov	qword ptr [rsp + 8], rcx
0x7da90a:	mov	qword ptr [rsp + 0x10], r8
0x7da90f:	mov	r13d, dword ptr [rbx + 4]
0x7da913:	jle	0x7daad3

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7da919
stashes  [<SimState @ 0x7da919>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1000
rbp : 0x2
rbx : 0xab1000
rcx : 0x609a40
rdi : 0x2
rdx : 0x406f9f
rflags : 0x0
rip : 0x7da919
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefe50
0x7da919:	mov	eax, dword ptr [rbx]
0x7da91b:	mov	r12d, edi
0x7da91e:	mov	r15, rsi
0x7da921:	mov	rbp, rdx
0x7da924:	mov	qword ptr [rbx + 0x10], 0
0x7da92c:	test	eax, eax
0x7da92e:	je	0x7dab20

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7da934
stashes  [<SimState @ 0x7da934>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x609a40
rdi : 0x2
rdx : 0x406f9f
rflags : 0x0
rip : 0x7da934
rsi : 0x7fffffffffeff50
rsp : 0x7fffffffffefe50
0x7da934:	mov	esi, dword ptr [rbx + 0x18]
0x7da937:	test	esi, esi
0x7da939:	jne	0x7daa20

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7da93f
stashes  [<SimState @ 0x7da93f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x609a40
rdi : 0x2
rdx : 0x406f9f
rflags : 0x44
rip : 0x7da93f
rsi : 0x0
rsp : 0x7fffffffffefe50
0x7da93f:	mov	dword ptr [rbx + 0x30], eax
0x7da942:	mov	dword ptr [rbx + 0x2c], eax
0x7da945:	mov	qword ptr [rbx + 0x20], 0
0x7da94d:	movzx	eax, byte ptr [rbp]
0x7da951:	cmp	al, 0x2d
0x7da953:	je	0x7daae0

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7da959
stashes  [<SimState @ 0x7da959>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x61
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x609a40
rdi : 0x2
rdx : 0x406f9f
rflags : 0x10
rip : 0x7da959
rsi : 0x0
rsp : 0x7fffffffffefe50
0x7da959:	cmp	al, 0x2b
0x7da95b:	je	0x7dad80

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7da961
stashes  [<SimState @ 0x7da961>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x61
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x609a40
rdi : 0x2
rdx : 0x406f9f
rflags : 0x14
rip : 0x7da961
rsi : 0x0
rsp : 0x7fffffffffefe50
0x7da961:	mov	ecx, dword ptr [rsp + 0x78]
0x7da965:	xor	edx, edx
0x7da967:	test	ecx, ecx
0x7da969:	je	0x7dad98

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7dad98
stashes  [<SimState @ 0x7dad98>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x61
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x2
rdx : 0x0
rflags : 0x44
rip : 0x7dad98
rsi : 0x0
rsp : 0x7fffffffffefe50
0x7dad98:	lea	rdi, [rip + 0x9cb75]
0x7dad9f:	mov	dword ptr [rsp + 0x1c], r9d
0x7dada4:	call	0x736420

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x736420
stashes  [<SimState @ 0x736420>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x61
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x44
rip : 0x736420
rsi : 0x0
rsp : 0x7fffffffffefe48
0x736420:	push	r15
0x736422:	push	r14
0x736424:	push	r13
0x736426:	push	r12
0x736428:	mov	r13, rdi
0x73642b:	push	rbp
0x73642c:	push	rbx
0x73642d:	sub	rsp, 8
0x736431:	call	0x721100

0x7dad98 => 0x736420(getenv)
0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x877914
r13b : 0x14
r13d : 0x877914
r13w : 0x7914
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x61
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x0
rip : 0x721100
rsi : 0x0
rsp : 0x7fffffffffefe08
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x736420 => 0x721100()
0x7dad98 => 0x736420(getenv)
0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x877914
r13b : 0x14
r13d : 0x877914
r13w : 0x7914
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x61
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefe08
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x736420 => 0x721100()
0x7dad98 => 0x736420(getenv)
0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x736436
stashes  [<SimState @ 0x736436>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x877914
r13b : 0x14
r13d : 0x877914
r13w : 0x7914
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xf
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x0
rip : 0x736436
rsi : 0x0
rsp : 0x7fffffffffefe10
0x736436:	mov	r14, rax
0x736439:	mov	rax, qword ptr [rip + 0x377a68]
0x736440:	mov	rbp, qword ptr [rax]
0x736443:	test	rbp, rbp
0x736446:	je	0x7364f0

0x7dad98 => 0x736420(getenv)
0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x73644c
stashes  [<SimState @ 0x73644c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x877914
r13b : 0x14
r13d : 0x877914
r13w : 0x7914
r14 : 0xf
r14b : 0xf
r14d : 0xf
r14w : 0xf
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xab1098
rbp : 0x7fffffffffeff68
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x0
rip : 0x73644c
rsi : 0x0
rsp : 0x7fffffffffefe10
0x73644c:	movzx	eax, byte ptr [r13]
0x736451:	test	al, al
0x736453:	je	0x7364f0

0x7dad98 => 0x736420(getenv)
0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x736459
stashes  [<SimState @ 0x736459>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x877914
r13b : 0x14
r13d : 0x877914
r13w : 0x7914
r14 : 0xf
r14b : 0xf
r14d : 0xf
r14w : 0xf
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x50
rbp : 0x7fffffffffeff68
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x4
rip : 0x736459
rsi : 0x0
rsp : 0x7fffffffffefe10
0x736459:	cmp	byte ptr [r13 + 1], 0
0x73645e:	mov	rbx, qword ptr [rbp]
0x736462:	jne	0x7364a0

0x7dad98 => 0x736420(getenv)
0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7364a0
stashes  [<SimState @ 0x7364a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x877914
r13b : 0x14
r13d : 0x877914
r13w : 0x7914
r14 : 0xf
r14b : 0xf
r14d : 0xf
r14w : 0xf
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x50
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x0
rip : 0x7364a0
rsi : 0x0
rsp : 0x7fffffffffefe10
0x7364a0:	movzx	r12d, word ptr [r13]
0x7364a5:	add	r13, 2
0x7364a9:	test	rbx, rbx
0x7364ac:	lea	r15, [r14 - 2]
0x7364b0:	jne	0x7364c5

0x7dad98 => 0x736420(getenv)
0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7364b2
stashes  [<SimState @ 0x7364b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x4f50
r12b : 0x50
r12d : 0x4f50
r12w : 0x4f50
r13 : 0x877916
r13b : 0x16
r13d : 0x877916
r13w : 0x7916
r14 : 0xf
r14b : 0xf
r14d : 0xf
r14w : 0xf
r15 : 0xd
r15b : 0xd
r15d : 0xd
r15w : 0xd
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x50
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x44
rip : 0x7364b2
rsi : 0x0
rsp : 0x7fffffffffefe10
0x7364b2:	jmp	0x736486

0x7dad98 => 0x736420(getenv)
0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x736486
stashes  [<SimState @ 0x736486>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x4f50
r12b : 0x50
r12d : 0x4f50
r12w : 0x4f50
r13 : 0x877916
r13b : 0x16
r13d : 0x877916
r13w : 0x7916
r14 : 0xf
r14b : 0xf
r14d : 0xf
r14w : 0xf
r15 : 0xd
r15b : 0xd
r15d : 0xd
r15w : 0xd
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x50
rbp : 0x7fffffffffeff68
rbx : 0x0
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x44
rip : 0x736486
rsi : 0x0
rsp : 0x7fffffffffefe10
0x736486:	add	rsp, 8
0x73648a:	mov	rax, rbx
0x73648d:	pop	rbx
0x73648e:	pop	rbp
0x73648f:	pop	r12
0x736491:	pop	r13
0x736493:	pop	r14
0x736495:	pop	r15
0x736497:	ret	

0x7dad98 => 0x736420(getenv)
0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7dada9
stashes  [<SimState @ 0x7dada9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x4
rip : 0x7dada9
rsi : 0x0
rsp : 0x7fffffffffefe50
0x7dada9:	test	rax, rax
0x7dadac:	mov	r9d, dword ptr [rsp + 0x1c]
0x7dadb1:	je	0x7dae00

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7dae00
stashes  [<SimState @ 0x7dae00>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x44
rip : 0x7dae00
rsi : 0x0
rsp : 0x7fffffffffefe50
0x7dae00:	mov	dword ptr [rbx + 0x28], 1
0x7dae07:	mov	rdx, qword ptr [rbx + 0x20]
0x7dae0b:	jmp	0x7da976

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7da976
stashes  [<SimState @ 0x7da976>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x44
rip : 0x7da976
rsi : 0x0
rsp : 0x7fffffffffefe50
0x7da976:	mov	dword ptr [rbx + 0x18], 1
0x7da97d:	movzx	eax, byte ptr [rbp]
0x7da981:	cmp	al, 0x3a
0x7da983:	mov	eax, 0
0x7da988:	cmove	r13d, eax
0x7da98c:	test	rdx, rdx
0x7da98f:	je	0x7daa58

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7daa58
stashes  [<SimState @ 0x7daa58>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x44
rip : 0x7daa58
rsi : 0x0
rsp : 0x7fffffffffefe50
0x7daa58:	mov	eax, dword ptr [rbx]
0x7daa5a:	cmp	dword ptr [rbx + 0x30], eax
0x7daa5d:	jle	0x7daa62

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7daa62
stashes  [<SimState @ 0x7daa62>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x44
rip : 0x7daa62
rsi : 0x0
rsp : 0x7fffffffffefe50
0x7daa62:	cmp	eax, dword ptr [rbx + 0x2c]
0x7daa65:	jge	0x7daa6a

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7daa6a
stashes  [<SimState @ 0x7daa6a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x44
rip : 0x7daa6a
rsi : 0x0
rsp : 0x7fffffffffefe50
0x7daa6a:	cmp	dword ptr [rbx + 0x28], 1
0x7daa6e:	je	0x7dab50

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7dab50
stashes  [<SimState @ 0x7dab50>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x0
rflags : 0x44
rip : 0x7dab50
rsi : 0x0
rsp : 0x7fffffffffefe50
0x7dab50:	mov	edx, dword ptr [rbx + 0x30]
0x7dab53:	cmp	dword ptr [rbx + 0x2c], edx
0x7dab56:	je	0x7dac38

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7dac38
stashes  [<SimState @ 0x7dac38>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x1
rflags : 0x44
rip : 0x7dac38
rsi : 0x0
rsp : 0x7fffffffffefe50
0x7dac38:	cmp	eax, edx
0x7dac3a:	je	0x7dab77

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7dab77
stashes  [<SimState @ 0x7dab77>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x1
rflags : 0x44
rip : 0x7dab77
rsi : 0x0
rsp : 0x7fffffffffefe50
0x7dab77:	cmp	r12d, edx
0x7dab7a:	jle	0x7dacd0

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7dab80
stashes  [<SimState @ 0x7dab80>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x0
rdi : 0x877914
rdx : 0x1
rflags : 0x0
rip : 0x7dab80
rsi : 0x0
rsp : 0x7fffffffffefe50
0x7dab80:	lea	ecx, [r12 - 1]
0x7dab85:	movsxd	rax, edx
0x7dab88:	mov	edi, ecx
0x7dab8a:	sub	edi, edx
0x7dab8c:	lea	rsi, [rax + rdi + 1]
0x7dab91:	jmp	0x7dabaa

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7dabaa
stashes  [<SimState @ 0x7dabaa>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x1
rdi : 0x0
rdx : 0x1
rflags : 0x44
rip : 0x7dabaa
rsi : 0x2
rsp : 0x7fffffffffefe50
0x7dabaa:	mov	rcx, qword ptr [r15 + rax*8]
0x7dabae:	mov	edx, eax
0x7dabb0:	cmp	byte ptr [rcx], 0x2d
0x7dabb3:	jne	0x7dab98

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7dab98
stashes  [<SimState @ 0x7dab98>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x7fffffffffeffb7
rdi : 0x0
rdx : 0x1
rflags : 0x0
rip : 0x7dab98
rsi : 0x2
rsp : 0x7fffffffffefe50
0x7dab98:	lea	edx, [rax + 1]
0x7dab9b:	add	rax, 1
0x7dab9f:	cmp	rsi, rax
0x7daba2:	mov	dword ptr [rbx], edx
0x7daba4:	je	0x7dacd0

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7dacd0
stashes  [<SimState @ 0x7dacd0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x7fffffffffeffb7
rdi : 0x0
rdx : 0x2
rflags : 0x44
rip : 0x7dacd0
rsi : 0x2
rsp : 0x7fffffffffefe50
0x7dacd0:	mov	eax, edx
0x7dacd2:	jmp	0x7dabbd

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7dabbd
stashes  [<SimState @ 0x7dabbd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x7fffffffffeffb7
rdi : 0x0
rdx : 0x2
rflags : 0x44
rip : 0x7dabbd
rsi : 0x2
rsp : 0x7fffffffffefe50
0x7dabbd:	mov	dword ptr [rbx + 0x30], edx
0x7dabc0:	jmp	0x7daa74

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7daa74
stashes  [<SimState @ 0x7daa74>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x7fffffffffeffb7
rdi : 0x0
rdx : 0x2
rflags : 0x44
rip : 0x7daa74
rsi : 0x2
rsp : 0x7fffffffffefe50
0x7daa74:	cmp	r12d, eax
0x7daa77:	je	0x7dab30

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7dab30
stashes  [<SimState @ 0x7dab30>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x7fffffffffeffb7
rdi : 0x0
rdx : 0x2
rflags : 0x44
rip : 0x7dab30
rsi : 0x2
rsp : 0x7fffffffffefe50
0x7dab30:	mov	r12d, dword ptr [rbx + 0x30]
0x7dab34:	mov	edx, dword ptr [rbx + 0x2c]
0x7dab37:	cmp	edx, r12d
0x7dab3a:	je	0x7daad3

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7dab3c
stashes  [<SimState @ 0x7dab3c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x7fffffffffeffb7
rdi : 0x0
rdx : 0x1
rflags : 0x95
rip : 0x7dab3c
rsi : 0x2
rsp : 0x7fffffffffefe50
0x7dab3c:	mov	dword ptr [rbx], edx
0x7dab3e:	mov	r14d, 0xffffffff
0x7dab44:	jmp	0x7daa07

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7daa07
stashes  [<SimState @ 0x7daa07>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x2
r12b : 0x2
r12d : 0x2
r12w : 0x2
r13 : 0x1
r13b : 0x1
r13d : 0x1
r13w : 0x1
r14 : 0xffffffff
r14b : 0xff
r14d : 0xffffffff
r14w : 0xffff
r15 : 0x7fffffffffeff50
r15b : 0x50
r15d : 0xfffeff50
r15w : 0xff50
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2
rbp : 0x406f9f
rbx : 0xab1000
rcx : 0x7fffffffffeffb7
rdi : 0x0
rdx : 0x1
rflags : 0x95
rip : 0x7daa07
rsi : 0x2
rsp : 0x7fffffffffefe50
0x7daa07:	add	rsp, 0x38
0x7daa0b:	mov	eax, r14d
0x7daa0e:	pop	rbx
0x7daa0f:	pop	rbp
0x7daa10:	pop	r12
0x7daa12:	pop	r13
0x7daa14:	pop	r14
0x7daa16:	pop	r15
0x7daa18:	ret	

0x7daee0 => 0x7da8f0(_getopt_internal_r)
0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7daf11
stashes  [<SimState @ 0x7daf11>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x2
rbx : 0x60a0b0
rcx : 0x7fffffffffeffb7
rdi : 0x0
rdx : 0x1
rflags : 0x4
rip : 0x7daf11
rsi : 0x2
rsp : 0x7fffffffffefec0
0x7daf11:	mov	edx, dword ptr [rip + 0x2d60e9]
0x7daf17:	mov	rcx, qword ptr [rip + 0x2d60f2]
0x7daf1e:	mov	dword ptr [rbx], edx
0x7daf20:	mov	rdx, qword ptr [rip + 0x2d2f49]
0x7daf27:	mov	qword ptr [rdx], rcx
0x7daf2a:	mov	rdx, qword ptr [rip + 0x2d3027]
0x7daf31:	mov	ecx, dword ptr [rip + 0x2d60d1]
0x7daf37:	mov	dword ptr [rdx], ecx
0x7daf39:	pop	rdx
0x7daf3a:	pop	rcx
0x7daf3b:	pop	rbx
0x7daf3c:	ret	

0x7daf80 => 0x7daee0(_getopt_internal)
0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x7daf8e
stashes  [<SimState @ 0x7daf8e>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x0
rdx : 0xab1000
rflags : 0x4
rip : 0x7daf8e
rsi : 0x2
rsp : 0x7fffffffffefee0
0x7daf8e:	add	rsp, 0x18
0x7daf92:	ret	

0x401e30 => 0x401b30(getopt_long)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x401e47
stashes  [<SimState @ 0x401e47>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x0
rdx : 0xab1000
rflags : 0x0
rip : 0x401e47
rsi : 0x2
rsp : 0x7fffffffffeff00
0x401e47:	cmp	eax, -1
0x401e4a:	je	0x401f5c

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x401f5c
stashes  [<SimState @ 0x401f5c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x0
rdx : 0xab1000
rflags : 0x44
rip : 0x401f5c
rsi : 0x2
rsp : 0x7fffffffffeff00
0x401f5c:	movsxd	rax, dword ptr [rip + 0x20814d]
0x401f63:	movzx	ecx, byte ptr [rip + 0x2081bd]
0x401f6a:	sub	ebp, eax
0x401f6c:	movsxd	rbp, ebp
0x401f6f:	test	rbp, rbp
0x401f72:	je	0x401f7c

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x401f74
stashes  [<SimState @ 0x401f74>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x1
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x0
rdx : 0xab1000
rflags : 0x0
rip : 0x401f74
rsi : 0x2
rsp : 0x7fffffffffeff00
0x401f74:	test	cl, cl
0x401f76:	jne	0x40242c

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x401f7c
stashes  [<SimState @ 0x401f7c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x609a40
r13b : 0x40
r13d : 0x609a40
r13w : 0x9a40
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x1
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x0
rdx : 0xab1000
rflags : 0x44
rip : 0x401f7c
rsi : 0x2
rsp : 0x7fffffffffeff00
0x401f7c:	movzx	r8d, byte ptr [rip + 0x2081a0]
0x401f84:	movzx	edx, byte ptr [rip + 0x208197]
0x401f8b:	movzx	edi, byte ptr [rip + 0x208193]
0x401f92:	mov	r13d, edx
0x401f95:	mov	esi, r8d
0x401f98:	add	edx, r8d
0x401f9b:	movzx	r8d, dil
0x401f9f:	add	edx, r8d
0x401fa2:	movzx	r8d, cl
0x401fa6:	add	edx, r8d
0x401fa9:	sub	edx, 1
0x401fac:	jg	0x402408

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x401fb2
stashes  [<SimState @ 0x401fb2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x1
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x0
rdx : 0xffffffff
rflags : 0x95
rip : 0x401fb2
rsi : 0x0
rsp : 0x7fffffffffeff00
0x401fb2:	mov	edx, r13d
0x401fb5:	or	edx, ecx
0x401fb7:	or	dl, sil
0x401fba:	jne	0x401fc1

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x401fbc
stashes  [<SimState @ 0x401fbc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x1
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x0
rdx : 0x0
rflags : 0x44
rip : 0x401fbc
rsi : 0x0
rsp : 0x7fffffffffeff00
0x401fbc:	test	dil, dil
0x401fbf:	je	0x40203a

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x40203a
stashes  [<SimState @ 0x40203a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x1
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x0
rdx : 0x0
rflags : 0x44
rip : 0x40203a
rsi : 0x0
rsp : 0x7fffffffffeff00
0x40203a:	cmp	byte ptr [rip + 0x2080e2], 0
0x402041:	jne	0x4023c0

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x402047
stashes  [<SimState @ 0x402047>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x1
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x0
rdx : 0x0
rflags : 0x44
rip : 0x402047
rsi : 0x0
rsp : 0x7fffffffffeff00
0x402047:	cmp	byte ptr [rip + 0x2080d2], 0
0x40204e:	jne	0x4023c0

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x402054
stashes  [<SimState @ 0x402054>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x1
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x0
rdx : 0x0
rflags : 0x44
rip : 0x402054
rsi : 0x0
rsp : 0x7fffffffffeff00
0x402054:	cmp	byte ptr [rip + 0x2080cb], 0
0x40205b:	mov	edx, 1
0x402060:	je	0x401fc3

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x401fc3
stashes  [<SimState @ 0x401fc3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x1
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x0
rdx : 0x1
rflags : 0x44
rip : 0x401fc3
rsi : 0x0
rsp : 0x7fffffffffeff00
0x401fc3:	test	rbp, rbp
0x401fc6:	jne	0x40208a

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x40208a
stashes  [<SimState @ 0x40208a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x1
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x0
rdx : 0x1
rflags : 0x0
rip : 0x40208a
rsi : 0x0
rsp : 0x7fffffffffeff00
0x40208a:	cmp	rbp, 1
0x40208e:	movsxd	rdx, eax
0x402091:	lea	r12, [rip + 0x208080]
0x402098:	seta	byte ptr [rip + 0x208082]
0x40209f:	add	rbp, rdx
0x4020a2:	jmp	0x4020f8

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:12 active states =  1 rip =  0x4020f8
stashes  [<SimState @ 0x4020f8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60a118
r12b : 0x18
r12d : 0x60a118
r12w : 0xa118
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x0
rdx : 0x1
rflags : 0x0
rip : 0x4020f8
rsi : 0x0
rsp : 0x7fffffffffeff00
0x4020f8:	movsxd	rdx, eax
0x4020fb:	cmp	rdx, rbp
0x4020fe:	jae	0x402024

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x402104
stashes  [<SimState @ 0x402104>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60a118
r12b : 0x18
r12d : 0x60a118
r12w : 0xa118
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x0
rdx : 0x1
rflags : 0x95
rip : 0x402104
rsi : 0x0
rsp : 0x7fffffffffeff00
0x402104:	mov	rdi, qword ptr [rbx + rdx*8]
0x402108:	cmp	byte ptr [rdi], 0
0x40210b:	je	0x4020ab

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x40210d
stashes  [<SimState @ 0x40210d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60a118
r12b : 0x18
r12d : 0x60a118
r12w : 0xa118
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x7fffffffffeffb7
rdx : 0x1
rflags : 0x0
rip : 0x40210d
rsi : 0x0
rsp : 0x7fffffffffeff00
0x40210d:	xor	r8d, r8d
0x402110:	xor	ecx, ecx
0x402112:	xor	edx, edx
0x402114:	mov	rsi, r12
0x402117:	call	0x4053c0

0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x4053c0
stashes  [<SimState @ 0x4053c0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60a118
r12b : 0x18
r12d : 0x60a118
r12w : 0xa118
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x7fffffffffeffb7
rdx : 0x0
rflags : 0x44
rip : 0x4053c0
rsi : 0x60a118
rsp : 0x7fffffffffefef8
0x4053c0:	test	rdx, rdx
0x4053c3:	je	0x405470

0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x405470
stashes  [<SimState @ 0x405470>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60a118
r12b : 0x18
r12d : 0x60a118
r12w : 0xa118
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x7fffffffffeffb7
rdx : 0x0
rflags : 0x44
rip : 0x405470
rsi : 0x60a118
rsp : 0x7fffffffffefef8
0x405470:	mov	r9, r8
0x405473:	mov	rdx, rsi
0x405476:	mov	r8, rcx
0x405479:	xor	esi, esi
0x40547b:	xor	ecx, ecx
0x40547d:	jmp	0x404ff0

0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x404ff0
stashes  [<SimState @ 0x404ff0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x60a118
r12b : 0x18
r12d : 0x60a118
r12w : 0xa118
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x7fffffffffeffb7
rdx : 0x60a118
rflags : 0x44
rip : 0x404ff0
rsi : 0x0
rsp : 0x7fffffffffefef8
0x404ff0:	push	r15
0x404ff2:	push	r14
0x404ff4:	mov	r10, rsi
0x404ff7:	push	r13
0x404ff9:	push	r12
0x404ffb:	mov	r12, rcx
0x404ffe:	push	rbp
0x404fff:	push	rbx
0x405000:	mov	r13, r8
0x405003:	mov	r14, r9
0x405006:	mov	r15d, 0xffffffff
0x40500c:	sub	rsp, 0x58
0x405010:	mov	eax, dword ptr [rdx]
0x405012:	mov	rcx, qword ptr fs:[0x28]
0x40501b:	mov	qword ptr [rsp + 0x48], rcx
0x405020:	xor	ecx, ecx
0x405022:	test	r12, r12
0x405025:	mov	qword ptr [rsp + 0x10], rdx
0x40502a:	mov	dword ptr [rsp + 0x18], eax
0x40502e:	je	0x405034

0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x405034
stashes  [<SimState @ 0x405034>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x7fffffffffeffb7
rdx : 0x60a118
rflags : 0x44
rip : 0x405034
rsi : 0x0
rsp : 0x7fffffffffefe70
0x405034:	test	r13, r13
0x405037:	je	0x405041

0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x405041
stashes  [<SimState @ 0x405041>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x7fffffffffeffb7
rdx : 0x60a118
rflags : 0x44
rip : 0x405041
rsi : 0x0
rsp : 0x7fffffffffefe70
0x405041:	test	r14, r14
0x405044:	je	0x40504d

0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x40504d
stashes  [<SimState @ 0x40504d>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x7fffffffffeffb7
rdx : 0x60a118
rflags : 0x44
rip : 0x40504d
rsi : 0x0
rsp : 0x7fffffffffefe70
0x40504d:	test	r10, r10
0x405050:	je	0x4051e8

0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x4051e8
stashes  [<SimState @ 0x4051e8>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeff50
rcx : 0x0
rdi : 0x7fffffffffeffb7
rdx : 0x60a118
rflags : 0x44
rip : 0x4051e8
rsi : 0x0
rsp : 0x7fffffffffefe70
0x4051e8:	xor	ebx, ebx
0x4051ea:	cmp	byte ptr [rdi], 0
0x4051ed:	je	0x4050cc

0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x4051f3
stashes  [<SimState @ 0x4051f3>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x0
rcx : 0x0
rdi : 0x7fffffffffeffb7
rdx : 0x60a118
rflags : 0x0
rip : 0x4051f3
rsi : 0x0
rsp : 0x7fffffffffefe70
0x4051f3:	mov	qword ptr [rsp], r10
0x4051f7:	call	0x405d10

0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x405d10
stashes  [<SimState @ 0x405d10>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x0
rcx : 0x0
rdi : 0x7fffffffffeffb7
rdx : 0x60a118
rflags : 0x0
rip : 0x405d10
rsi : 0x0
rsp : 0x7fffffffffefe68
0x405d10:	push	rbx
0x405d11:	mov	rbx, rdi
0x405d14:	call	0x401b00

0x4051f3 => 0x405d10(xstrdup)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x401b00
stashes  [<SimState @ 0x401b00>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeffb7
rcx : 0x0
rdi : 0x7fffffffffeffb7
rdx : 0x60a118
rflags : 0x0
rip : 0x401b00
rsi : 0x0
rsp : 0x7fffffffffefe58
0x401b00:	jmp	qword ptr [rip + 0x208372]

0x405d10 => 0x401b00(strlen)
0x4051f3 => 0x405d10(xstrdup)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x2
rbx : 0x7fffffffffeffb7
rcx : 0x0
rdi : 0x7fffffffffeffb7
rdx : 0x60a118
rflags : 0x0
rip : 0x784030
rsi : 0x0
rsp : 0x7fffffffffefe58
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x405d10 => 0x401b00(strlen)
0x4051f3 => 0x405d10(xstrdup)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x405d19
stashes  [<SimState @ 0x405d19>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x13
rbp : 0x2
rbx : 0x7fffffffffeffb7
rcx : 0x0
rdi : 0x7fffffffffeffb7
rdx : 0x60a118
rflags : 0x0
rip : 0x405d19
rsi : 0x0
rsp : 0x7fffffffffefe60
0x405d19:	mov	rdi, rbx
0x405d1c:	lea	rsi, [rax + 1]
0x405d20:	pop	rbx
0x405d21:	jmp	0x405ce0

0x4051f3 => 0x405d10(xstrdup)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x405ce0
stashes  [<SimState @ 0x405ce0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x13
rbp : 0x2
rbx : 0x0
rcx : 0x0
rdi : 0x7fffffffffeffb7
rdx : 0x60a118
rflags : 0x0
rip : 0x405ce0
rsi : 0x14
rsp : 0x7fffffffffefe68
0x405ce0:	push	rbp
0x405ce1:	push	rbx
0x405ce2:	mov	rbp, rdi
0x405ce5:	mov	rdi, rsi
0x405ce8:	mov	rbx, rsi
0x405ceb:	sub	rsp, 8
0x405cef:	call	0x405af0

0x4051f3 => 0x405d10(xstrdup)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x405af0
stashes  [<SimState @ 0x405af0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x13
rbp : 0x7fffffffffeffb7
rbx : 0x14
rcx : 0x0
rdi : 0x14
rdx : 0x60a118
rflags : 0x4
rip : 0x405af0
rsi : 0x14
rsp : 0x7fffffffffefe48
0x405af0:	push	rbx
0x405af1:	mov	rbx, rdi
0x405af4:	call	0x401c80

0x405ce0 => 0x405af0(xmalloc)
0x4051f3 => 0x405d10(xstrdup)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x401c80
stashes  [<SimState @ 0x401c80>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x13
rbp : 0x7fffffffffeffb7
rbx : 0x14
rcx : 0x0
rdi : 0x14
rdx : 0x60a118
rflags : 0x4
rip : 0x401c80
rsi : 0x14
rsp : 0x7fffffffffefe38
0x401c80:	jmp	qword ptr [rip + 0x2082b2]

0x405af0 => 0x401c80(malloc)
0x405ce0 => 0x405af0(xmalloc)
0x4051f3 => 0x405d10(xstrdup)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x780580
stashes  [<SimState @ 0x780580>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x13
rbp : 0x7fffffffffeffb7
rbx : 0x14
rcx : 0x0
rdi : 0x14
rdx : 0x60a118
rflags : 0x4
rip : 0x780580
rsi : 0x14
rsp : 0x7fffffffffefe38
0x780580:	push	rbp
0x780581:	push	rbx
0x780582:	sub	rsp, 0x18
0x780586:	mov	rax, qword ptr [rip + 0x32d953]
0x78058d:	mov	rax, qword ptr [rax]
0x780590:	test	rax, rax
0x780593:	jne	0x780720

0x405af0 => 0x401c80(malloc)
0x405ce0 => 0x405af0(xmalloc)
0x4051f3 => 0x405d10(xstrdup)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x405af9
stashes  [<SimState @ 0x405af9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000022
rbp : 0x7fffffffffeffb7
rbx : 0x14
rcx : 0x0
rdi : 0x14
rdx : 0x60a118
rflags : 0x4
rip : 0x405af9
rsi : 0x14
rsp : 0x7fffffffffefe40
0x405af9:	test	rax, rax
0x405afc:	jne	0x405b03

0x405ce0 => 0x405af0(xmalloc)
0x4051f3 => 0x405d10(xstrdup)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x405b03
stashes  [<SimState @ 0x405b03>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000022
rbp : 0x7fffffffffeffb7
rbx : 0x14
rcx : 0x0
rdi : 0x14
rdx : 0x60a118
rflags : 0x4
rip : 0x405b03
rsi : 0x14
rsp : 0x7fffffffffefe40
0x405b03:	pop	rbx
0x405b04:	ret	

0x405ce0 => 0x405af0(xmalloc)
0x4051f3 => 0x405d10(xstrdup)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x405cf4
stashes  [<SimState @ 0x405cf4>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000022
rbp : 0x7fffffffffeffb7
rbx : 0x14
rcx : 0x0
rdi : 0x14
rdx : 0x60a118
rflags : 0x4
rip : 0x405cf4
rsi : 0x14
rsp : 0x7fffffffffefe50
0x405cf4:	add	rsp, 8
0x405cf8:	mov	rdx, rbx
0x405cfb:	mov	rsi, rbp
0x405cfe:	pop	rbx
0x405cff:	pop	rbp
0x405d00:	mov	rdi, rax
0x405d03:	jmp	0x401c30

0x4051f3 => 0x405d10(xstrdup)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x401c30
stashes  [<SimState @ 0x401c30>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000022
rbp : 0x2
rbx : 0x0
rcx : 0x0
rdi : 0xc0000022
rdx : 0x14
rflags : 0x0
rip : 0x401c30
rsi : 0x7fffffffffeffb7
rsp : 0x7fffffffffefe68
0x401c30:	jmp	qword ptr [rip + 0x2082da]

0x4051f3 => 0x405d10(xstrdup)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x1a00000
stashes  [<SimState @ 0x1a00000>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000022
rbp : 0x2
rbx : 0x0
rcx : 0x0
rdi : 0xc0000022
rdx : 0x14
rflags : 0x0
rip : 0x1a00000
rsi : 0x7fffffffffeffb7
rsp : 0x7fffffffffefe68


0x4051f3 => 0x405d10(xstrdup)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x4051fc
stashes  [<SimState @ 0x4051fc>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000022
rbp : 0x2
rbx : 0x0
rcx : 0x0
rdi : 0xc0000022
rdx : 0x14
rflags : 0x0
rip : 0x4051fc
rsi : 0x7fffffffffeffb7
rsp : 0x7fffffffffefe70
0x4051fc:	mov	r10, qword ptr [rsp]
0x405200:	mov	rbp, rax
0x405203:	jmp	0x405153

0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x405153
stashes  [<SimState @ 0x405153>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000022
rbp : 0xc0000022
rbx : 0x0
rcx : 0x0
rdi : 0xc0000022
rdx : 0x14
rflags : 0x0
rip : 0x405153
rsi : 0x7fffffffffeffb7
rsp : 0x7fffffffffefe70
0x405153:	test	rbp, rbp
0x405156:	je	0x405278

0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x40515c
stashes  [<SimState @ 0x40515c>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000022
rbp : 0xc0000022
rbx : 0x0
rcx : 0x0
rdi : 0xc0000022
rdx : 0x14
rflags : 0x4
rip : 0x40515c
rsi : 0x7fffffffffeffb7
rsp : 0x7fffffffffefe70
0x40515c:	mov	byte ptr [rsp + 0x1e], 0
0x405161:	mov	eax, 1
0x405166:	mov	qword ptr [rsp + 8], 0
0x40516f:	test	r10, r10
0x405172:	setne	r9b
0x405176:	and	r9d, eax
0x405179:	cmp	byte ptr [rbp], 0x2b
0x40517d:	je	0x4051c0

0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x40517f
stashes  [<SimState @ 0x40517f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0xc0000022
rbx : 0x0
rcx : 0x0
rdi : 0xc0000022
rdx : 0x14
rflags : 0x0
rip : 0x40517f
rsi : 0x7fffffffffeffb7
rsp : 0x7fffffffffefe70
0x40517f:	mov	rdi, rbp
0x405182:	mov	byte ptr [rsp], r9b
0x405186:	call	0x401c20

0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x401c20
stashes  [<SimState @ 0x401c20>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0xc0000022
rbx : 0x0
rcx : 0x0
rdi : 0xc0000022
rdx : 0x14
rflags : 0x0
rip : 0x401c20
rsi : 0x7fffffffffeffb7
rsp : 0x7fffffffffefe68
0x401c20:	jmp	qword ptr [rip + 0x2082e2]

0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7c01a0
stashes  [<SimState @ 0x7c01a0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x1
rbp : 0xc0000022
rbx : 0x0
rcx : 0x0
rdi : 0xc0000022
rdx : 0x14
rflags : 0x0
rip : 0x7c01a0
rsi : 0x7fffffffffeffb7
rsp : 0x7fffffffffefe68
0x7c01a0:	push	r14
0x7c01a2:	push	r13
0x7c01a4:	mov	esi, 1
0x7c01a9:	push	r12
0x7c01ab:	push	rbp
0x7c01ac:	mov	r12, rdi
0x7c01af:	push	rbx
0x7c01b0:	xor	eax, eax
0x7c01b2:	sub	rsp, 0x10
0x7c01b6:	cmp	dword ptr [rip + 0x2f373b], 0
0x7c01bd:	je	0x7c01cb

0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7c01cb
stashes  [<SimState @ 0x7c01cb>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xc0000022
r12b : 0x22
r12d : 0xc0000022
r12w : 0x22
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xc0000022
rbx : 0x0
rcx : 0x0
rdi : 0xc0000022
rdx : 0x14
rflags : 0x44
rip : 0x7c01cb
rsi : 0x1
rsp : 0x7fffffffffefe30
0x7c01cb:	cmpxchg	dword ptr [rip + 0x2f0d46], esi
0x7c01d2:	je	0x7c01ee

0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7c01ee
stashes  [<SimState @ 0x7c01ee>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xc0000022
r12b : 0x22
r12d : 0xc0000022
r12w : 0x22
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xc0000022
rbx : 0x0
rcx : 0x0
rdi : 0xc0000022
rdx : 0x14
rflags : 0x44
rip : 0x7c01ee
rsi : 0x1
rsp : 0x7fffffffffefe30
0x7c01ee:	mov	rdx, qword ptr [rip + 0x2ef6cb]
0x7c01f5:	mov	rbx, qword ptr [rip + 0x2f0d14]
0x7c01fc:	test	rdx, rdx
0x7c01ff:	je	0x7c02f0

0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7c02f0
stashes  [<SimState @ 0x7c02f0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xc0000022
r12b : 0x22
r12d : 0xc0000022
r12w : 0x22
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xc0000022
rbx : 0x0
rcx : 0x0
rdi : 0xc0000022
rdx : 0x0
rflags : 0x44
rip : 0x7c02f0
rsi : 0x1
rsp : 0x7fffffffffefe30
0x7c02f0:	mov	edi, 0x400
0x7c02f5:	mov	qword ptr [rip + 0x2f0c10], 0x400
0x7c0300:	mov	ebx, 0x400
0x7c0305:	call	0x7212c0

0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7212c0
stashes  [<SimState @ 0x7212c0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xc0000022
r12b : 0x22
r12d : 0xc0000022
r12w : 0x22
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xc0000022
rbx : 0x400
rcx : 0x0
rdi : 0x400
rdx : 0x0
rflags : 0x44
rip : 0x7212c0
rsi : 0x1
rsp : 0x7fffffffffefe28
0x7212c0:	jmp	qword ptr [rip + 0x38cb6a]

0x7c02f0 => 0x7212c0(malloc)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x780580
stashes  [<SimState @ 0x780580>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xc0000022
r12b : 0x22
r12d : 0xc0000022
r12w : 0x22
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xc0000022
rbx : 0x400
rcx : 0x0
rdi : 0x400
rdx : 0x0
rflags : 0x44
rip : 0x780580
rsi : 0x1
rsp : 0x7fffffffffefe28
0x780580:	push	rbp
0x780581:	push	rbx
0x780582:	sub	rsp, 0x18
0x780586:	mov	rax, qword ptr [rip + 0x32d953]
0x78058d:	mov	rax, qword ptr [rax]
0x780590:	test	rax, rax
0x780593:	jne	0x780720

0x7c02f0 => 0x7212c0(malloc)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7c030a
stashes  [<SimState @ 0x7c030a>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xc0000022
r12b : 0x22
r12d : 0xc0000022
r12w : 0x22
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000036
rbp : 0xc0000022
rbx : 0x400
rcx : 0x0
rdi : 0x400
rdx : 0x0
rflags : 0x44
rip : 0x7c030a
rsi : 0x1
rsp : 0x7fffffffffefe30
0x7c030a:	test	rax, rax
0x7c030d:	mov	rdx, rax
0x7c0310:	mov	qword ptr [rip + 0x2ef5a9], rax
0x7c0317:	jne	0x7c0205

0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7c0205
stashes  [<SimState @ 0x7c0205>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xc0000022
r12b : 0x22
r12d : 0xc0000022
r12w : 0x22
r13 : 0x0
r13b : 0x0
r13d : 0x0
r13w : 0x0
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000036
rbp : 0xc0000022
rbx : 0x400
rcx : 0x0
rdi : 0x400
rdx : 0xc0000036
rflags : 0x4
rip : 0x7c0205
rsi : 0x1
rsp : 0x7fffffffffefe30
0x7c0205:	lea	r14, [rsp + 8]
0x7c020a:	lea	r13, [rip + 0x2f0ccf]
0x7c0211:	jmp	0x7c021f

0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7c021f
stashes  [<SimState @ 0x7c021f>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xc0000022
r12b : 0x22
r12d : 0xc0000022
r12w : 0x22
r13 : 0xab0ee0
r13b : 0xe0
r13d : 0xab0ee0
r13w : 0xee0
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000036
rbp : 0xc0000022
rbx : 0x400
rcx : 0x0
rdi : 0x400
rdx : 0xc0000036
rflags : 0x4
rip : 0x7c021f
rsi : 0x1
rsp : 0x7fffffffffefe30
0x7c021f:	mov	r8, r14
0x7c0222:	mov	rcx, rbx
0x7c0225:	mov	rsi, r13
0x7c0228:	mov	rdi, r12
0x7c022b:	call	0x7c0730

0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7c0730
stashes  [<SimState @ 0x7c0730>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xc0000022
r12b : 0x22
r12d : 0xc0000022
r12w : 0x22
r13 : 0xab0ee0
r13b : 0xe0
r13d : 0xab0ee0
r13w : 0xee0
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x7fffffffffefe38
r8b : 0x38
r8d : 0xfffefe38
r8w : 0xfe38
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000036
rbp : 0xc0000022
rbx : 0x400
rcx : 0x400
rdi : 0xc0000022
rdx : 0xc0000036
rflags : 0x4
rip : 0x7c0730
rsi : 0xab0ee0
rsp : 0x7fffffffffefe28
0x7c0730:	push	r15
0x7c0732:	push	r14
0x7c0734:	push	r13
0x7c0736:	push	r12
0x7c0738:	mov	r13, rsi
0x7c073b:	push	rbp
0x7c073c:	push	rbx
0x7c073d:	mov	r12, rcx
0x7c0740:	sub	rsp, 0x58
0x7c0744:	mov	eax, dword ptr [rip + 0x2f3326]
0x7c074a:	mov	qword ptr [rsp + 8], rdi
0x7c074f:	mov	qword ptr [rsp + 0x10], rdx
0x7c0754:	mov	qword ptr [rsp + 0x38], r8
0x7c0759:	cmp	eax, 0
0x7c075c:	jle	0x7c09d0

0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7c09d0
stashes  [<SimState @ 0x7c09d0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x400
r12b : 0x0
r12d : 0x400
r12w : 0x400
r13 : 0xab0ee0
r13b : 0xe0
r13d : 0xab0ee0
r13w : 0xee0
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x7fffffffffefe38
r8b : 0x38
r8d : 0xfffefe38
r8w : 0xfe38
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xc0000022
rbx : 0x400
rcx : 0x400
rdi : 0xc0000022
rdx : 0xc0000036
rflags : 0x44
rip : 0x7c09d0
rsi : 0xab0ee0
rsp : 0x7fffffffffefda0
0x7c09d0:	je	0x7c08ba

0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7c08ba
stashes  [<SimState @ 0x7c08ba>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x400
r12b : 0x0
r12d : 0x400
r12w : 0x400
r13 : 0xab0ee0
r13b : 0xe0
r13d : 0xab0ee0
r13w : 0xee0
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x7fffffffffefe38
r8b : 0x38
r8d : 0xfffefe38
r8w : 0xfe38
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xc0000022
rbx : 0x400
rcx : 0x400
rdi : 0xc0000022
rdx : 0xc0000036
rflags : 0x44
rip : 0x7c08ba
rsi : 0xab0ee0
rsp : 0x7fffffffffefda0
0x7c08ba:	cmp	byte ptr [rip + 0x2f30af], 0
0x7c08c1:	jne	0x7c0774

0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7c08c7
stashes  [<SimState @ 0x7c08c7>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x400
r12b : 0x0
r12d : 0x400
r12w : 0x400
r13 : 0xab0ee0
r13b : 0xe0
r13d : 0xab0ee0
r13w : 0xee0
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x7fffffffffefe38
r8b : 0x38
r8d : 0xfffefe38
r8w : 0xfe38
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xc0000022
rbx : 0x400
rcx : 0x400
rdi : 0xc0000022
rdx : 0xc0000036
rflags : 0x44
rip : 0x7c08c7
rsi : 0xab0ee0
rsp : 0x7fffffffffefda0
0x7c08c7:	mov	r8, qword ptr [rsp + 0x38]
0x7c08cc:	mov	rdx, qword ptr [rsp + 0x10]
0x7c08d1:	mov	rcx, r12
0x7c08d4:	mov	rdi, qword ptr [rsp + 8]
0x7c08d9:	mov	rsi, r13
0x7c08dc:	call	0x8248c0

0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x8248c0
stashes  [<SimState @ 0x8248c0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x400
r12b : 0x0
r12d : 0x400
r12w : 0x400
r13 : 0xab0ee0
r13b : 0xe0
r13d : 0xab0ee0
r13w : 0xee0
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x7fffffffffefe38
r8b : 0x38
r8d : 0xfffefe38
r8w : 0xfe38
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xc0000022
rbx : 0x400
rcx : 0x400
rdi : 0xc0000022
rdx : 0xc0000036
rflags : 0x44
rip : 0x8248c0
rsi : 0xab0ee0
rsp : 0x7fffffffffefd98
0x8248c0:	test	rdi, rdi
0x8248c3:	je	0x824910

0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x8248c5
stashes  [<SimState @ 0x8248c5>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x400
r12b : 0x0
r12d : 0x400
r12w : 0x400
r13 : 0xab0ee0
r13b : 0xe0
r13d : 0xab0ee0
r13w : 0xee0
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x7fffffffffefe38
r8b : 0x38
r8d : 0xfffefe38
r8w : 0xfe38
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xc0000022
rbx : 0x400
rcx : 0x400
rdi : 0xc0000022
rdx : 0xc0000036
rflags : 0x4
rip : 0x8248c5
rsi : 0xab0ee0
rsp : 0x7fffffffffefd98
0x8248c5:	push	r14
0x8248c7:	push	r13
0x8248c9:	mov	r14, r8
0x8248cc:	push	r12
0x8248ce:	push	rbp
0x8248cf:	mov	r13, rcx
0x8248d2:	push	rbx
0x8248d3:	mov	r12, rdx
0x8248d6:	mov	rbp, rsi
0x8248d9:	mov	rbx, rdi
0x8248dc:	call	0x721100

0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xc0000036
r12b : 0x36
r12d : 0xc0000036
r12w : 0x36
r13 : 0x400
r13b : 0x0
r13d : 0x400
r13w : 0x400
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x7fffffffffefe38
r8b : 0x38
r8d : 0xfffefe38
r8w : 0xfe38
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xab0ee0
rbx : 0xc0000022
rcx : 0x400
rdi : 0xc0000022
rdx : 0xc0000036
rflags : 0x4
rip : 0x721100
rsi : 0xab0ee0
rsp : 0x7fffffffffefd68
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x8248c5 => 0x721100()
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xc0000036
r12b : 0x36
r12d : 0xc0000036
r12w : 0x36
r13 : 0x400
r13b : 0x0
r13d : 0x400
r13w : 0x400
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x7fffffffffefe38
r8b : 0x38
r8d : 0xfffefe38
r8w : 0xfe38
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xab0ee0
rbx : 0xc0000022
rcx : 0x400
rdi : 0xc0000022
rdx : 0xc0000036
rflags : 0x4
rip : 0x784030
rsi : 0xab0ee0
rsp : 0x7fffffffffefd68
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x8248c5 => 0x721100()
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x8248e1
stashes  [<SimState @ 0x8248e1>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xc0000036
r12b : 0x36
r12d : 0xc0000036
r12w : 0x36
r13 : 0x400
r13b : 0x0
r13d : 0x400
r13w : 0x400
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x7fffffffffefe38
r8b : 0x38
r8d : 0xfffefe38
r8w : 0xfe38
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x13
rbp : 0xab0ee0
rbx : 0xc0000022
rcx : 0x400
rdi : 0xc0000022
rdx : 0xc0000036
rflags : 0x4
rip : 0x8248e1
rsi : 0xab0ee0
rsp : 0x7fffffffffefd70
0x8248e1:	sub	rsp, 8
0x8248e5:	lea	rsi, [rax + 1]
0x8248e9:	mov	rcx, rbp
0x8248ec:	push	r14
0x8248ee:	mov	r9, r13
0x8248f1:	mov	r8, r12
0x8248f4:	xor	edx, edx
0x8248f6:	mov	rdi, rbx
0x8248f9:	call	0x824530

0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x824530
stashes  [<SimState @ 0x824530>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xc0000036
r12b : 0x36
r12d : 0xc0000036
r12w : 0x36
r13 : 0x400
r13b : 0x0
r13d : 0x400
r13w : 0x400
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0xc0000036
r8b : 0x36
r8d : 0xc0000036
r8w : 0x36
r9 : 0x400
r9b : 0x0
r9d : 0x400
r9w : 0x400
rax : 0x13
rbp : 0xab0ee0
rbx : 0xc0000022
rcx : 0xab0ee0
rdi : 0xc0000022
rdx : 0x0
rflags : 0x44
rip : 0x824530
rsi : 0x14
rsp : 0x7fffffffffefd58
0x824530:	push	r15
0x824532:	push	r14
0x824534:	mov	r14, rcx
0x824537:	push	r13
0x824539:	push	r12
0x82453b:	mov	r15, rdi
0x82453e:	push	rbp
0x82453f:	push	rbx
0x824540:	mov	edi, 0xb
0x824545:	xor	r12d, r12d
0x824548:	sub	rsp, 0x98
0x82454f:	mov	qword ptr [rsp], rsi
0x824553:	mov	dword ptr [rsp + 0xc], edx
0x824557:	lea	rcx, [rsp + 0x5c]
0x82455c:	lea	rdx, [rip + 0x28eced]
0x824563:	lea	rsi, [rip + 0x54f0e]
0x82456a:	mov	qword ptr [rsp + 0x18], r8
0x82456f:	mov	qword ptr [rsp + 0x20], r9
0x824574:	call	0x827bc0

0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x827bc0
stashes  [<SimState @ 0x827bc0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x400
r13b : 0x0
r13d : 0x400
r13w : 0x400
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0xc0000036
r8b : 0x36
r8d : 0xc0000036
r8w : 0x36
r9 : 0x400
r9b : 0x0
r9d : 0x400
r9w : 0x400
rax : 0x13
rbp : 0xab0ee0
rbx : 0xc0000022
rcx : 0x7fffffffffefcec
rdi : 0xb
rdx : 0xab3250
rflags : 0x4
rip : 0x827bc0
rsi : 0x879478
rsp : 0x7fffffffffefc88
0x827bc0:	push	r14
0x827bc2:	push	r13
0x827bc4:	push	r12
0x827bc6:	push	rbp
0x827bc7:	push	rbx
0x827bc8:	sub	rsp, 0x10
0x827bcc:	mov	rax, qword ptr [rdx + 8]
0x827bd0:	cmp	rax, -1
0x827bd4:	je	0x827c70

0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x827bda
stashes  [<SimState @ 0x827bda>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x0
r10b : 0x0
r10d : 0x0
r10w : 0x0
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x400
r13b : 0x0
r13d : 0x400
r13w : 0x400
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0xc0000036
r8b : 0x36
r8d : 0xc0000036
r8w : 0x36
r9 : 0x400
r9b : 0x0
r9d : 0x400
r9w : 0x400
rax : 0x0
rbp : 0xab0ee0
rbx : 0xc0000022
rcx : 0x7fffffffffefcec
rdi : 0xb
rdx : 0xab3250
rflags : 0x11
rip : 0x827bda
rsi : 0x879478
rsp : 0x7fffffffffefc50
0x827bda:	mov	r10d, 6
0x827be0:	xor	r9d, r9d
0x827be3:	mov	r8d, 1
0x827be9:	mov	eax, r9d
0x827bec:	lock cmpxchg	dword ptr [rdx], r8d
0x827bf1:	test	eax, eax
0x827bf3:	jne	0x827cd0

0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x827bf9
stashes  [<SimState @ 0x827bf9>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x400
r13b : 0x0
r13d : 0x400
r13w : 0x400
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xab0ee0
rbx : 0xc0000022
rcx : 0x7fffffffffefcec
rdi : 0xb
rdx : 0xab3250
rflags : 0x44
rip : 0x827bf9
rsi : 0x879478
rsp : 0x7fffffffffefc50
0x827bf9:	mov	rbx, qword ptr [rdx + 8]
0x827bfd:	mov	r12, rcx
0x827c00:	mov	rbp, rdx
0x827c03:	mov	r13d, edi
0x827c06:	cmp	rbx, -1
0x827c0a:	je	0x827cc0

0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x827c10
stashes  [<SimState @ 0x827c10>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcec
r12b : 0xec
r12d : 0xfffefcec
r12w : 0xfcec
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xab3250
rbx : 0x0
rcx : 0x7fffffffffefcec
rdi : 0xb
rdx : 0xab3250
rflags : 0x11
rip : 0x827c10
rsi : 0x879478
rsp : 0x7fffffffffefc50
0x827c10:	test	rbx, rbx
0x827c13:	je	0x827c29

0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x827c29
stashes  [<SimState @ 0x827c29>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcec
r12b : 0xec
r12d : 0xfffefcec
r12w : 0xfcec
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xab3250
rbx : 0x0
rcx : 0x7fffffffffefcec
rdi : 0xb
rdx : 0xab3250
rflags : 0x44
rip : 0x827c29
rsi : 0x879478
rsp : 0x7fffffffffefc50
0x827c29:	lea	rdx, [rbp + 8]
0x827c2d:	mov	edi, r13d
0x827c30:	call	0x827810

0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x827810
stashes  [<SimState @ 0x827810>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcec
r12b : 0xec
r12d : 0xfffefcec
r12w : 0xfcec
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0xab3250
rbx : 0x0
rcx : 0x7fffffffffefcec
rdi : 0xb
rdx : 0xab3258
rflags : 0x44
rip : 0x827810
rsi : 0x879478
rsp : 0x7fffffffffefc48
0x827810:	push	rbp
0x827811:	mov	rbp, rsp
0x827814:	push	r15
0x827816:	push	r14
0x827818:	push	r13
0x82781a:	push	r12
0x82781c:	mov	r13, rsi
0x82781f:	push	rbx
0x827820:	mov	ebx, edi
0x827822:	mov	rdi, rsi
0x827825:	mov	r15, rdx
0x827828:	sub	rsp, 0x158
0x82782f:	call	0x721100

0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x721100
stashes  [<SimState @ 0x721100>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcec
r12b : 0xec
r12d : 0xfffefcec
r12w : 0xfcec
r13 : 0x879478
r13b : 0x78
r13d : 0x879478
r13w : 0x9478
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xab3258
r15b : 0x58
r15d : 0xab3258
r15w : 0x3258
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefc40
rbx : 0xb
rcx : 0x7fffffffffefcec
rdi : 0x879478
rdx : 0xab3258
rflags : 0x4
rip : 0x721100
rsi : 0x879478
rsp : 0x7fffffffffefab8
0x721100:	jmp	qword ptr [rip + 0x38cfa2]

0x827810 => 0x721100()
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x784030
stashes  [<SimState @ 0x784030>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcec
r12b : 0xec
r12d : 0xfffefcec
r12w : 0xfcec
r13 : 0x879478
r13b : 0x78
r13d : 0x879478
r13w : 0x9478
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xab3258
r15b : 0x58
r15d : 0xab3258
r15w : 0x3258
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefc40
rbx : 0xb
rcx : 0x7fffffffffefcec
rdi : 0x879478
rdx : 0xab3258
rflags : 0x4
rip : 0x784030
rsi : 0x879478
rsp : 0x7fffffffffefab8
0x784030:	mov	rax, qword ptr [rip + 0x329e21]
0x784037:	lea	rdx, [rip + 0xce442]
0x78403e:	mov	eax, dword ptr [rax + 0xb4]
0x784044:	and	eax, 0x20c00
0x784049:	cmp	eax, 0xc00
0x78404e:	lea	rax, [rip + 0xfd8b]
0x784055:	cmove	rax, rdx
0x784059:	ret	

0x827810 => 0x721100()
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x827834
stashes  [<SimState @ 0x827834>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcec
r12b : 0xec
r12d : 0xfffefcec
r12w : 0xfcec
r13 : 0x879478
r13b : 0x78
r13d : 0x879478
r13w : 0x9478
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xab3258
r15b : 0x58
r15d : 0xab3258
r15w : 0x3258
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6
rbp : 0x7fffffffffefc40
rbx : 0xb
rcx : 0x7fffffffffefcec
rdi : 0x879478
rdx : 0xab3258
rflags : 0x4
rip : 0x827834
rsi : 0x879478
rsp : 0x7fffffffffefac0
0x827834:	mov	r12, qword ptr [rip + 0x28662d]
0x82783b:	lea	rcx, [rax + 1]
0x82783f:	mov	r14, rax
0x827842:	mov	rsi, r13
0x827845:	mov	edi, ebx
0x827847:	mov	rdx, rcx
0x82784a:	mov	qword ptr [rbp - 0x168], rcx
0x827851:	mov	eax, dword ptr fs:[r12]
0x827856:	mov	dword ptr [rbp - 0x15c], eax
0x82785c:	lea	rax, [r14 + 0x10]
0x827860:	and	rax, 0xfffffffffffffff0
0x827864:	sub	rsp, rax
0x827867:	mov	qword ptr [rbp - 0x170], rsp
0x82786e:	call	0x827380

0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x827380
stashes  [<SimState @ 0x827380>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xffffffffffffff80
r12b : 0x80
r12d : 0xffffff80
r12w : 0xff80
r13 : 0x879478
r13b : 0x78
r13d : 0x879478
r13w : 0x9478
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0xab3258
r15b : 0x58
r15d : 0xab3258
r15w : 0x3258
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x10
rbp : 0x7fffffffffefc40
rbx : 0xb
rcx : 0x7
rdi : 0xb
rdx : 0x7
rflags : 0x0
rip : 0x827380
rsi : 0x879478
rsp : 0x7fffffffffefaa8
0x827380:	push	rbp
0x827381:	mov	rbp, rsp
0x827384:	push	r15
0x827386:	push	r14
0x827388:	push	r13
0x82738a:	push	r12
0x82738c:	mov	r15d, edi
0x82738f:	push	rbx
0x827390:	mov	r14, rdx
0x827393:	mov	edi, 1
0x827398:	xor	edx, edx
0x82739a:	sub	rsp, 0xb8
0x8273a1:	mov	qword ptr [rbp - 0xd8], rsi
0x8273a8:	mov	esi, 0x80801
0x8273ad:	call	0x7f3f10

0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7f3f10
stashes  [<SimState @ 0x7f3f10>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xffffffffffffff80
r12b : 0x80
r12d : 0xffffff80
r12w : 0xff80
r13 : 0x879478
r13b : 0x78
r13d : 0x879478
r13w : 0x9478
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x10
rbp : 0x7fffffffffefaa0
rbx : 0xb
rcx : 0x7
rdi : 0x1
rdx : 0x0
rflags : 0x4
rip : 0x7f3f10
rsi : 0x80801
rsp : 0x7fffffffffef9b8
0x7f3f10:	mov	eax, 0x29
0x7f3f15:	syscall	

0x827380 => 0x7f3f10(socket)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x8273b2
stashes  [<SimState @ 0x8273b2>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xffffffffffffff80
r12b : 0x80
r12d : 0xffffff80
r12w : 0xff80
r13 : 0x879478
r13b : 0x78
r13d : 0x879478
r13w : 0x9478
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x3
rbp : 0x7fffffffffefaa0
rbx : 0xb
rcx : 0x7
rdi : 0x1
rdx : 0x0
rflags : 0x4
rip : 0x8273b2
rsi : 0x80801
rsp : 0x7fffffffffef9c0
0x8273b2:	test	eax, eax
0x8273b4:	js	0x827578

0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x8273ba
stashes  [<SimState @ 0x8273ba>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xffffffffffffff80
r12b : 0x80
r12d : 0xffffff80
r12w : 0xff80
r13 : 0x879478
r13b : 0x78
r13d : 0x879478
r13w : 0x9478
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x3
rbp : 0x7fffffffffefaa0
rbx : 0xb
rcx : 0x7
rdi : 0x1
rdx : 0x0
rflags : 0x4
rip : 0x8273ba
rsi : 0x80801
rsp : 0x7fffffffffef9c0
0x8273ba:	mov	r12d, eax
0x8273bd:	lea	rax, [r14 + 0x2a]
0x8273c1:	lea	rsi, [rbp - 0xa0]
0x8273c8:	movdqa	xmm0, xmmword ptr [rip + 0x57150]
0x8273d0:	mov	edx, 1
0x8273d5:	and	rax, 0xfffffffffffffff0
0x8273d9:	mov	word ptr [rbp - 0xa0], dx
0x8273e0:	mov	edi, r12d
0x8273e3:	sub	rsp, rax
0x8273e6:	mov	edx, 0x6e
0x8273eb:	lea	r13, [r14 + 0xc]
0x8273ef:	lea	rbx, [rsp + 0xf]
0x8273f4:	movups	xmmword ptr [rbp - 0x9e], xmm0
0x8273fb:	mov	dword ptr [rsi + 0x12], 0x74656b63
0x827402:	mov	byte ptr [rsi + 0x16], 0
0x827406:	and	rbx, 0xfffffffffffffff0
0x82740a:	call	0x7f38f0

0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7f38f0
stashes  [<SimState @ 0x7f38f0>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x30
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7
rdi : 0x3
rdx : 0x6e
rflags : 0x4
rip : 0x7f38f0
rsi : 0x7fffffffffefa00
rsp : 0x7fffffffffef988
0x7f38f0:	lea	rax, [rip + 0x2c0001]
0x7f38f7:	mov	eax, dword ptr [rax]
0x7f38f9:	test	eax, eax
0x7f38fb:	jne	0x7f3910

0x8273ba => 0x7f38f0(__connect)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7f38fd
stashes  [<SimState @ 0x7f38fd>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7
rdi : 0x3
rdx : 0x6e
rflags : 0x44
rip : 0x7f38fd
rsi : 0x7fffffffffefa00
rsp : 0x7fffffffffef988
0x7f38fd:	mov	eax, 0x2a
0x7f3902:	syscall	

0x8273ba => 0x7f38f0(__connect)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7f3904
stashes  [<SimState @ 0x7f3904>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2a
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3904
rdi : 0x3
rdx : 0x6e
rflags : 0x44
rip : 0x7f3904
rsi : 0x7fffffffffefa00
rsp : 0x7fffffffffef988
0x7f3904:	cmp	rax, -0x1000
0x7f390a:	ja	0x7f3960

0x8273ba => 0x7f38f0(__connect)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7f3904
stashes  [<SimState @ 0x7f3904>] []
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3904
rdi : 0x3
rdx : 0x6e
rflags : 0x44
rip : 0x7f3904
rsi : 0x7fffffffffefa00
rsp : 0x7fffffffffef988
0x7f3904:	cmp	rax, -0x1000
0x7f390a:	ja	0x7f3960

0x8273ba => 0x7f38f0(__connect)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:13 active states =  1 rip =  0x7f3960
stashes  [<SimState @ 0x7f3960>] [<SimState @ 0x7f390c>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xfffffffffffff001
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3904
rdi : 0x3
rdx : 0x6e
rflags : 0x0
rip : 0x7f3960
rsi : 0x7fffffffffefa00
rsp : 0x7fffffffffef988
0x7f3960:	mov	rdx, qword ptr [rip + 0x2ba501]
0x7f3967:	neg	eax
0x7f3969:	mov	dword ptr fs:[rdx], eax
0x7f396c:	mov	eax, 0xffffffff
0x7f3971:	ret	

0x8273ba => 0x7f38f0(__connect)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x82740f
stashes  [<SimState @ 0x82740f>] [<SimState @ 0x7f390c>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3904
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x15
rip : 0x82740f
rsi : 0x7fffffffffefa00
rsp : 0x7fffffffffef990
0x82740f:	test	eax, eax
0x827411:	jns	0x827424

0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x827413
stashes  [<SimState @ 0x827413>] [<SimState @ 0x7f390c>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3904
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x84
rip : 0x827413
rsi : 0x7fffffffffefa00
rsp : 0x7fffffffffef990
0x827413:	mov	rax, qword ptr [rip + 0x286a4e]
0x82741a:	cmp	dword ptr fs:[rax], 0x73
0x82741e:	jne	0x827560

0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x827424
stashes  [<SimState @ 0x827424>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x7
r14b : 0x7
r14d : 0x7
r14w : 0x7
r15 : 0xb
r15b : 0xb
r15d : 0xb
r15w : 0xb
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffff80
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3904
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x44
rip : 0x827424
rsi : 0x7fffffffffefa00
rsp : 0x7fffffffffef990
0x827424:	mov	rsi, qword ptr [rbp - 0xd8]
0x82742b:	lea	rdi, [rbx + 0xc]
0x82742f:	mov	dword ptr [rbx + 4], r15d
0x827433:	mov	dword ptr [rbx + 8], r14d
0x827437:	mov	rdx, r14
0x82743a:	mov	dword ptr [rbx], 2
0x827440:	lea	r15, [rbp - 0xb0]
0x827447:	mov	r14d, 1
0x82744d:	call	0x721160

0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x721160
stashes  [<SimState @ 0x721160>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffff80
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3904
rdi : 0x7fffffffffef99c
rdx : 0x7
rflags : 0x44
rip : 0x721160
rsi : 0x879478
rsp : 0x7fffffffffef988
0x721160:	jmp	qword ptr [rip + 0x38cf72]

0x827424 => 0x721160()
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x79dc20
stashes  [<SimState @ 0x79dc20>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffff80
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3904
rdi : 0x7fffffffffef99c
rdx : 0x7
rflags : 0x44
rip : 0x79dc20
rsi : 0x879478
rsp : 0x7fffffffffef988
0x79dc20:	mov	rax, rdi
0x79dc23:	cmp	rdx, 0x10
0x79dc27:	jb	0x79dd27

0x827424 => 0x721160()
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x79dd27
stashes  [<SimState @ 0x79dd27>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffef99c
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3904
rdi : 0x7fffffffffef99c
rdx : 0x7
rflags : 0x81
rip : 0x79dd27
rsi : 0x879478
rsp : 0x7fffffffffef988
0x79dd27:	cmp	dl, 8
0x79dd2a:	jae	0x79dd3e

0x827424 => 0x721160()
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x79dd2c
stashes  [<SimState @ 0x79dd2c>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffef99c
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3904
rdi : 0x7fffffffffef99c
rdx : 0x7
rflags : 0x95
rip : 0x79dd2c
rsi : 0x879478
rsp : 0x7fffffffffef988
0x79dd2c:	cmp	dl, 4
0x79dd2f:	jae	0x79dd4f

0x827424 => 0x721160()
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x79dd4f
stashes  [<SimState @ 0x79dd4f>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffef99c
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3904
rdi : 0x7fffffffffef99c
rdx : 0x7
rflags : 0x4
rip : 0x79dd4f
rsi : 0x879478
rsp : 0x7fffffffffef988
0x79dd4f:	mov	ecx, dword ptr [rsi + rdx - 4]
0x79dd53:	mov	esi, dword ptr [rsi]
0x79dd55:	mov	dword ptr [rdi + rdx - 4], ecx
0x79dd59:	mov	dword ptr [rdi], esi
0x79dd5b:	ret	

0x827424 => 0x721160()
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x827452
stashes  [<SimState @ 0x827452>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffef99c
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x647773
rdi : 0x7fffffffffef99c
rdx : 0x7
rflags : 0x4
rip : 0x827452
rsi : 0x73736170
rsp : 0x7fffffffffef990
0x827452:	lea	rax, [rbp - 0xc8]
0x827459:	mov	qword ptr [rbp - 0xd8], rax
0x827460:	mov	ecx, 0x4000
0x827465:	mov	rdx, r13
0x827468:	mov	rsi, rbx
0x82746b:	mov	edi, r12d
0x82746e:	call	0x7f3c80

0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x7f3c80
stashes  [<SimState @ 0x7f3c80>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x6
r10b : 0x6
r10d : 0x6
r10w : 0x6
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffef9d8
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x4000
rdi : 0x3
rdx : 0x13
rflags : 0x4
rip : 0x7f3c80
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffef988
0x7f3c80:	lea	rax, [rip + 0x2bfc71]
0x7f3c87:	mov	r10d, ecx
0x7f3c8a:	mov	eax, dword ptr [rax]
0x7f3c8c:	test	eax, eax
0x7f3c8e:	jne	0x7f3cb0

0x827452 => 0x7f3c80(__send)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x7f3c90
stashes  [<SimState @ 0x7f3c90>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x1
r8b : 0x1
r8d : 0x1
r8w : 0x1
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x4000
rdi : 0x3
rdx : 0x13
rflags : 0x44
rip : 0x7f3c90
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffef988
0x7f3c90:	xor	r9d, r9d
0x7f3c93:	xor	r8d, r8d
0x7f3c96:	mov	eax, 0x2c
0x7f3c9b:	syscall	

0x827452 => 0x7f3c80(__send)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x7f3c9d
stashes  [<SimState @ 0x7f3c9d>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2c
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x13
rflags : 0x44
rip : 0x7f3c9d
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffef988
0x7f3c9d:	cmp	rax, -0x1000
0x7f3ca3:	ja	0x7f3d10

0x827452 => 0x7f3c80(__send)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x7f3c9d
stashes  [<SimState @ 0x7f3c9d>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x13
rflags : 0x44
rip : 0x7f3c9d
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffef988
0x7f3c9d:	cmp	rax, -0x1000
0x7f3ca3:	ja	0x7f3d10

0x827452 => 0x7f3c80(__send)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x7f3ca5
stashes  [<SimState @ 0x7f3ca5>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x13
rflags : 0x5
rip : 0x7f3ca5
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffef988
0x7f3ca5:	ret	

0x827452 => 0x7f3c80(__send)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x827473
stashes  [<SimState @ 0x827473>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x13
rflags : 0x5
rip : 0x827473
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffef990
0x827473:	cmp	rax, -1
0x827477:	je	0x827498

0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x827479
stashes  [<SimState @ 0x827479>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x13
rflags : 0x11
rip : 0x827479
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffef990
0x827479:	cmp	r13, rax
0x82747c:	jne	0x827560

0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x827560
stashes  [<SimState @ 0x827560>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x13
rflags : 0x0
rip : 0x827560
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffef990
0x827560:	mov	edi, r12d
0x827563:	mov	r12d, 0xffffffff
0x827569:	call	0x7e4e50

0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x7e4e50
stashes  [<SimState @ 0x7e4e50>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xffffffff
r12b : 0xff
r12d : 0xffffffff
r12w : 0xffff
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x13
rflags : 0x0
rip : 0x7e4e50
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffef988
0x7e4e50:	mov	eax, 3
0x7e4e55:	syscall	

0x827560 => 0x7e4e50(__close_nocancel)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x1d00184
stashes  [<SimState @ 0x1d00184>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xffffffff
r12b : 0xff
r12d : 0xffffffff
r12w : 0xffff
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x3
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7e4e57
rdi : 0x3
rdx : 0x13
rflags : 0x0
rip : 0x1d00184
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffef988
0x1d00184:	add	byte ptr [rax], al
0x1d00186:	add	byte ptr [rax], al
0x1d00188:	add	byte ptr [rax], al
0x1d0018a:	add	byte ptr [rax], al
0x1d0018c:	add	byte ptr [rax], al
0x1d0018e:	add	byte ptr [rax], al
0x1d00190:	add	byte ptr [rax], al
0x1d00192:	add	byte ptr [rax], al
0x1d00194:	add	byte ptr [rax], al
0x1d00196:	add	byte ptr [rax], al
0x1d00198:	add	byte ptr [rax], al
0x1d0019a:	add	byte ptr [rax], al
0x1d0019c:	add	byte ptr [rax], al
0x1d0019e:	add	byte ptr [rax], al
0x1d001a0:	add	byte ptr [rax], al
0x1d001a2:	add	byte ptr [rax], al
0x1d001a4:	add	byte ptr [rax], al
0x1d001a6:	add	byte ptr [rax], al
0x1d001a8:	add	byte ptr [rax], al
0x1d001aa:	add	byte ptr [rax], al
0x1d001ac:	add	byte ptr [rax], al
0x1d001ae:	add	byte ptr [rax], al
0x1d001b0:	add	byte ptr [rax], al
0x1d001b2:	add	byte ptr [rax], al
0x1d001b4:	add	byte ptr [rax], al
0x1d001b6:	add	byte ptr [rax], al
0x1d001b8:	add	byte ptr [rax], al
0x1d001ba:	add	byte ptr [rax], al
0x1d001bc:	add	byte ptr [rax], al
0x1d001be:	add	byte ptr [rax], al
0x1d001c0:	add	byte ptr [rax], al
0x1d001c2:	add	byte ptr [rax], al
0x1d001c4:	add	byte ptr [rax], al
0x1d001c6:	add	byte ptr [rax], al
0x1d001c8:	add	byte ptr [rax], al
0x1d001ca:	add	byte ptr [rax], al
0x1d001cc:	add	byte ptr [rax], al
0x1d001ce:	add	byte ptr [rax], al
0x1d001d0:	add	byte ptr [rax], al
0x1d001d2:	add	byte ptr [rax], al
0x1d001d4:	add	byte ptr [rax], al
0x1d001d6:	add	byte ptr [rax], al
0x1d001d8:	add	byte ptr [rax], al
0x1d001da:	add	byte ptr [rax], al
0x1d001dc:	add	byte ptr [rax], al
0x1d001de:	add	byte ptr [rax], al
0x1d001e0:	add	byte ptr [rax], al
0x1d001e2:	add	byte ptr [rax], al
0x1d001e4:	add	byte ptr [rax], al
0x1d001e6:	add	byte ptr [rax], al
0x1d001e8:	add	byte ptr [rax], al
0x1d001ea:	add	byte ptr [rax], al
0x1d001ec:	add	byte ptr [rax], al
0x1d001ee:	add	byte ptr [rax], al
0x1d001f0:	add	byte ptr [rax], al
0x1d001f2:	add	byte ptr [rax], al
0x1d001f4:	add	byte ptr [rax], al
0x1d001f6:	add	byte ptr [rax], al
0x1d001f8:	add	byte ptr [rax], al
0x1d001fa:	add	byte ptr [rax], al
0x1d001fc:	add	byte ptr [rax], al
0x1d001fe:	add	byte ptr [rax], al
0x1d00200:	add	byte ptr [rax], al
0x1d00202:	add	byte ptr [rax], al
0x1d00204:	add	byte ptr [rax], al
0x1d00206:	add	byte ptr [rax], al
0x1d00208:	add	byte ptr [rax], al
0x1d0020a:	add	byte ptr [rax], al
0x1d0020c:	add	byte ptr [rax], al
0x1d0020e:	add	byte ptr [rax], al
0x1d00210:	add	byte ptr [rax], al
0x1d00212:	add	byte ptr [rax], al
0x1d00214:	add	byte ptr [rax], al
0x1d00216:	add	byte ptr [rax], al
0x1d00218:	add	byte ptr [rax], al
0x1d0021a:	add	byte ptr [rax], al
0x1d0021c:	add	byte ptr [rax], al
0x1d0021e:	add	byte ptr [rax], al
0x1d00220:	add	byte ptr [rax], al
0x1d00222:	add	byte ptr [rax], al
0x1d00224:	add	byte ptr [rax], al
0x1d00226:	add	byte ptr [rax], al
0x1d00228:	add	byte ptr [rax], al
0x1d0022a:	add	byte ptr [rax], al
0x1d0022c:	add	byte ptr [rax], al
0x1d0022e:	add	byte ptr [rax], al
0x1d00230:	add	byte ptr [rax], al
0x1d00232:	add	byte ptr [rax], al
0x1d00234:	add	byte ptr [rax], al
0x1d00236:	add	byte ptr [rax], al
0x1d00238:	add	byte ptr [rax], al
0x1d0023a:	add	byte ptr [rax], al
0x1d0023c:	add	byte ptr [rax], al
0x1d0023e:	add	byte ptr [rax], al
0x1d00240:	add	byte ptr [rax], al
0x1d00242:	add	byte ptr [rax], al
0x1d00244:	add	byte ptr [rax], al
0x1d00246:	add	byte ptr [rax], al
0x1d00248:	add	byte ptr [rax], al

0x827560 => 0x7e4e50(__close_nocancel)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x7e4e57
stashes  [<SimState @ 0x7e4e57>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xffffffff
r12b : 0xff
r12d : 0xffffffff
r12w : 0xffff
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7e4e57
rdi : 0x3
rdx : 0x13
rflags : 0x0
rip : 0x7e4e57
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffef988
0x7e4e57:	cmp	rax, -0x1000
0x7e4e5d:	ja	0x7e4e68

0x827560 => 0x7e4e50(__close_nocancel)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x7e4e5f
stashes  [<SimState @ 0x7e4e5f>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xffffffff
r12b : 0xff
r12d : 0xffffffff
r12w : 0xffff
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7e4e57
rdi : 0x3
rdx : 0x13
rflags : 0x5
rip : 0x7e4e5f
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffef988
0x7e4e5f:	ret	

0x827560 => 0x7e4e50(__close_nocancel)
0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x82756e
stashes  [<SimState @ 0x82756e>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xffffffff
r12b : 0xff
r12d : 0xffffffff
r12w : 0xffff
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7e4e57
rdi : 0x3
rdx : 0x13
rflags : 0x5
rip : 0x82756e
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffef990
0x82756e:	jmp	0x827482

0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x827482
stashes  [<SimState @ 0x827482>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xffffffff
r12b : 0xff
r12d : 0xffffffff
r12w : 0xffff
r13 : 0x13
r13b : 0x13
r13d : 0x13
r13w : 0x13
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffef9f0
r15b : 0xf0
r15d : 0xfffef9f0
r15w : 0xf9f0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefaa0
rbx : 0x7fffffffffef990
rcx : 0x7e4e57
rdi : 0x3
rdx : 0x13
rflags : 0x5
rip : 0x827482
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffef990
0x827482:	lea	rsp, [rbp - 0x28]
0x827486:	mov	eax, r12d
0x827489:	pop	rbx
0x82748a:	pop	r12
0x82748c:	pop	r13
0x82748e:	pop	r14
0x827490:	pop	r15
0x827492:	pop	rbp
0x827493:	ret	

0x827834 => 0x827380(open_socket)
0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x827873
stashes  [<SimState @ 0x827873>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xffffffffffffff80
r12b : 0x80
r12d : 0xffffff80
r12w : 0xff80
r13 : 0x879478
r13b : 0x78
r13d : 0x879478
r13w : 0x9478
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0xab3258
r15b : 0x58
r15d : 0xab3258
r15w : 0x3258
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x7fffffffffefc40
rbx : 0xb
rcx : 0x7e4e57
rdi : 0x3
rdx : 0x13
rflags : 0x5
rip : 0x827873
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffefab0
0x827873:	test	eax, eax
0x827875:	mov	rdx, -1
0x82787c:	jns	0x8278b8

0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x82787e
stashes  [<SimState @ 0x82787e>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xffffffffffffff80
r12b : 0x80
r12d : 0xffffff80
r12w : 0xff80
r13 : 0x879478
r13b : 0x78
r13d : 0x879478
r13w : 0x9478
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0xab3258
r15b : 0x58
r15d : 0xab3258
r15w : 0x3258
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x7fffffffffefc40
rbx : 0xb
rcx : 0x7e4e57
rdi : 0x3
rdx : 0xffffffffffffffff
rflags : 0x84
rip : 0x82787e
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffefab0
0x82787e:	mov	rdi, qword ptr [r15]
0x827881:	mov	eax, dword ptr [rbp - 0x15c]
0x827887:	test	rdi, rdi
0x82788a:	mov	dword ptr fs:[r12], eax
0x82788f:	mov	qword ptr [r15], rdx
0x827892:	je	0x82789f

0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:14 active states =  1 rip =  0x82789f
stashes  [<SimState @ 0x82789f>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xffffffffffffff80
r12b : 0x80
r12d : 0xffffff80
r12w : 0xff80
r13 : 0x879478
r13b : 0x78
r13d : 0x879478
r13w : 0x9478
r14 : 0x6
r14b : 0x6
r14d : 0x6
r14w : 0x6
r15 : 0xab3258
r15b : 0x58
r15d : 0xab3258
r15w : 0x3258
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefc40
rbx : 0xb
rcx : 0x7e4e57
rdi : 0x0
rdx : 0xffffffffffffffff
rflags : 0x44
rip : 0x82789f
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffefab0
0x82789f:	lea	rsp, [rbp - 0x28]
0x8278a3:	mov	rax, rdx
0x8278a6:	pop	rbx
0x8278a7:	pop	r12
0x8278a9:	pop	r13
0x8278ab:	pop	r14
0x8278ad:	pop	r15
0x8278af:	pop	rbp
0x8278b0:	ret	

0x827c29 => 0x827810(__nscd_get_mapping)
0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x827c35
stashes  [<SimState @ 0x827c35>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcec
r12b : 0xec
r12d : 0xfffefcec
r12w : 0xfcec
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0xab3250
rbx : 0x0
rcx : 0x7e4e57
rdi : 0x0
rdx : 0xffffffffffffffff
rflags : 0x44
rip : 0x827c35
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffefc50
0x827c35:	cmp	rax, -1
0x827c39:	mov	rbx, rax
0x827c3c:	je	0x827cc0

0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x827cc0
stashes  [<SimState @ 0x827cc0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcec
r12b : 0xec
r12d : 0xfffefcec
r12w : 0xfcec
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0xab3250
rbx : 0xffffffffffffffff
rcx : 0x7e4e57
rdi : 0x0
rdx : 0xffffffffffffffff
rflags : 0x44
rip : 0x827cc0
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffefc50
0x827cc0:	mov	rbx, -1
0x827cc7:	jmp	0x827c54

0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x827c54
stashes  [<SimState @ 0x827c54>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcec
r12b : 0xec
r12d : 0xfffefcec
r12w : 0xfcec
r13 : 0xb
r13b : 0xb
r13d : 0xb
r13w : 0xb
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0xab3250
rbx : 0xffffffffffffffff
rcx : 0x7e4e57
rdi : 0x0
rdx : 0xffffffffffffffff
rflags : 0x44
rip : 0x827c54
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffefc50
0x827c54:	mov	dword ptr [rbp], 0
0x827c5b:	add	rsp, 0x10
0x827c5f:	mov	rax, rbx
0x827c62:	pop	rbx
0x827c63:	pop	rbp
0x827c64:	pop	r12
0x827c66:	pop	r13
0x827c68:	pop	r14
0x827c6a:	ret	

0x824530 => 0x827bc0(__nscd_get_map_ref)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x824579
stashes  [<SimState @ 0x824579>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x400
r13b : 0x0
r13d : 0x400
r13w : 0x400
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0xab0ee0
rbx : 0xc0000022
rcx : 0x7e4e57
rdi : 0x0
rdx : 0xffffffffffffffff
rflags : 0x4
rip : 0x824579
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffefc90
0x824579:	mov	rbx, rax
0x82457c:	lea	rax, [rsp + 0x60]
0x824581:	mov	qword ptr [rsp + 0x10], rax
0x824586:	cmp	rbx, -1
0x82458a:	je	0x82465b

0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x82465b
stashes  [<SimState @ 0x82465b>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x400
r13b : 0x0
r13d : 0x400
r13w : 0x400
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefcf0
rbp : 0xab0ee0
rbx : 0xffffffffffffffff
rcx : 0x7e4e57
rdi : 0x0
rdx : 0xffffffffffffffff
rflags : 0x44
rip : 0x82465b
rsi : 0x7fffffffffef990
rsp : 0x7fffffffffefc90
0x82465b:	mov	rsi, qword ptr [rsp]
0x82465f:	mov	rcx, qword ptr [rsp + 0x10]
0x824664:	mov	r8d, 0x24
0x82466a:	mov	edx, dword ptr [rsp + 0xc]
0x82466e:	mov	rdi, r15
0x824671:	call	0x827e80

0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x827e80
stashes  [<SimState @ 0x827e80>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x400
r13b : 0x0
r13d : 0x400
r13w : 0x400
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefcf0
rbp : 0xab0ee0
rbx : 0xffffffffffffffff
rcx : 0x7fffffffffefcf0
rdi : 0xc0000022
rdx : 0x0
rflags : 0x44
rip : 0x827e80
rsi : 0x14
rsp : 0x7fffffffffefc88
0x827e80:	cmp	rsi, 0x400
0x827e87:	push	r14
0x827e89:	push	r13
0x827e8b:	push	r12
0x827e8d:	push	rbp
0x827e8e:	push	rbx
0x827e8f:	ja	0x827f0e

0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x827e91
stashes  [<SimState @ 0x827e91>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x400
r13b : 0x0
r13d : 0x400
r13w : 0x400
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefcf0
rbp : 0xab0ee0
rbx : 0xffffffffffffffff
rcx : 0x7fffffffffefcf0
rdi : 0xc0000022
rdx : 0x0
rflags : 0x85
rip : 0x827e91
rsi : 0x14
rsp : 0x7fffffffffefc60
0x827e91:	mov	r13, qword ptr [rip + 0x285fd0]
0x827e98:	mov	eax, edx
0x827e9a:	mov	rdx, rsi
0x827e9d:	mov	rsi, rdi
0x827ea0:	mov	edi, eax
0x827ea2:	mov	rbp, r8
0x827ea5:	mov	r12, rcx
0x827ea8:	mov	r14d, dword ptr fs:[r13]
0x827ead:	call	0x827380

0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x827380
stashes  [<SimState @ 0x827380>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x24
rbx : 0xffffffffffffffff
rcx : 0x7fffffffffefcf0
rdi : 0x0
rdx : 0x14
rflags : 0x85
rip : 0x827380
rsi : 0xc0000022
rsp : 0x7fffffffffefc58
0x827380:	push	rbp
0x827381:	mov	rbp, rsp
0x827384:	push	r15
0x827386:	push	r14
0x827388:	push	r13
0x82738a:	push	r12
0x82738c:	mov	r15d, edi
0x82738f:	push	rbx
0x827390:	mov	r14, rdx
0x827393:	mov	edi, 1
0x827398:	xor	edx, edx
0x82739a:	sub	rsp, 0xb8
0x8273a1:	mov	qword ptr [rbp - 0xd8], rsi
0x8273a8:	mov	esi, 0x80801
0x8273ad:	call	0x7f3f10

0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x7f3f10
stashes  [<SimState @ 0x7f3f10>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x14
r14b : 0x14
r14d : 0x14
r14w : 0x14
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefc50
rbx : 0xffffffffffffffff
rcx : 0x7fffffffffefcf0
rdi : 0x1
rdx : 0x0
rflags : 0x0
rip : 0x7f3f10
rsi : 0x80801
rsp : 0x7fffffffffefb68
0x7f3f10:	mov	eax, 0x29
0x7f3f15:	syscall	

0x827380 => 0x7f3f10(socket)
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x8273b2
stashes  [<SimState @ 0x8273b2>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x14
r14b : 0x14
r14d : 0x14
r14w : 0x14
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x3
rbp : 0x7fffffffffefc50
rbx : 0xffffffffffffffff
rcx : 0x7fffffffffefcf0
rdi : 0x1
rdx : 0x0
rflags : 0x0
rip : 0x8273b2
rsi : 0x80801
rsp : 0x7fffffffffefb70
0x8273b2:	test	eax, eax
0x8273b4:	js	0x827578

0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x8273ba
stashes  [<SimState @ 0x8273ba>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x14
r14b : 0x14
r14d : 0x14
r14w : 0x14
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x3
rbp : 0x7fffffffffefc50
rbx : 0xffffffffffffffff
rcx : 0x7fffffffffefcf0
rdi : 0x1
rdx : 0x0
rflags : 0x4
rip : 0x8273ba
rsi : 0x80801
rsp : 0x7fffffffffefb70
0x8273ba:	mov	r12d, eax
0x8273bd:	lea	rax, [r14 + 0x2a]
0x8273c1:	lea	rsi, [rbp - 0xa0]
0x8273c8:	movdqa	xmm0, xmmword ptr [rip + 0x57150]
0x8273d0:	mov	edx, 1
0x8273d5:	and	rax, 0xfffffffffffffff0
0x8273d9:	mov	word ptr [rbp - 0xa0], dx
0x8273e0:	mov	edi, r12d
0x8273e3:	sub	rsp, rax
0x8273e6:	mov	edx, 0x6e
0x8273eb:	lea	r13, [r14 + 0xc]
0x8273ef:	lea	rbx, [rsp + 0xf]
0x8273f4:	movups	xmmword ptr [rbp - 0x9e], xmm0
0x8273fb:	mov	dword ptr [rsi + 0x12], 0x74656b63
0x827402:	mov	byte ptr [rsi + 0x16], 0
0x827406:	and	rbx, 0xfffffffffffffff0
0x82740a:	call	0x7f38f0

0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x7f38f0
stashes  [<SimState @ 0x7f38f0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x14
r14b : 0x14
r14d : 0x14
r14w : 0x14
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x30
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7fffffffffefcf0
rdi : 0x3
rdx : 0x6e
rflags : 0x0
rip : 0x7f38f0
rsi : 0x7fffffffffefbb0
rsp : 0x7fffffffffefb38
0x7f38f0:	lea	rax, [rip + 0x2c0001]
0x7f38f7:	mov	eax, dword ptr [rax]
0x7f38f9:	test	eax, eax
0x7f38fb:	jne	0x7f3910

0x8273ba => 0x7f38f0(__connect)
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x7f38fd
stashes  [<SimState @ 0x7f38fd>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x14
r14b : 0x14
r14d : 0x14
r14w : 0x14
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7fffffffffefcf0
rdi : 0x3
rdx : 0x6e
rflags : 0x44
rip : 0x7f38fd
rsi : 0x7fffffffffefbb0
rsp : 0x7fffffffffefb38
0x7f38fd:	mov	eax, 0x2a
0x7f3902:	syscall	

0x8273ba => 0x7f38f0(__connect)
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x7f3904
stashes  [<SimState @ 0x7f3904>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x14
r14b : 0x14
r14d : 0x14
r14w : 0x14
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2a
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3904
rdi : 0x3
rdx : 0x6e
rflags : 0x44
rip : 0x7f3904
rsi : 0x7fffffffffefbb0
rsp : 0x7fffffffffefb38
0x7f3904:	cmp	rax, -0x1000
0x7f390a:	ja	0x7f3960

0x8273ba => 0x7f38f0(__connect)
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x7f3904
stashes  [<SimState @ 0x7f3904>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x14
r14b : 0x14
r14d : 0x14
r14w : 0x14
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3904
rdi : 0x3
rdx : 0x6e
rflags : 0x44
rip : 0x7f3904
rsi : 0x7fffffffffefbb0
rsp : 0x7fffffffffefb38
0x7f3904:	cmp	rax, -0x1000
0x7f390a:	ja	0x7f3960

0x8273ba => 0x7f38f0(__connect)
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x7f3960
stashes  [<SimState @ 0x7f3960>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x14
r14b : 0x14
r14d : 0x14
r14w : 0x14
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xfffffffffffff001
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3904
rdi : 0x3
rdx : 0x6e
rflags : 0x0
rip : 0x7f3960
rsi : 0x7fffffffffefbb0
rsp : 0x7fffffffffefb38
0x7f3960:	mov	rdx, qword ptr [rip + 0x2ba501]
0x7f3967:	neg	eax
0x7f3969:	mov	dword ptr fs:[rdx], eax
0x7f396c:	mov	eax, 0xffffffff
0x7f3971:	ret	

0x8273ba => 0x7f38f0(__connect)
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x82740f
stashes  [<SimState @ 0x82740f>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x14
r14b : 0x14
r14d : 0x14
r14w : 0x14
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3904
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x15
rip : 0x82740f
rsi : 0x7fffffffffefbb0
rsp : 0x7fffffffffefb40
0x82740f:	test	eax, eax
0x827411:	jns	0x827424

0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x827413
stashes  [<SimState @ 0x827413>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x14
r14b : 0x14
r14d : 0x14
r14w : 0x14
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3904
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x84
rip : 0x827413
rsi : 0x7fffffffffefbb0
rsp : 0x7fffffffffefb40
0x827413:	mov	rax, qword ptr [rip + 0x286a4e]
0x82741a:	cmp	dword ptr fs:[rax], 0x73
0x82741e:	jne	0x827560

0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x827424
stashes  [<SimState @ 0x827424>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x14
r14b : 0x14
r14d : 0x14
r14w : 0x14
r15 : 0x0
r15b : 0x0
r15d : 0x0
r15w : 0x0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffff80
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3904
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x44
rip : 0x827424
rsi : 0x7fffffffffefbb0
rsp : 0x7fffffffffefb40
0x827424:	mov	rsi, qword ptr [rbp - 0xd8]
0x82742b:	lea	rdi, [rbx + 0xc]
0x82742f:	mov	dword ptr [rbx + 4], r15d
0x827433:	mov	dword ptr [rbx + 8], r14d
0x827437:	mov	rdx, r14
0x82743a:	mov	dword ptr [rbx], 2
0x827440:	lea	r15, [rbp - 0xb0]
0x827447:	mov	r14d, 1
0x82744d:	call	0x721160

0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x721160
stashes  [<SimState @ 0x721160>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffefba0
r15b : 0xa0
r15d : 0xfffefba0
r15w : 0xfba0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffff80
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3904
rdi : 0x7fffffffffefb4c
rdx : 0x14
rflags : 0x44
rip : 0x721160
rsi : 0xc0000022
rsp : 0x7fffffffffefb38
0x721160:	jmp	qword ptr [rip + 0x38cf72]

0x827424 => 0x721160()
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x79dc20
stashes  [<SimState @ 0x79dc20>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffefba0
r15b : 0xa0
r15d : 0xfffefba0
r15w : 0xfba0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffff80
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3904
rdi : 0x7fffffffffefb4c
rdx : 0x14
rflags : 0x44
rip : 0x79dc20
rsi : 0xc0000022
rsp : 0x7fffffffffefb38
0x79dc20:	mov	rax, rdi
0x79dc23:	cmp	rdx, 0x10
0x79dc27:	jb	0x79dd27

0x827424 => 0x721160()
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x79dc2d
stashes  [<SimState @ 0x79dc2d>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffefba0
r15b : 0xa0
r15d : 0xfffefba0
r15w : 0xfba0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefb4c
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3904
rdi : 0x7fffffffffefb4c
rdx : 0x14
rflags : 0x0
rip : 0x79dc2d
rsi : 0xc0000022
rsp : 0x7fffffffffefb38
0x79dc2d:	cmp	rdx, 0x20
0x79dc31:	ja	0x79dd76

0x827424 => 0x721160()
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x79dc37
stashes  [<SimState @ 0x79dc37>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffefba0
r15b : 0xa0
r15d : 0xfffefba0
r15w : 0xfba0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefb4c
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3904
rdi : 0x7fffffffffefb4c
rdx : 0x14
rflags : 0x81
rip : 0x79dc37
rsi : 0xc0000022
rsp : 0x7fffffffffefb38
0x79dc37:	movups	xmm0, xmmword ptr [rsi]
0x79dc3a:	movups	xmm1, xmmword ptr [rsi + rdx - 0x10]
0x79dc3f:	movups	xmmword ptr [rdi], xmm0
0x79dc42:	movups	xmmword ptr [rdi + rdx - 0x10], xmm1
0x79dc47:	ret	

0x827424 => 0x721160()
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x827452
stashes  [<SimState @ 0x827452>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffefba0
r15b : 0xa0
r15d : 0xfffefba0
r15w : 0xfba0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefb4c
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3904
rdi : 0x7fffffffffefb4c
rdx : 0x14
rflags : 0x81
rip : 0x827452
rsi : 0xc0000022
rsp : 0x7fffffffffefb40
0x827452:	lea	rax, [rbp - 0xc8]
0x827459:	mov	qword ptr [rbp - 0xd8], rax
0x827460:	mov	ecx, 0x4000
0x827465:	mov	rdx, r13
0x827468:	mov	rsi, rbx
0x82746b:	mov	edi, r12d
0x82746e:	call	0x7f3c80

0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x7f3c80
stashes  [<SimState @ 0x7f3c80>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffefba0
r15b : 0xa0
r15d : 0xfffefba0
r15w : 0xfba0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefb88
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x4000
rdi : 0x3
rdx : 0x20
rflags : 0x81
rip : 0x7f3c80
rsi : 0x7fffffffffefb40
rsp : 0x7fffffffffefb38
0x7f3c80:	lea	rax, [rip + 0x2bfc71]
0x7f3c87:	mov	r10d, ecx
0x7f3c8a:	mov	eax, dword ptr [rax]
0x7f3c8c:	test	eax, eax
0x7f3c8e:	jne	0x7f3cb0

0x827452 => 0x7f3c80(__send)
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x7f3c90
stashes  [<SimState @ 0x7f3c90>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffefba0
r15b : 0xa0
r15d : 0xfffefba0
r15w : 0xfba0
r8 : 0x24
r8b : 0x24
r8d : 0x24
r8w : 0x24
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x4000
rdi : 0x3
rdx : 0x20
rflags : 0x44
rip : 0x7f3c90
rsi : 0x7fffffffffefb40
rsp : 0x7fffffffffefb38
0x7f3c90:	xor	r9d, r9d
0x7f3c93:	xor	r8d, r8d
0x7f3c96:	mov	eax, 0x2c
0x7f3c9b:	syscall	

0x827452 => 0x7f3c80(__send)
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x7f3c9d
stashes  [<SimState @ 0x7f3c9d>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffefba0
r15b : 0xa0
r15d : 0xfffefba0
r15w : 0xfba0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2c
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x20
rflags : 0x44
rip : 0x7f3c9d
rsi : 0x7fffffffffefb40
rsp : 0x7fffffffffefb38
0x7f3c9d:	cmp	rax, -0x1000
0x7f3ca3:	ja	0x7f3d10

0x827452 => 0x7f3c80(__send)
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x7f3c9d
stashes  [<SimState @ 0x7f3c9d>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffefba0
r15b : 0xa0
r15d : 0xfffefba0
r15w : 0xfba0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x20
rflags : 0x44
rip : 0x7f3c9d
rsi : 0x7fffffffffefb40
rsp : 0x7fffffffffefb38
0x7f3c9d:	cmp	rax, -0x1000
0x7f3ca3:	ja	0x7f3d10

0x827452 => 0x7f3c80(__send)
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x7f3ca5
stashes  [<SimState @ 0x7f3ca5>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffefba0
r15b : 0xa0
r15d : 0xfffefba0
r15w : 0xfba0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x20
rflags : 0x5
rip : 0x7f3ca5
rsi : 0x7fffffffffefb40
rsp : 0x7fffffffffefb38
0x7f3ca5:	ret	

0x827452 => 0x7f3c80(__send)
0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x827473
stashes  [<SimState @ 0x827473>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffefba0
r15b : 0xa0
r15d : 0xfffefba0
r15w : 0xfba0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x20
rflags : 0x5
rip : 0x827473
rsi : 0x7fffffffffefb40
rsp : 0x7fffffffffefb40
0x827473:	cmp	rax, -1
0x827477:	je	0x827498

0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:15 active states =  1 rip =  0x827479
stashes  [<SimState @ 0x827479>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffefba0
r15b : 0xa0
r15d : 0xfffefba0
r15w : 0xfba0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x20
rflags : 0x11
rip : 0x827479
rsi : 0x7fffffffffefb40
rsp : 0x7fffffffffefb40
0x827479:	cmp	r13, rax
0x82747c:	jne	0x827560

0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x827482
stashes  [<SimState @ 0x827482>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x3
r12b : 0x3
r12d : 0x3
r12w : 0x3
r13 : 0x20
r13b : 0x20
r13d : 0x20
r13w : 0x20
r14 : 0x1
r14b : 0x1
r14d : 0x1
r14w : 0x1
r15 : 0x7fffffffffefba0
r15b : 0xa0
r15d : 0xfffefba0
r15w : 0xfba0
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x20
rbp : 0x7fffffffffefc50
rbx : 0x7fffffffffefb40
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x20
rflags : 0x44
rip : 0x827482
rsi : 0x7fffffffffefb40
rsp : 0x7fffffffffefb40
0x827482:	lea	rsp, [rbp - 0x28]
0x827486:	mov	eax, r12d
0x827489:	pop	rbx
0x82748a:	pop	r12
0x82748c:	pop	r13
0x82748e:	pop	r14
0x827490:	pop	r15
0x827492:	pop	rbp
0x827493:	ret	

0x827e91 => 0x827380(open_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x827eb2
stashes  [<SimState @ 0x827eb2>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x3
rbp : 0x24
rbx : 0xffffffffffffffff
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x20
rflags : 0x44
rip : 0x827eb2
rsi : 0x7fffffffffefb40
rsp : 0x7fffffffffefc60
0x827eb2:	test	eax, eax
0x827eb4:	mov	ebx, eax
0x827eb6:	js	0x827f02

0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x827eb8
stashes  [<SimState @ 0x827eb8>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x3
rbp : 0x24
rbx : 0x3
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x20
rflags : 0x4
rip : 0x827eb8
rsi : 0x7fffffffffefb40
rsp : 0x7fffffffffefc60
0x827eb8:	mov	esi, 0x1388
0x827ebd:	mov	edi, eax
0x827ebf:	call	0x827270

0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x827270
stashes  [<SimState @ 0x827270>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x3
rbp : 0x24
rbx : 0x3
rcx : 0x7f3c9d
rdi : 0x3
rdx : 0x20
rflags : 0x4
rip : 0x827270
rsi : 0x1388
rsp : 0x7fffffffffefc58
0x827270:	push	r15
0x827272:	push	r14
0x827274:	mov	eax, 0x19
0x827279:	push	r13
0x82727b:	push	r12
0x82727d:	mov	edx, esi
0x82727f:	push	rbp
0x827280:	push	rbx
0x827281:	mov	r15, rsi
0x827284:	mov	esi, 1
0x827289:	sub	rsp, 0x28
0x82728d:	lea	rbx, [rsp + 8]
0x827292:	mov	dword ptr [rsp + 8], edi
0x827296:	mov	word ptr [rsp + 0xc], ax
0x82729b:	mov	rdi, rbx
0x82729e:	call	0x7e88b0

0x827eb8 => 0x827270(wait_on_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x7e88b0
stashes  [<SimState @ 0x7e88b0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x1388
r15b : 0x88
r15d : 0x1388
r15w : 0x1388
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x19
rbp : 0x24
rbx : 0x7fffffffffefc08
rcx : 0x7f3c9d
rdi : 0x7fffffffffefc08
rdx : 0x1388
rflags : 0x4
rip : 0x7e88b0
rsi : 0x1
rsp : 0x7fffffffffefbf8
0x7e88b0:	lea	rax, [rip + 0x2cb041]
0x7e88b7:	mov	eax, dword ptr [rax]
0x7e88b9:	test	eax, eax
0x7e88bb:	jne	0x7e88d0

0x827270 => 0x7e88b0(__poll)
0x827eb8 => 0x827270(wait_on_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x7e88bd
stashes  [<SimState @ 0x7e88bd>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x1388
r15b : 0x88
r15d : 0x1388
r15w : 0x1388
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x24
rbx : 0x7fffffffffefc08
rcx : 0x7f3c9d
rdi : 0x7fffffffffefc08
rdx : 0x1388
rflags : 0x44
rip : 0x7e88bd
rsi : 0x1
rsp : 0x7fffffffffefbf8
0x7e88bd:	mov	eax, 7
0x7e88c2:	syscall	

0x827270 => 0x7e88b0(__poll)
0x827eb8 => 0x827270(wait_on_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x7e88c4
stashes  [<SimState @ 0x7e88c4>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x1388
r15b : 0x88
r15d : 0x1388
r15w : 0x1388
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7
rbp : 0x24
rbx : 0x7fffffffffefc08
rcx : 0x7e88c4
rdi : 0x7fffffffffefc08
rdx : 0x1388
rflags : 0x44
rip : 0x7e88c4
rsi : 0x1
rsp : 0x7fffffffffefbf8
0x7e88c4:	cmp	rax, -0x1000
0x7e88ca:	ja	0x7e8920

0x827270 => 0x7e88b0(__poll)
0x827eb8 => 0x827270(wait_on_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x7e88c4
stashes  [<SimState @ 0x7e88c4>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x1388
r15b : 0x88
r15d : 0x1388
r15w : 0x1388
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x24
rbx : 0x7fffffffffefc08
rcx : 0x7e88c4
rdi : 0x7fffffffffefc08
rdx : 0x1388
rflags : 0x44
rip : 0x7e88c4
rsi : 0x1
rsp : 0x7fffffffffefbf8
0x7e88c4:	cmp	rax, -0x1000
0x7e88ca:	ja	0x7e8920

0x827270 => 0x7e88b0(__poll)
0x827eb8 => 0x827270(wait_on_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x7e8920
stashes  [<SimState @ 0x7e8920>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x1388
r15b : 0x88
r15d : 0x1388
r15w : 0x1388
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xfffffffffffff001
rbp : 0x24
rbx : 0x7fffffffffefc08
rcx : 0x7e88c4
rdi : 0x7fffffffffefc08
rdx : 0x1388
rflags : 0x0
rip : 0x7e8920
rsi : 0x1
rsp : 0x7fffffffffefbf8
0x7e8920:	mov	rdx, qword ptr [rip + 0x2c5541]
0x7e8927:	neg	eax
0x7e8929:	mov	dword ptr fs:[rdx], eax
0x7e892c:	mov	eax, 0xffffffff
0x7e8931:	ret	

0x827270 => 0x7e88b0(__poll)
0x827eb8 => 0x827270(wait_on_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x8272a3
stashes  [<SimState @ 0x8272a3>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x1388
r15b : 0x88
r15d : 0x1388
r15w : 0x1388
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x24
rbx : 0x7fffffffffefc08
rcx : 0x7e88c4
rdi : 0x7fffffffffefc08
rdx : 0xffffffffffffff80
rflags : 0x15
rip : 0x8272a3
rsi : 0x1
rsp : 0x7fffffffffefc00
0x8272a3:	cmp	eax, -1
0x8272a6:	je	0x8272c0

0x827eb8 => 0x827270(wait_on_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x8272c0
stashes  [<SimState @ 0x8272c0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x1388
r15b : 0x88
r15d : 0x1388
r15w : 0x1388
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x24
rbx : 0x7fffffffffefc08
rcx : 0x7e88c4
rdi : 0x7fffffffffefc08
rdx : 0xffffffffffffff80
rflags : 0x44
rip : 0x8272c0
rsi : 0x1
rsp : 0x7fffffffffefc00
0x8272c0:	mov	rbp, qword ptr [rip + 0x286ba1]
0x8272c7:	cmp	dword ptr fs:[rbp], 4
0x8272cc:	jne	0x8272a8

0x827eb8 => 0x827270(wait_on_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x8272a8
stashes  [<SimState @ 0x8272a8>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x1388
r15b : 0x88
r15d : 0x1388
r15w : 0x1388
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0xffffffffffffff80
rbx : 0x7fffffffffefc08
rcx : 0x7e88c4
rdi : 0x7fffffffffefc08
rdx : 0xffffffffffffff80
rflags : 0x0
rip : 0x8272a8
rsi : 0x1
rsp : 0x7fffffffffefc00
0x8272a8:	add	rsp, 0x28
0x8272ac:	pop	rbx
0x8272ad:	pop	rbp
0x8272ae:	pop	r12
0x8272b0:	pop	r13
0x8272b2:	pop	r14
0x8272b4:	pop	r15
0x8272b6:	ret	

0x827eb8 => 0x827270(wait_on_socket)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x827ec4
stashes  [<SimState @ 0x827ec4>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x24
rbx : 0x3
rcx : 0x7e88c4
rdi : 0x7fffffffffefc08
rdx : 0xffffffffffffff80
rflags : 0x4
rip : 0x827ec4
rsi : 0x1
rsp : 0x7fffffffffefc60
0x827ec4:	test	eax, eax
0x827ec6:	jg	0x827ed8

0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x827ec8
stashes  [<SimState @ 0x827ec8>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x24
rbx : 0x3
rcx : 0x7e88c4
rdi : 0x7fffffffffefc08
rdx : 0xffffffffffffff80
rflags : 0x84
rip : 0x827ec8
rsi : 0x1
rsp : 0x7fffffffffefc60
0x827ec8:	jmp	0x827efb

0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x827efb
stashes  [<SimState @ 0x827efb>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x24
rbx : 0x3
rcx : 0x7e88c4
rdi : 0x7fffffffffefc08
rdx : 0xffffffffffffff80
rflags : 0x84
rip : 0x827efb
rsi : 0x1
rsp : 0x7fffffffffefc60
0x827efb:	mov	edi, ebx
0x827efd:	call	0x7e4e50

0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x7e4e50
stashes  [<SimState @ 0x7e4e50>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x24
rbx : 0x3
rcx : 0x7e88c4
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x84
rip : 0x7e4e50
rsi : 0x1
rsp : 0x7fffffffffefc58
0x7e4e50:	mov	eax, 3
0x7e4e55:	syscall	

0x827efb => 0x7e4e50(__close_nocancel)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x1d00184
stashes  [<SimState @ 0x1d00184>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x3
rbp : 0x24
rbx : 0x3
rcx : 0x7e4e57
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x84
rip : 0x1d00184
rsi : 0x1
rsp : 0x7fffffffffefc58
0x1d00184:	add	byte ptr [rax], al
0x1d00186:	add	byte ptr [rax], al
0x1d00188:	add	byte ptr [rax], al
0x1d0018a:	add	byte ptr [rax], al
0x1d0018c:	add	byte ptr [rax], al
0x1d0018e:	add	byte ptr [rax], al
0x1d00190:	add	byte ptr [rax], al
0x1d00192:	add	byte ptr [rax], al
0x1d00194:	add	byte ptr [rax], al
0x1d00196:	add	byte ptr [rax], al
0x1d00198:	add	byte ptr [rax], al
0x1d0019a:	add	byte ptr [rax], al
0x1d0019c:	add	byte ptr [rax], al
0x1d0019e:	add	byte ptr [rax], al
0x1d001a0:	add	byte ptr [rax], al
0x1d001a2:	add	byte ptr [rax], al
0x1d001a4:	add	byte ptr [rax], al
0x1d001a6:	add	byte ptr [rax], al
0x1d001a8:	add	byte ptr [rax], al
0x1d001aa:	add	byte ptr [rax], al
0x1d001ac:	add	byte ptr [rax], al
0x1d001ae:	add	byte ptr [rax], al
0x1d001b0:	add	byte ptr [rax], al
0x1d001b2:	add	byte ptr [rax], al
0x1d001b4:	add	byte ptr [rax], al
0x1d001b6:	add	byte ptr [rax], al
0x1d001b8:	add	byte ptr [rax], al
0x1d001ba:	add	byte ptr [rax], al
0x1d001bc:	add	byte ptr [rax], al
0x1d001be:	add	byte ptr [rax], al
0x1d001c0:	add	byte ptr [rax], al
0x1d001c2:	add	byte ptr [rax], al
0x1d001c4:	add	byte ptr [rax], al
0x1d001c6:	add	byte ptr [rax], al
0x1d001c8:	add	byte ptr [rax], al
0x1d001ca:	add	byte ptr [rax], al
0x1d001cc:	add	byte ptr [rax], al
0x1d001ce:	add	byte ptr [rax], al
0x1d001d0:	add	byte ptr [rax], al
0x1d001d2:	add	byte ptr [rax], al
0x1d001d4:	add	byte ptr [rax], al
0x1d001d6:	add	byte ptr [rax], al
0x1d001d8:	add	byte ptr [rax], al
0x1d001da:	add	byte ptr [rax], al
0x1d001dc:	add	byte ptr [rax], al
0x1d001de:	add	byte ptr [rax], al
0x1d001e0:	add	byte ptr [rax], al
0x1d001e2:	add	byte ptr [rax], al
0x1d001e4:	add	byte ptr [rax], al
0x1d001e6:	add	byte ptr [rax], al
0x1d001e8:	add	byte ptr [rax], al
0x1d001ea:	add	byte ptr [rax], al
0x1d001ec:	add	byte ptr [rax], al
0x1d001ee:	add	byte ptr [rax], al
0x1d001f0:	add	byte ptr [rax], al
0x1d001f2:	add	byte ptr [rax], al
0x1d001f4:	add	byte ptr [rax], al
0x1d001f6:	add	byte ptr [rax], al
0x1d001f8:	add	byte ptr [rax], al
0x1d001fa:	add	byte ptr [rax], al
0x1d001fc:	add	byte ptr [rax], al
0x1d001fe:	add	byte ptr [rax], al
0x1d00200:	add	byte ptr [rax], al
0x1d00202:	add	byte ptr [rax], al
0x1d00204:	add	byte ptr [rax], al
0x1d00206:	add	byte ptr [rax], al
0x1d00208:	add	byte ptr [rax], al
0x1d0020a:	add	byte ptr [rax], al
0x1d0020c:	add	byte ptr [rax], al
0x1d0020e:	add	byte ptr [rax], al
0x1d00210:	add	byte ptr [rax], al
0x1d00212:	add	byte ptr [rax], al
0x1d00214:	add	byte ptr [rax], al
0x1d00216:	add	byte ptr [rax], al
0x1d00218:	add	byte ptr [rax], al
0x1d0021a:	add	byte ptr [rax], al
0x1d0021c:	add	byte ptr [rax], al
0x1d0021e:	add	byte ptr [rax], al
0x1d00220:	add	byte ptr [rax], al
0x1d00222:	add	byte ptr [rax], al
0x1d00224:	add	byte ptr [rax], al
0x1d00226:	add	byte ptr [rax], al
0x1d00228:	add	byte ptr [rax], al
0x1d0022a:	add	byte ptr [rax], al
0x1d0022c:	add	byte ptr [rax], al
0x1d0022e:	add	byte ptr [rax], al
0x1d00230:	add	byte ptr [rax], al
0x1d00232:	add	byte ptr [rax], al
0x1d00234:	add	byte ptr [rax], al
0x1d00236:	add	byte ptr [rax], al
0x1d00238:	add	byte ptr [rax], al
0x1d0023a:	add	byte ptr [rax], al
0x1d0023c:	add	byte ptr [rax], al
0x1d0023e:	add	byte ptr [rax], al
0x1d00240:	add	byte ptr [rax], al
0x1d00242:	add	byte ptr [rax], al
0x1d00244:	add	byte ptr [rax], al
0x1d00246:	add	byte ptr [rax], al
0x1d00248:	add	byte ptr [rax], al

0x827efb => 0x7e4e50(__close_nocancel)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x7e4e57
stashes  [<SimState @ 0x7e4e57>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x24
rbx : 0x3
rcx : 0x7e4e57
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x84
rip : 0x7e4e57
rsi : 0x1
rsp : 0x7fffffffffefc58
0x7e4e57:	cmp	rax, -0x1000
0x7e4e5d:	ja	0x7e4e68

0x827efb => 0x7e4e50(__close_nocancel)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x7e4e5f
stashes  [<SimState @ 0x7e4e5f>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x24
rbx : 0x3
rcx : 0x7e4e57
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x5
rip : 0x7e4e5f
rsi : 0x1
rsp : 0x7fffffffffefc58
0x7e4e5f:	ret	

0x827efb => 0x7e4e50(__close_nocancel)
0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x827f02
stashes  [<SimState @ 0x827f02>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x24
rbx : 0x3
rcx : 0x7e4e57
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x5
rip : 0x827f02
rsi : 0x1
rsp : 0x7fffffffffefc60
0x827f02:	mov	dword ptr fs:[r13], r14d
0x827f07:	mov	ebx, 0xffffffff
0x827f0c:	jmp	0x827ef0

0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x827ef0
stashes  [<SimState @ 0x827ef0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x7fffffffffefcf0
r12b : 0xf0
r12d : 0xfffefcf0
r12w : 0xfcf0
r13 : 0xffffffffffffff80
r13b : 0x80
r13d : 0xffffff80
r13w : 0xff80
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x24
rbx : 0xffffffff
rcx : 0x7e4e57
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x5
rip : 0x827ef0
rsi : 0x1
rsp : 0x7fffffffffefc60
0x827ef0:	mov	eax, ebx
0x827ef2:	pop	rbx
0x827ef3:	pop	rbp
0x827ef4:	pop	r12
0x827ef6:	pop	r13
0x827ef8:	pop	r14
0x827efa:	ret	

0x82465b => 0x827e80(__nscd_open_socket)
0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x824676
stashes  [<SimState @ 0x824676>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x400
r13b : 0x0
r13d : 0x400
r13w : 0x400
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0xab0ee0
rbx : 0xffffffffffffffff
rcx : 0x7e4e57
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x5
rip : 0x824676
rsi : 0x1
rsp : 0x7fffffffffefc90
0x824676:	mov	r13d, eax
0x824679:	xor	esi, esi
0x82467b:	mov	rax, -1
0x824682:	cmp	r13d, -1
0x824686:	je	0x8246e0

0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x8246e0
stashes  [<SimState @ 0x8246e0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xffffffff
r13b : 0xff
r13d : 0xffffffff
r13w : 0xffff
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0xab0ee0
rbx : 0xffffffffffffffff
rcx : 0x7e4e57
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x44
rip : 0x8246e0
rsi : 0x0
rsp : 0x7fffffffffefc90
0x8246e0:	mov	dword ptr [rip + 0x28f386], 1
0x8246ea:	mov	ebp, 0xffffffff
0x8246ef:	jmp	0x8246c7

0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:16 active states =  1 rip =  0x8246c7
stashes  [<SimState @ 0x8246c7>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xffffffff
r13b : 0xff
r13d : 0xffffffff
r13w : 0xffff
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0xffffffff
rbx : 0xffffffffffffffff
rcx : 0x7e4e57
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x44
rip : 0x8246c7
rsi : 0x0
rsp : 0x7fffffffffefc90
0x8246c7:	cmp	rbx, -1
0x8246cb:	je	0x8245f5

0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x8245f5
stashes  [<SimState @ 0x8245f5>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xffffffff
r13b : 0xff
r13d : 0xffffffff
r13w : 0xffff
r14 : 0xab0ee0
r14b : 0xe0
r14d : 0xab0ee0
r14w : 0xee0
r15 : 0xc0000022
r15b : 0x22
r15d : 0xc0000022
r15w : 0x22
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0xffffffff
rbx : 0xffffffffffffffff
rcx : 0x7e4e57
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x44
rip : 0x8245f5
rsi : 0x0
rsp : 0x7fffffffffefc90
0x8245f5:	add	rsp, 0x98
0x8245fc:	mov	eax, ebp
0x8245fe:	pop	rbx
0x8245ff:	pop	rbp
0x824600:	pop	r12
0x824602:	pop	r13
0x824604:	pop	r14
0x824606:	pop	r15
0x824608:	ret	

0x8248e1 => 0x824530(nscd_getpw_r)
0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x8248fe
stashes  [<SimState @ 0x8248fe>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0xc0000036
r12b : 0x36
r12d : 0xc0000036
r12w : 0x36
r13 : 0x400
r13b : 0x0
r13d : 0x400
r13w : 0x400
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0xab0ee0
rbx : 0xc0000022
rcx : 0x7e4e57
rdi : 0x3
rdx : 0xffffffffffffff80
rflags : 0x4
rip : 0x8248fe
rsi : 0x0
rsp : 0x7fffffffffefd60
0x8248fe:	pop	rdx
0x8248ff:	pop	rcx
0x824900:	pop	rbx
0x824901:	pop	rbp
0x824902:	pop	r12
0x824904:	pop	r13
0x824906:	pop	r14
0x824908:	ret	

0x7c08c7 => 0x8248c0(__nscd_getpwnam_r)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x7c08e1
stashes  [<SimState @ 0x7c08e1>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x400
r12b : 0x0
r12d : 0x400
r12w : 0x400
r13 : 0xab0ee0
r13b : 0xe0
r13d : 0xab0ee0
r13w : 0xee0
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0xc0000022
rbx : 0x400
rcx : 0x8248e1
rdi : 0x3
rdx : 0x7fffffffffefe38
rflags : 0x4
rip : 0x7c08e1
rsi : 0x0
rsp : 0x7fffffffffefda0
0x7c08e1:	test	eax, eax
0x7c08e3:	mov	dword ptr [rsp + 0x34], eax
0x7c08e7:	js	0x7c0774

0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x7c0774
stashes  [<SimState @ 0x7c0774>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x400
r12b : 0x0
r12d : 0x400
r12w : 0x400
r13 : 0xab0ee0
r13b : 0xe0
r13d : 0xab0ee0
r13w : 0xee0
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0xc0000022
rbx : 0x400
rcx : 0x8248e1
rdi : 0x3
rdx : 0x7fffffffffefe38
rflags : 0x84
rip : 0x7c0774
rsi : 0x0
rsp : 0x7fffffffffefda0
0x7c0774:	cmp	byte ptr [rip + 0x2f0815], 0
0x7c077b:	je	0x7c09e3

0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x7c09e3
stashes  [<SimState @ 0x7c09e3>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x400
r12b : 0x0
r12d : 0x400
r12w : 0x400
r13 : 0xab0ee0
r13b : 0xe0
r13d : 0xab0ee0
r13w : 0xee0
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0xc0000022
rbx : 0x400
rcx : 0x8248e1
rdi : 0x3
rdx : 0x7fffffffffefe38
rflags : 0x44
rip : 0x7c09e3
rsi : 0x0
rsp : 0x7fffffffffefda0
0x7c09e3:	lea	rcx, [rsp + 0x48]
0x7c09e8:	lea	rdi, [rsp + 0x40]
0x7c09ed:	lea	rsi, [rip + 0xb6de3]
0x7c09f4:	xor	edx, edx
0x7c09f6:	call	0x815a70

0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x815a70
stashes  [<SimState @ 0x815a70>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x400
r12b : 0x0
r12d : 0x400
r12w : 0x400
r13 : 0xab0ee0
r13b : 0xe0
r13d : 0xab0ee0
r13w : 0xee0
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0xc0000022
rbx : 0x400
rcx : 0x7fffffffffefde8
rdi : 0x7fffffffffefde0
rdx : 0x0
rflags : 0x44
rip : 0x815a70
rsi : 0x8777d7
rsp : 0x7fffffffffefd98
0x815a70:	push	r13
0x815a72:	push	r12
0x815a74:	mov	r13, rcx
0x815a77:	push	rbp
0x815a78:	push	rbx
0x815a79:	mov	rbp, rsi
0x815a7c:	mov	rbx, rdi
0x815a7f:	mov	r12, rdx
0x815a82:	sub	rsp, 8
0x815a86:	mov	rax, qword ptr [rip + 0x29d3ab]
0x815a8d:	test	rax, rax
0x815a90:	je	0x815ab0

0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x815ab0
stashes  [<SimState @ 0x815ab0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7fffffffffefde8
r13b : 0xe8
r13d : 0xfffefde8
r13w : 0xfde8
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x8777d7
rbx : 0x7fffffffffefde0
rcx : 0x7fffffffffefde8
rdi : 0x7fffffffffefde0
rdx : 0x0
rflags : 0x44
rip : 0x815ab0
rsi : 0x8777d7
rsp : 0x7fffffffffefd70
0x815ab0:	lea	rcx, [rip + 0x29d381]
0x815ab7:	lea	rdx, [rip + 0x62054]
0x815abe:	lea	rdi, [rip + 0x639b3]
0x815ac5:	xor	esi, esi
0x815ac7:	call	0x814000

0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x814000
stashes  [<SimState @ 0x814000>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7fffffffffefde8
r13b : 0xe8
r13d : 0xfffefde8
r13w : 0xfde8
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x8777d7
rbx : 0x7fffffffffefde0
rcx : 0xab2e38
rdi : 0x879478
rdx : 0x877b12
rflags : 0x44
rip : 0x814000
rsi : 0x0
rsp : 0x7fffffffffefd68
0x814000:	push	r15
0x814002:	push	r14
0x814004:	xor	eax, eax
0x814006:	push	r13
0x814008:	push	r12
0x81400a:	mov	r12, rsi
0x81400d:	push	rbp
0x81400e:	push	rbx
0x81400f:	mov	rbp, rdi
0x814012:	mov	rbx, rcx
0x814015:	mov	esi, 1
0x81401a:	sub	rsp, 0x58
0x81401e:	cmp	dword ptr [rip + 0x29f8d3], 0
0x814025:	je	0x814033

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x814033
stashes  [<SimState @ 0x814033>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7fffffffffefde8
r13b : 0xe8
r13d : 0xfffefde8
r13w : 0xfde8
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x879478
rbx : 0xab2e38
rcx : 0xab2e38
rdi : 0x879478
rdx : 0x877b12
rflags : 0x44
rip : 0x814033
rsi : 0x1
rsp : 0x7fffffffffefce0
0x814033:	cmpxchg	dword ptr [rip + 0x29ee76], esi
0x81403a:	je	0x814056

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x814056
stashes  [<SimState @ 0x814056>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7fffffffffefde8
r13b : 0xe8
r13d : 0xfffefde8
r13w : 0xfde8
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x879478
rbx : 0xab2e38
rcx : 0xab2e38
rdi : 0x879478
rdx : 0x877b12
rflags : 0x44
rip : 0x814056
rsi : 0x1
rsp : 0x7fffffffffefce0
0x814056:	cmp	qword ptr [rbx], 0
0x81405a:	je	0x8140a8

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x8140a8
stashes  [<SimState @ 0x8140a8>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x7fffffffffefde8
r13b : 0xe8
r13d : 0xfffefde8
r13w : 0xfde8
r14 : 0x7fffffffffefe38
r14b : 0x38
r14d : 0xfffefe38
r14w : 0xfe38
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x879478
rbx : 0xab2e38
rcx : 0xab2e38
rdi : 0x879478
rdx : 0x877b12
rflags : 0x44
rip : 0x8140a8
rsi : 0x1
rsp : 0x7fffffffffefce0
0x8140a8:	mov	r14, qword ptr [rip + 0x29edf9]
0x8140af:	mov	r13, rdx
0x8140b2:	test	r14, r14
0x8140b5:	je	0x8141e0

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x8141e0
stashes  [<SimState @ 0x8141e0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x879478
rbx : 0xab2e38
rcx : 0xab2e38
rdi : 0x879478
rdx : 0x877b12
rflags : 0x44
rip : 0x8141e0
rsi : 0x1
rsp : 0x7fffffffffefce0
0x8141e0:	lea	rsi, [rip + 0x61b0c]
0x8141e7:	lea	rdi, [rip + 0x6525a]
0x8141ee:	call	0x76c360

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x76c360
stashes  [<SimState @ 0x76c360>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x879478
rbx : 0xab2e38
rcx : 0xab2e38
rdi : 0x879448
rdx : 0x877b12
rflags : 0x44
rip : 0x76c360
rsi : 0x875cf3
rsp : 0x7fffffffffefcd8
0x76c360:	mov	edx, 1
0x76c365:	jmp	0x76c250

0x8141e0 => 0x76c360(_IO_fopen@@GLIBC_2.2.5)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
== Before Malloc ==

0x8141e0 => 0x76c360(_IO_fopen@@GLIBC_2.2.5)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x2000ff0 size =  0x1ddc0 free =  True prev_size =  0x20 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
rip 76c360 malloc requested 9 with requst_size 216, allocated size 224, heap state before
== After Malloc ==

0x8141e0 => 0x76c360(_IO_fopen@@GLIBC_2.2.5)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]
rip 76c360 malloc called 9 with requst_size 216, allocated size 224, allocated at 0x2000ff0
Backtrace:
Frame 0: 0x8141e0 => 0x76c360, sp = 0x7fffffffffefcd8
Frame 1: 0x815ab0 => 0x814000, sp = 0x7fffffffffefd68
Frame 2: 0x7c09e3 => 0x815a70, sp = 0x7fffffffffefd98
Frame 3: 0x7c021f => 0x7c0730, sp = 0x7fffffffffefe28
Frame 4: 0x40517f => 0x401c20, sp = 0x7fffffffffefe68
Frame 5: 0x40210d => 0x4053c0, sp = 0x7fffffffffefef8
Frame 6: 0x1b01080 => 0x401dd0, sp = 0x7fffffffffeff28
Frame 7: 0x402450 => 0x7219a0, sp = 0x7fffffffffeff38
Frame 8: 0x0 => 0x0, sp = 0xffffffffffffffff
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x8141f3
stashes  [<SimState @ 0x8141f3>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0xffffffff
r15b : 0xff
r15d : 0xffffffff
r15w : 0xffff
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2001000
rbp : 0x879478
rbx : 0xab2e38
rcx : 0xab2e38
rdi : 0x879448
rdx : 0x877b12
rflags : 0x44
rip : 0x8141f3
rsi : 0x875cf3
rsp : 0x7fffffffffefce0
0x8141f3:	test	rax, rax
0x8141f6:	mov	r15, rax
0x8141f9:	je	0x8143d5

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x8141ff
stashes  [<SimState @ 0x8141ff>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2001000
rbp : 0x879478
rbx : 0xab2e38
rcx : 0xab2e38
rdi : 0x879448
rdx : 0x877b12
rflags : 0x4
rip : 0x8141ff
rsi : 0x875cf3
rsp : 0x7fffffffffefce0
0x8141ff:	or	dword ptr [rax], 0x8000
0x814205:	mov	edi, 0x10
0x81420a:	call	0x7212c0

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x7212c0
stashes  [<SimState @ 0x7212c0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2001000
rbp : 0x879478
rbx : 0xab2e38
rcx : 0xab2e38
rdi : 0x10
rdx : 0x877b12
rflags : 0x4
rip : 0x7212c0
rsi : 0x875cf3
rsp : 0x7fffffffffefcd8
0x7212c0:	jmp	qword ptr [rip + 0x38cb6a]

0x8141ff => 0x7212c0(malloc)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:35 active states =  1 rip =  0x780580
stashes  [<SimState @ 0x780580>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x2001000
rbp : 0x879478
rbx : 0xab2e38
rcx : 0xab2e38
rdi : 0x10
rdx : 0x877b12
rflags : 0x4
rip : 0x780580
rsi : 0x875cf3
rsp : 0x7fffffffffefcd8
0x780580:	push	rbp
0x780581:	push	rbx
0x780582:	sub	rsp, 0x18
0x780586:	mov	rax, qword ptr [rip + 0x32d953]
0x78058d:	mov	rax, qword ptr [rax]
0x780590:	test	rax, rax
0x780593:	jne	0x780720

0x8141ff => 0x7212c0(malloc)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x81420f
stashes  [<SimState @ 0x81420f>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000436
rbp : 0x879478
rbx : 0xab2e38
rcx : 0xab2e38
rdi : 0x10
rdx : 0x877b12
rflags : 0x4
rip : 0x81420f
rsi : 0x875cf3
rsp : 0x7fffffffffefce0
0x81420f:	test	rax, rax
0x814212:	mov	r14, rax
0x814215:	je	0x8143cd

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x81421b
stashes  [<SimState @ 0x81421b>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000436
rbp : 0x879478
rbx : 0xab2e38
rcx : 0xab2e38
rdi : 0x10
rdx : 0x877b12
rflags : 0x4
rip : 0x81421b
rsi : 0x875cf3
rsp : 0x7fffffffffefce0
0x81421b:	mov	qword ptr [rax], 0
0x814222:	mov	qword ptr [rax + 8], 0
0x81422a:	lea	rax, [rsp + 0x48]
0x81422f:	mov	qword ptr [rsp + 0x40], 0
0x814238:	mov	qword ptr [rsp + 0x48], 0
0x814241:	mov	qword ptr [rsp + 0x10], rax
0x814246:	lea	rax, [rsp + 0x40]
0x81424b:	mov	qword ptr [rsp + 0x18], 0
0x814254:	mov	qword ptr [rsp + 8], rax
0x814259:	nop	dword ptr [rax]
0x814260:	mov	rsi, qword ptr [rsp + 0x10]
0x814265:	mov	rdi, qword ptr [rsp + 8]
0x81426a:	mov	rdx, r15
0x81426d:	call	0x7696a0

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x7696a0
stashes  [<SimState @ 0x7696a0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefd20
rbp : 0x879478
rbx : 0xab2e38
rcx : 0xab2e38
rdi : 0x7fffffffffefd20
rdx : 0x2001000
rflags : 0x4
rip : 0x7696a0
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefcd8
0x7696a0:	mov	rcx, rdx
0x7696a3:	mov	edx, 0xa
0x7696a8:	jmp	0x76ced0

0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x76ced0
stashes  [<SimState @ 0x76ced0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefd20
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x2001000
rdi : 0x7fffffffffefd20
rdx : 0xa
rflags : 0x4
rip : 0x76ced0
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefcd8
0x76ced0:	push	r15
0x76ced2:	push	r14
0x76ced4:	push	r13
0x76ced6:	push	r12
0x76ced8:	push	rbp
0x76ced9:	push	rbx
0x76ceda:	sub	rsp, 0x28
0x76cede:	test	rdi, rdi
0x76cee1:	je	0x76d18d

0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x76cee7
stashes  [<SimState @ 0x76cee7>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefd20
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x2001000
rdi : 0x7fffffffffefd20
rdx : 0xa
rflags : 0x0
rip : 0x76cee7
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x76cee7:	test	rsi, rsi
0x76ceea:	je	0x76d18d

0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x76cef0
stashes  [<SimState @ 0x76cef0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefd20
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x2001000
rdi : 0x7fffffffffefd20
rdx : 0xa
rflags : 0x4
rip : 0x76cef0
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x76cef0:	mov	rbx, rcx
0x76cef3:	mov	ecx, dword ptr [rcx]
0x76cef5:	mov	dword ptr [rsp + 0x1c], edx
0x76cef9:	mov	qword ptr [rsp + 8], rsi
0x76cefe:	mov	rbp, rdi
0x76cf01:	mov	eax, ecx
0x76cf03:	and	eax, 0x8000
0x76cf08:	je	0x76cf30

0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x76cf0a
stashes  [<SimState @ 0x76cf0a>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x8000
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x8000
rdi : 0x7fffffffffefd20
rdx : 0xa
rflags : 0x4
rip : 0x76cf0a
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x76cf0a:	and	ecx, 0x20
0x76cf0d:	je	0x76cf94

0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x76cf94
stashes  [<SimState @ 0x76cf94>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x8000
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x0
rdi : 0x7fffffffffefd20
rdx : 0xa
rflags : 0x44
rip : 0x76cf94
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x76cf94:	cmp	qword ptr [rbp], 0
0x76cf99:	je	0x76cfa6

0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x76cfa6
stashes  [<SimState @ 0x76cfa6>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x8000
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x0
rdi : 0x7fffffffffefd20
rdx : 0xa
rflags : 0x44
rip : 0x76cfa6
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x76cfa6:	mov	rax, qword ptr [rsp + 8]
0x76cfab:	mov	edi, 0x78
0x76cfb0:	mov	qword ptr [rax], 0x78
0x76cfb7:	call	0x7212c0

0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x7212c0
stashes  [<SimState @ 0x7212c0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefd28
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x0
rdi : 0x78
rdx : 0xa
rflags : 0x44
rip : 0x7212c0
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc78
0x7212c0:	jmp	qword ptr [rip + 0x38cb6a]

0x76cfa6 => 0x7212c0(malloc)
0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x780580
stashes  [<SimState @ 0x780580>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefd28
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x0
rdi : 0x78
rdx : 0xa
rflags : 0x44
rip : 0x780580
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc78
0x780580:	push	rbp
0x780581:	push	rbx
0x780582:	sub	rsp, 0x18
0x780586:	mov	rax, qword ptr [rip + 0x32d953]
0x78058d:	mov	rax, qword ptr [rax]
0x780590:	test	rax, rax
0x780593:	jne	0x780720

0x76cfa6 => 0x7212c0(malloc)
0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x76cfbc
stashes  [<SimState @ 0x76cfbc>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000446
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x0
rdi : 0x78
rdx : 0xa
rflags : 0x44
rip : 0x76cfbc
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x76cfbc:	test	rax, rax
0x76cfbf:	mov	qword ptr [rbp], rax
0x76cfc3:	je	0x76d130

0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x76cfc9
stashes  [<SimState @ 0x76cfc9>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x4000
r10b : 0x0
r10d : 0x4000
r10w : 0x4000
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000446
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x0
rdi : 0x78
rdx : 0xa
rflags : 0x0
rip : 0x76cfc9
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x76cfc9:	mov	r10, qword ptr [rbx + 8]
0x76cfcd:	mov	r14, qword ptr [rbx + 0x10]
0x76cfd1:	sub	r14, r10
0x76cfd4:	test	r14, r14
0x76cfd7:	jle	0x76d170

0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x76d170
stashes  [<SimState @ 0x76d170>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x90b437993887bc00
r14b : 0x0
r14d : 0x3887bc00
r14w : 0xbc00
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000446
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x0
rdi : 0x78
rdx : 0xa
rflags : 0x84
rip : 0x76d170
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x76d170:	mov	rdi, rbx
0x76d173:	call	0x7796e0

0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x7796e0
stashes  [<SimState @ 0x7796e0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x90b437993887bc00
r14b : 0x0
r14d : 0x3887bc00
r14w : 0xbc00
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc0000446
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x0
rdi : 0x2001000
rdx : 0xa
rflags : 0x84
rip : 0x7796e0
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc78
0x7796e0:	mov	eax, dword ptr [rdi + 0xc0]
0x7796e6:	test	eax, eax
0x7796e8:	jne	0x779798

0x76d170 => 0x7796e0(__underflow)
0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x779798
stashes  [<SimState @ 0x779798>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x90b437993887bc00
r14b : 0x0
r14d : 0x3887bc00
r14w : 0xbc00
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x0
rdi : 0x2001000
rdx : 0xa
rflags : 0x84
rip : 0x779798
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc78
0x779798:	cmp	eax, -1
0x77979b:	je	0x7796f8

0x76d170 => 0x7796e0(__underflow)
0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x7797a1
stashes  [<SimState @ 0x7797a1>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x90b437993887bc00
r14b : 0x0
r14d : 0x3887bc00
r14w : 0xbc00
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x820000
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x0
rdi : 0x2001000
rdx : 0xa
rflags : 0x11
rip : 0x7797a1
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc78
0x7797a1:	mov	eax, 0xffffffff
0x7797a6:	ret	

0x76d170 => 0x7796e0(__underflow)
0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x76d178
stashes  [<SimState @ 0x76d178>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x90b437993887bc00
r14b : 0x0
r14d : 0x3887bc00
r14w : 0xbc00
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x0
rdi : 0x2001000
rdx : 0xa
rflags : 0x11
rip : 0x76d178
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x76d178:	cmp	eax, -1
0x76d17b:	je	0x76d130

0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x76d130
stashes  [<SimState @ 0x76d130>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x90b437993887bc00
r14b : 0x0
r14d : 0x3887bc00
r14w : 0xbc00
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x0
rdi : 0x2001000
rdx : 0xa
rflags : 0x44
rip : 0x76d130
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x76d130:	mov	eax, dword ptr [rbx]
0x76d132:	mov	r13, -1
0x76d139:	jmp	0x76d0ca

0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x76d0ca
stashes  [<SimState @ 0x76d0ca>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xffffffffffffffff
r13b : 0xff
r13d : 0xffffffff
r13w : 0xffff
r14 : 0x90b437993887bc00
r14b : 0x0
r14d : 0x3887bc00
r14w : 0xbc00
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x8000
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x0
rdi : 0x2001000
rdx : 0xa
rflags : 0x44
rip : 0x76d0ca
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x76d0ca:	test	ah, 0x80
0x76d0cd:	jne	0x76cf1a

0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x76cf1a
stashes  [<SimState @ 0x76cf1a>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0xffffffffffffffff
r13b : 0xff
r13d : 0xffffffff
r13w : 0xffff
r14 : 0x90b437993887bc00
r14b : 0x0
r14d : 0x3887bc00
r14w : 0xbc00
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x8000
rbp : 0x7fffffffffefd20
rbx : 0x2001000
rcx : 0x0
rdi : 0x2001000
rdx : 0xa
rflags : 0x80
rip : 0x76cf1a
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x76cf1a:	add	rsp, 0x28
0x76cf1e:	mov	rax, r13
0x76cf21:	pop	rbx
0x76cf22:	pop	rbp
0x76cf23:	pop	r12
0x76cf25:	pop	r13
0x76cf27:	pop	r14
0x76cf29:	pop	r15
0x76cf2b:	ret	

0x81421b => 0x7696a0(getline)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x814272
stashes  [<SimState @ 0x814272>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x0
rdi : 0x2001000
rdx : 0xa
rflags : 0x0
rip : 0x814272
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefce0
0x814272:	test	rax, rax
0x814275:	js	0x81431a

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x81431a
stashes  [<SimState @ 0x81431a>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x0
rdi : 0x2001000
rdx : 0xa
rflags : 0x84
rip : 0x81431a
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefce0
0x81431a:	mov	rdi, qword ptr [rsp + 0x40]
0x81431f:	call	0x7212c8

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x7212c8
stashes  [<SimState @ 0x7212c8>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x0
rdi : 0xc0000446
rdx : 0xa
rflags : 0x84
rip : 0x7212c8
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefcd8
0x7212c8:	jmp	qword ptr [rip + 0x38ccca]

0x81431a => 0x7212c8(free)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x780c10
stashes  [<SimState @ 0x780c10>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x0
rdi : 0xc0000446
rdx : 0xa
rflags : 0x84
rip : 0x780c10
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefcd8
0x780c10:	push	rbx
0x780c11:	sub	rsp, 0x10
0x780c15:	mov	rax, qword ptr [rip + 0x32d2cc]
0x780c1c:	mov	rax, qword ptr [rax]
0x780c1f:	test	rax, rax
0x780c22:	jne	0x780cd0

0x81431a => 0x7212c8(free)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x814324
stashes  [<SimState @ 0x814324>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x0
rdi : 0xc0000446
rdx : 0xa
rflags : 0x84
rip : 0x814324
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefce0
0x814324:	mov	rdi, r15
0x814327:	call	0x76b810

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x76b810
stashes  [<SimState @ 0x76b810>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffffffffffff
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x0
rdi : 0x2001000
rdx : 0xa
rflags : 0x84
rip : 0x76b810
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefcd8
0x76b810:	push	r12
0x76b812:	push	rbp
0x76b813:	push	rbx
0x76b814:	mov	eax, dword ptr [rdi]
0x76b816:	mov	rbx, rdi
0x76b819:	test	ah, 0x20
0x76b81c:	jne	0x76b8c8

0x814324 => 0x76b810(_IO_fclose@@GLIBC_2.2.5)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x81432c
stashes  [<SimState @ 0x81432c>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff00000000
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x0
rdi : 0x2001000
rdx : 0xa
rflags : 0x84
rip : 0x81432c
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefce0
0x81432c:	mov	qword ptr [rip + 0x29eb75], r14
0x814333:	jmp	0x8140bb

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x8140bb
stashes  [<SimState @ 0x8140bb>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0xc0000436
r14b : 0x36
r14d : 0xc0000436
r14w : 0x436
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff00000000
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x0
rdi : 0x2001000
rdx : 0xa
rflags : 0x84
rip : 0x8140bb
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefce0
0x8140bb:	mov	r14, qword ptr [r14]
0x8140be:	test	r12, r12
0x8140c1:	setne	byte ptr [rsp + 8]
0x8140c6:	test	r14, r14
0x8140c9:	je	0x81417f

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x81417f
stashes  [<SimState @ 0x81417f>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xffffffff00000000
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x0
rdi : 0x2001000
rdx : 0xa
rflags : 0x44
rip : 0x81417f
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefce0
0x81417f:	mov	rax, qword ptr [rbx]
0x814182:	test	rax, rax
0x814185:	jne	0x81410b

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x814187
stashes  [<SimState @ 0x814187>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x0
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x0
rdi : 0x2001000
rdx : 0xa
rflags : 0x44
rip : 0x814187
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefce0
0x814187:	lea	rax, [rip + 0x63984]
0x81418e:	test	r13, r13
0x814191:	cmove	r13, rax
0x814195:	mov	rdi, r13
0x814198:	call	0x8138d0

0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x8138d0
stashes  [<SimState @ 0x8138d0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x0
r12b : 0x0
r12d : 0x0
r12w : 0x0
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x0
r14b : 0x0
r14d : 0x0
r14w : 0x0
r15 : 0x2001000
r15b : 0x0
r15d : 0x2001000
r15w : 0x1000
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x877b12
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x0
rdi : 0x877b12
rdx : 0xa
rflags : 0x4
rip : 0x8138d0
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefcd8
0x8138d0:	push	r15
0x8138d2:	push	r14
0x8138d4:	push	r13
0x8138d6:	push	r12
0x8138d8:	mov	r12, rdi
0x8138db:	push	rbp
0x8138dc:	push	rbx
0x8138dd:	sub	rsp, 0x28
0x8138e1:	mov	rax, qword ptr [rip + 0x29a518]
0x8138e8:	mov	qword ptr [rsp + 0x18], 0
0x8138f1:	mov	r14, qword ptr fs:[rax]
0x8138f5:	lea	rax, [rsp + 0x18]
0x8138fa:	mov	qword ptr [rsp + 8], rax
0x8138ff:	mov	r15, r14
0x813902:	nop	word ptr [rax + rax]
0x813908:	movsx	rdx, byte ptr [r12]
0x81390d:	test	byte ptr [r15 + rdx*2 + 1], 0x20
0x813913:	jne	0x813a0a

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x813919
stashes  [<SimState @ 0x813919>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefc98
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x44
rip : 0x813919
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x813919:	test	dl, dl
0x81391b:	je	0x813bf8

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x813921
stashes  [<SimState @ 0x813921>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefc98
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x4
rip : 0x813921
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x813921:	cmp	dl, 0x5b
0x813924:	je	0x813bf8

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x81392a
stashes  [<SimState @ 0x81392a>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefc98
rbp : 0x879478
rbx : 0xab2e38
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x10
rip : 0x81392a
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x81392a:	mov	rbx, r12
0x81392d:	jmp	0x813942

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x813942
stashes  [<SimState @ 0x813942>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefc98
rbp : 0x879478
rbx : 0x877b12
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x10
rip : 0x813942
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x813942:	add	rbx, 1
0x813946:	movzx	ebp, byte ptr [rbx]
0x813949:	test	bpl, bpl
0x81394c:	jne	0x813930

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:36 active states =  1 rip =  0x813930
stashes  [<SimState @ 0x813930>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x7fffffffffefc98
rbp : 0x69
rbx : 0x877b13
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x4
rip : 0x813930
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x813930:	movsx	rax, bpl
0x813934:	test	byte ptr [r15 + rax*2 + 1], 0x20
0x81393a:	jne	0x81394e

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x81393c
stashes  [<SimState @ 0x81393c>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x69
rbp : 0x69
rbx : 0x877b13
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x44
rip : 0x81393c
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x81393c:	cmp	bpl, 0x5b
0x813940:	je	0x81394e

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x813942
stashes  [<SimState @ 0x813942>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x69
rbp : 0x69
rbx : 0x877b13
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x10
rip : 0x813942
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x813942:	add	rbx, 1
0x813946:	movzx	ebp, byte ptr [rbx]
0x813949:	test	bpl, bpl
0x81394c:	jne	0x813930

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x813930
stashes  [<SimState @ 0x813930>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x69
rbp : 0x6c
rbx : 0x877b14
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x4
rip : 0x813930
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x813930:	movsx	rax, bpl
0x813934:	test	byte ptr [r15 + rax*2 + 1], 0x20
0x81393a:	jne	0x81394e

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x81393c
stashes  [<SimState @ 0x81393c>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6c
rbp : 0x6c
rbx : 0x877b14
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x44
rip : 0x81393c
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x81393c:	cmp	bpl, 0x5b
0x813940:	je	0x81394e

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x813942
stashes  [<SimState @ 0x813942>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6c
rbp : 0x6c
rbx : 0x877b14
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x4
rip : 0x813942
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x813942:	add	rbx, 1
0x813946:	movzx	ebp, byte ptr [rbx]
0x813949:	test	bpl, bpl
0x81394c:	jne	0x813930

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x813930
stashes  [<SimState @ 0x813930>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x6c
rbp : 0x65
rbx : 0x877b15
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x4
rip : 0x813930
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x813930:	movsx	rax, bpl
0x813934:	test	byte ptr [r15 + rax*2 + 1], 0x20
0x81393a:	jne	0x81394e

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x81393c
stashes  [<SimState @ 0x81393c>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x65
rbp : 0x65
rbx : 0x877b15
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x44
rip : 0x81393c
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x81393c:	cmp	bpl, 0x5b
0x813940:	je	0x81394e

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x813942
stashes  [<SimState @ 0x813942>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x65
rbp : 0x65
rbx : 0x877b15
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x14
rip : 0x813942
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x813942:	add	rbx, 1
0x813946:	movzx	ebp, byte ptr [rbx]
0x813949:	test	bpl, bpl
0x81394c:	jne	0x813930

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x813930
stashes  [<SimState @ 0x813930>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x65
rbp : 0x73
rbx : 0x877b16
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x0
rip : 0x813930
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x813930:	movsx	rax, bpl
0x813934:	test	byte ptr [r15 + rax*2 + 1], 0x20
0x81393a:	jne	0x81394e

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x81393c
stashes  [<SimState @ 0x81393c>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x73
rbp : 0x73
rbx : 0x877b16
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x44
rip : 0x81393c
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x81393c:	cmp	bpl, 0x5b
0x813940:	je	0x81394e

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x813942
stashes  [<SimState @ 0x813942>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x73
rbp : 0x73
rbx : 0x877b16
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x14
rip : 0x813942
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x813942:	add	rbx, 1
0x813946:	movzx	ebp, byte ptr [rbx]
0x813949:	test	bpl, bpl
0x81394c:	jne	0x813930

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x81394e
stashes  [<SimState @ 0x81394e>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x73
rbp : 0x0
rbx : 0x877b17
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x44
rip : 0x81394e
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x81394e:	cmp	r12, rbx
0x813951:	je	0x813bf8

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x813957
stashes  [<SimState @ 0x813957>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x861140
r14b : 0x40
r14d : 0x861140
r14w : 0x1140
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x73
rbp : 0x0
rbx : 0x877b17
rcx : 0x0
rdi : 0x877b12
rdx : 0x66
rflags : 0x91
rip : 0x813957
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x813957:	mov	r14, rbx
0x81395a:	sub	r14, r12
0x81395d:	lea	rdi, [r14 + 0x31]
0x813961:	call	0x7212c0

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x7212c0
stashes  [<SimState @ 0x7212c0>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x73
rbp : 0x0
rbx : 0x877b17
rcx : 0x0
rdi : 0x36
rdx : 0x66
rflags : 0x4
rip : 0x7212c0
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc78
0x7212c0:	jmp	qword ptr [rip + 0x38cb6a]

0x813957 => 0x7212c0(malloc)
0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x780580
stashes  [<SimState @ 0x780580>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0x73
rbp : 0x0
rbx : 0x877b17
rcx : 0x0
rdi : 0x36
rdx : 0x66
rflags : 0x4
rip : 0x780580
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc78
0x780580:	push	rbp
0x780581:	push	rbx
0x780582:	sub	rsp, 0x18
0x780586:	mov	rax, qword ptr [rip + 0x32d953]
0x78058d:	mov	rax, qword ptr [rax]
0x780590:	test	rax, rax
0x780593:	jne	0x780720

0x813957 => 0x7212c0(malloc)
0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x813966
stashes  [<SimState @ 0x813966>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0x877b12
r13b : 0x12
r13d : 0x877b12
r13w : 0x7b12
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc00004be
rbp : 0x0
rbx : 0x877b17
rcx : 0x0
rdi : 0x36
rdx : 0x66
rflags : 0x4
rip : 0x813966
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x813966:	test	rax, rax
0x813969:	mov	r13, rax
0x81396c:	je	0x813bf8

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x813972
stashes  [<SimState @ 0x813972>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0xc00004be
r13b : 0xbe
r13d : 0xc00004be
r13w : 0x4be
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc00004be
rbp : 0x0
rbx : 0x877b17
rcx : 0x0
rdi : 0x36
rdx : 0x66
rflags : 0x4
rip : 0x813972
rsi : 0x7fffffffffefd28
rsp : 0x7fffffffffefc80
0x813972:	lea	rdi, [rax + 0x30]
0x813976:	mov	rdx, r14
0x813979:	mov	rsi, r12
0x81397c:	call	0x721230

0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x721230
stashes  [<SimState @ 0x721230>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0xc00004be
r13b : 0xbe
r13d : 0xc00004be
r13w : 0x4be
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc00004be
rbp : 0x0
rbx : 0x877b17
rcx : 0x0
rdi : 0xc00004ee
rdx : 0x5
rflags : 0x4
rip : 0x721230
rsi : 0x877b12
rsp : 0x7fffffffffefc78
0x721230:	jmp	qword ptr [rip + 0x38cf0a]

0x813972 => 0x721230()
0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x79dc00
stashes  [<SimState @ 0x79dc00>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0xc00004be
r13b : 0xbe
r13d : 0xc00004be
r13w : 0x4be
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc00004be
rbp : 0x0
rbx : 0x877b17
rcx : 0x0
rdi : 0xc00004ee
rdx : 0x5
rflags : 0x4
rip : 0x79dc00
rsi : 0x877b12
rsp : 0x7fffffffffefc78
0x79dc00:	mov	rax, rdi
0x79dc03:	add	rax, rdx
0x79dc06:	jmp	0x79dc23

0x813972 => 0x721230()
0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x79dc23
stashes  [<SimState @ 0x79dc23>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0xc00004be
r13b : 0xbe
r13d : 0xc00004be
r13w : 0x4be
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x861140
r15b : 0x40
r15d : 0x861140
r15w : 0x1140
r8 : 0x0
r8b : 0x0
r8d : 0x0
r8w : 0x0
r9 : 0x0
r9b : 0x0
r9d : 0x0
r9w : 0x0
rax : 0xc00004f3
rbp : 0x0
rbx : 0x877b17
rcx : 0x0
rdi : 0xc00004ee
rdx : 0x5
rflags : 0x14
rip : 0x79dc23
rsi : 0x877b12
rsp : 0x7fffffffffefc78
0x79dc23:	cmp	rdx, 0x10
0x79dc27:	jb	0x79dd27

0x813972 => 0x721230()
0x814187 => 0x8138d0(nss_parse_service_list)
0x815ab0 => 0x814000(__nss_database_lookup)
0x7c09e3 => 0x815a70(__nss_passwd_lookup2)
0x7c021f => 0x7c0730(getpwnam_r@@GLIBC_2.2.5)
0x40517f => 0x401c20(getpwnam)
0x40210d => 0x4053c0(parse_user_spec)
0x1b01080 => 0x401dd0(main)
0x402450 => 0x7219a0(__libc_start_main)
0x0 => 0x0()
posix out b''
posix err b''
10:07:37 active states =  1 rip =  0x79dd27
stashes  [<SimState @ 0x79dd27>] [<SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827482>, <SimState @ 0x7f390c>, <SimState @ 0x827560>, <SimState @ 0x7f3d10>, <SimState @ 0x827560>, <SimState @ 0x7e88cc>, <SimState @ 0x8272ce>, <SimState @ 0x76cf13>, <SimState @ 0x76cfdd>, <SimState @ 0x7796ee>, <SimState @ 0x7796f8>]
=============>

[91m[+] printing fastbins

[+][94m printing smallbins

[+][95m[1m Printing unsorted bins

[+] printing top chunk
[ address =  0x20010d0 size =  0x1dce0 free =  True prev_size =  0xe0 end address =  0x201edb0 ]

[+] [0mprinting allocated chunk
[ address =  0x2000000 size =  0x310 free =  False prev_size =  0x0 end address =  0x2000310 ]
[ address =  0x2000310 size =  0x20 free =  False prev_size =  0x310 end address =  0x2000330 ]
[ address =  0x2000330 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000940 ]
[ address =  0x2000940 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000960 ]
[ address =  0x2000960 size =  0x610 free =  False prev_size =  0x20 end address =  0x2000f70 ]
[ address =  0x2000f70 size =  0x20 free =  False prev_size =  0x610 end address =  0x2000f90 ]
[ address =  0x2000f90 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fb0 ]
[ address =  0x2000fb0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000fd0 ]
[ address =  0x2000fd0 size =  0x20 free =  False prev_size =  0x20 end address =  0x2000ff0 ]
[ address =  0x2000ff0 size =  0xe0 free =  False prev_size =  0x20 end address =  0x20010d0 ]

Regs
r10 : 0x1e24a5658b618400
r10b : 0x0
r10d : 0x8b618400
r10w : 0x8400
r11 : 0x0
r11b : 0x0
r11d : 0x0
r11w : 0x0
r12 : 0x877b12
r12b : 0x12
r12d : 0x877b12
r12w : 0x7b12
r13 : 0xc00004be
r13b : 0xbe
r13d : 0xc00004be
r13w : 0x4be
r14 : 0x5
r14b : 0x5
r14d : 0x5
r14w : 0x5
r15 : 0x861140
r15b : 0x40
r15d